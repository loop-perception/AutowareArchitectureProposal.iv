{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Autoware.IV # Autoware.IV metrics dashboard Autoware.IV design document","title":"Autoware.IV"},{"location":"#autowareiv","text":"Autoware.IV metrics dashboard Autoware.IV design document","title":"Autoware.IV"},{"location":"design_document_template/","text":"{package_name} # Purpose # Inner-workings / Algorithms # Inputs / Outputs # Parameters # Assumptions / Known limits # (Optional) Error detection and handling # (Optional) Performance characterization # (Optional) References/External links # (Optional) Future extensions / Unimplemented parts #","title":"{package_name}"},{"location":"design_document_template/#package_name","text":"","title":"{package_name}"},{"location":"design_document_template/#purpose","text":"","title":"Purpose"},{"location":"design_document_template/#inner-workings-algorithms","text":"","title":"Inner-workings / Algorithms"},{"location":"design_document_template/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"design_document_template/#parameters","text":"","title":"Parameters"},{"location":"design_document_template/#assumptions-known-limits","text":"","title":"Assumptions / Known limits"},{"location":"design_document_template/#optional-error-detection-and-handling","text":"","title":"(Optional) Error detection and handling"},{"location":"design_document_template/#optional-performance-characterization","text":"","title":"(Optional) Performance characterization"},{"location":"design_document_template/#optional-referencesexternal-links","text":"","title":"(Optional) References/External links"},{"location":"design_document_template/#optional-future-extensions-unimplemented-parts","text":"","title":"(Optional) Future extensions / Unimplemented parts"},{"location":"awapi/awapi_awiv_adapter/Readme/","text":"AWAPI_AWIV_ADAPTER # \u2713: confirmed, (blank): not confirmed get topic # /awapi/vehicle/get/status # get vehicle status MessageType: awapi_awiv_adapter/AwapiVehicleStatus \u2713 type name unit note \u2713 std_msgs/Header header \u2713 geometry_msgs/Pose pose position:[m] \u2713 awapi_awiv_adapter/Euler eulerangle [rad] roll/pitch/yaw geographic_msgs/GeoPoint geo_point lat/lon/alt \u2713 float64 velocity [m/s] \u2713 float64 acceleration [m/ss] calculate from velocity in awapi_adapter \u2713 float64 steering [rad] \u2713 float64 steering_velocity [rad/s] calculate from steering in awapi_adapter \u2713 float64 angular_velocity [rad/s] int32 gear according to autoware_vehicle_msgs/Shift float32 energy_level available only for golf-cart \u2713 int32 turn_signal according to autoware_vehicle_msgs/TurnSignal \u2713 float64 target_velocity [m/s] \u2713 float64 target_acceleration [m/ss] \u2713 float64 target_steering [rad] \u2713 float64 target_steering_velocity [rad/s] /awapi/autoware/get/status # get autoware status MessageType: awapi_awiv_adapter/AwapiVehicleStatus \u2713 type name unit note \u2713 std_msgs/Header header \u2713 string autoware_state \u2713 int32 control_mode according to autoware_vehicle_msgs/ControlMode manual/auto (changed by /awapi/autoware/put/engage) int32 gate_mode autoware_vehicle_msgs/GateMode auto/remote (it is valid only when control_mode=auto)) \u2713 bool emergency_stopped True in emergency mode \u2713 float32 current_max_velocity [m/s] autoware_system_msgs/HazardStatus hazard_status system hazard status \u2713 autoware_planning_msgs/StopReasonArray stop_reason \"stop_pose\" represents the position of \"base_link\" (not the head of the car) \u2713 diagnostic_msgs/DiagnosticStatus[] diagnostics output only diag. of leaf node (diag. of parent node are cut) \u2713 diagnostic_msgs/DiagnosticStatus[] error_diagnostics diagnostics that are the cause of system emergency \u2713 bool arrived_goal True if the autoware_state is changed from Driving to ArrivedGoal or WaitingForRoute. False if the autoware_state is changed to WaitingForEngage or Driving. Default False. specification of stop_reason stop_reason is output only when the following conditions are met. stop_point in stop_reason is close to /planning/scenario_planning/trajectory (within 10m). The distance between current position and stop_point is less than stop_reason_thresh_dist. /awapi/autoware/get/route # get route MessageType: autoware_planning_msgs/Route \u2713 type name unit note \u2713 autoware_planning_msgs/Route /awapi/autoware/get/stop_speed_exceeded # get flag of exceeding stop speed or not True: exceed the stop speed ( = \"cannot stop before the stop line\") False: not exceed the stop speed ( = \"no stop line in the trajectory\" or \"possible to stop before the stop line\" ) MessageType: autoware_planning_msgs/StopSpeedExceedStatus \u2713 type name unit note autoware_planning_msgs/StopSpeedExceedStatus - /awapi/prediction/get/objects # get predicted object MessageType: autoware_api_msgs/DynamicObjectArray \u2713 type name unit note \u2713 autoware_api_msgs/DynamicObjectArray /awapi/lane_change/get/status # get lane change information MessageType: awapi_awiv_adapter/LaneChangeStatus \u2713 type name unit note std_msgs/Header header bool force_lane_change_available True when lane change is available available: Physically lane changeable state (do not consider other vehicle) bool lane_change_ready True when lane change is ready ready: State that ego-vehicle can change lane without collision with other vehicle autoware_planning_msgs/Path candidate_path according to autoware_planning_msgs/Path /awapi/object_avoidance/get/status # get obstacle avoidance information MessageType: awapi_awiv_adapter/ObstacleAvoidanceStatus \u2713 type name unit note std_msgs/Header header bool obstacle_avoidance_ready True when obstacle avoidance is ready autoware_planning_msgs/Trajectory candidate_path according to autoware_planning_msgs/Trajectory Msg type is different from lane change candidate path /awapi/traffic_light/get/status # get recognition result of traffic light MessageType: autoware_api_msgs/TrafficLightStateArray \u2713 type name unit note autoware_api_msgs/TrafficLightStateArray /awapi/traffic_light/get/nearest_traffic_light_status # get recognition result of nearest traffic light MessageType: autoware_perception_msgs/LookingTrafficLightState type name unit note std_msgs/Header header autoware_perception_msgs/TrafficLightStateWithJudge perception traffic light information from autoware perception module autoware_perception_msgs/TrafficLightStateWithJudge external traffic light information from external tool/module autoware_perception_msgs/TrafficLightStateWithJudge final traffic light information used by the planning module finally The contents of TrafficLightStateWithJudge.msg is following. type name unit note autoware_perception_msgs/TrafficLightState state traffic light color/arrow uint8 judge 0:NONE, 1:STOP, 2:GO go/stop judgment based on the color/arrow of the traffic light /awapi/vehicle/get/door # get door status MessageType: autoware_api_msgs/DoorStatus.msg \u2713 type name unit note autoware_api_msgs/DoorStatus status 0:UNKNOWN, 1:DOOR_OPENED, 2:DOOR_CLOSED 3:DOOR_OPENING, 4:DOOR_CLOSING, 5:NOT_APPLICABLE available only for the vehicle using pacmod Now, available status is following: (0:UNKNOWN, 1:DOOR_OPENED, 2:DOOR_CLOSED, 5:NOT_APPLICABLE ). 5 (NOT_APPLICABLE) is published if the pacmod is not used Due to the specifications of pacmod, the last door open / close command is published as the status. The status is 0 (UNKNOWN) until the door open / close command is published once. put topic # /awapi/vehicle/put/velocity # set upper velocity MessageType: autoware_api_msgs/VelocityLimit \u2713 type name unit note \u2713 autoware_api_msgs/VelocityLimit max velocity /awapi/vehicle/put/stop # set temporary stop signal MessageType: autoware_api_msgs/StopCommand Specification send True: send upper velocity to 0 send False: resend last received upper velocity (if upper velocity have never received, send default_max_velocity value.) default_max_velocity refers to the param: /planning/scenario_planning/motion_velocity_optimizer/max_velocity \u2713 type name unit note \u2713 autoware_api_msgs/StopCommand /awapi/autoware/put/gate_mode # send gate mode (auto/remote) MessageType: autoware_control_msgs/GateMode \u2713 type name unit note autoware_control_msgs/GateMode /awapi/autoware/put/engage # send engage signal (both of autoware/engage and vehicle/engage) MessageType: autoware_vehicle_msgs/Engage \u2713 type name unit note \u2713 autoware_vehicle_msgs/Engage /awapi/autoware/put/goal # send goal pose MessageType: geometry_msgs/PoseStamped \u2713 type name unit note geometry_msgs/PoseStamped /awapi/autoware/put/route # send route MessageType: autoware_planning_msgs/Route \u2713 type name unit note \u2713 autoware_planning_msgs/Route /awapi/lane_change/put/approval # send lane change approval flag send True: start lane change when lane_change_ready is true MessageType: autoware_planning_msgs/LaneChangeCommand \u2713 type name unit note autoware_planning_msgs/msg/LaneChangeCommand /awapi/lane_change/put/force # send force lane change flag send True: start lane change when force_lane_change_available is true MessageType: autoware_planning_msgs/LaneChangeCommand \u2713 type name unit note autoware_planning_msgs/LaneChangeCommand /awapi/object_avoidance/put/approval # send object avoidance approval flag MessageType: autoware_planning_msgs/EnableAvoidance \u2713 type name unit note autoware_planning_msgs/EnableAvoidance /awapi/object_avoidance/put/force # send force object avoidance flag not implemented (Autoware does not have corresponded topic) \u2713 type name unit note /awapi/traffic_light/put/traffic_light_status # Overwrite the recognition result of traffic light MessageType: autoware_perception_msgs/TrafficLightStateArray \u2713 type name unit note autoware_perception_msgs/TrafficLightStateArray /awapi/vehicle/put/door # send door command MessageType: autoware_api_msgs/DoorCommand send True: open door send False: close door \u2713 type name unit note autoware_api_msgs/DoorCommand available only for the vehicle using pacmod /awapi/autoware/put/crosswalk_states # send crosswalk status forcibly rewrite the internal state of crosswalk module MessageType: autoware_api_msgs/CrossWalkStatus \u2713 type name unit note std_msgs/Header header int32 status 0:STOP, 1:GO, 2:SLOWDOWN /awapi/autoware/put/intersection_states # send intersection status forcibly rewrite the internal state of intersection module MessageType: autoware_api_msgs/CrosswalkStatus \u2713 type name unit note std_msgs/Header header int32 status 0:STOP, 1:GO /awapi/autoware/put/expand_stop_range # send expand range of the polygon used by obstacle stop [m] MessageType: autoware_planning_msgs/ExpandStopRange \u2713 type name unit note autoware_planning_msgs/ExpandStopRange","title":"AWAPI_AWIV_ADAPTER"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapi_awiv_adapter","text":"\u2713: confirmed, (blank): not confirmed","title":"AWAPI_AWIV_ADAPTER"},{"location":"awapi/awapi_awiv_adapter/Readme/#get-topic","text":"","title":"get topic"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapivehiclegetstatus","text":"get vehicle status MessageType: awapi_awiv_adapter/AwapiVehicleStatus \u2713 type name unit note \u2713 std_msgs/Header header \u2713 geometry_msgs/Pose pose position:[m] \u2713 awapi_awiv_adapter/Euler eulerangle [rad] roll/pitch/yaw geographic_msgs/GeoPoint geo_point lat/lon/alt \u2713 float64 velocity [m/s] \u2713 float64 acceleration [m/ss] calculate from velocity in awapi_adapter \u2713 float64 steering [rad] \u2713 float64 steering_velocity [rad/s] calculate from steering in awapi_adapter \u2713 float64 angular_velocity [rad/s] int32 gear according to autoware_vehicle_msgs/Shift float32 energy_level available only for golf-cart \u2713 int32 turn_signal according to autoware_vehicle_msgs/TurnSignal \u2713 float64 target_velocity [m/s] \u2713 float64 target_acceleration [m/ss] \u2713 float64 target_steering [rad] \u2713 float64 target_steering_velocity [rad/s]","title":"/awapi/vehicle/get/status"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowaregetstatus","text":"get autoware status MessageType: awapi_awiv_adapter/AwapiVehicleStatus \u2713 type name unit note \u2713 std_msgs/Header header \u2713 string autoware_state \u2713 int32 control_mode according to autoware_vehicle_msgs/ControlMode manual/auto (changed by /awapi/autoware/put/engage) int32 gate_mode autoware_vehicle_msgs/GateMode auto/remote (it is valid only when control_mode=auto)) \u2713 bool emergency_stopped True in emergency mode \u2713 float32 current_max_velocity [m/s] autoware_system_msgs/HazardStatus hazard_status system hazard status \u2713 autoware_planning_msgs/StopReasonArray stop_reason \"stop_pose\" represents the position of \"base_link\" (not the head of the car) \u2713 diagnostic_msgs/DiagnosticStatus[] diagnostics output only diag. of leaf node (diag. of parent node are cut) \u2713 diagnostic_msgs/DiagnosticStatus[] error_diagnostics diagnostics that are the cause of system emergency \u2713 bool arrived_goal True if the autoware_state is changed from Driving to ArrivedGoal or WaitingForRoute. False if the autoware_state is changed to WaitingForEngage or Driving. Default False. specification of stop_reason stop_reason is output only when the following conditions are met. stop_point in stop_reason is close to /planning/scenario_planning/trajectory (within 10m). The distance between current position and stop_point is less than stop_reason_thresh_dist.","title":"/awapi/autoware/get/status"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowaregetroute","text":"get route MessageType: autoware_planning_msgs/Route \u2713 type name unit note \u2713 autoware_planning_msgs/Route","title":"/awapi/autoware/get/route"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowaregetstop_speed_exceeded","text":"get flag of exceeding stop speed or not True: exceed the stop speed ( = \"cannot stop before the stop line\") False: not exceed the stop speed ( = \"no stop line in the trajectory\" or \"possible to stop before the stop line\" ) MessageType: autoware_planning_msgs/StopSpeedExceedStatus \u2713 type name unit note autoware_planning_msgs/StopSpeedExceedStatus -","title":"/awapi/autoware/get/stop_speed_exceeded"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapipredictiongetobjects","text":"get predicted object MessageType: autoware_api_msgs/DynamicObjectArray \u2713 type name unit note \u2713 autoware_api_msgs/DynamicObjectArray","title":"/awapi/prediction/get/objects"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapilane_changegetstatus","text":"get lane change information MessageType: awapi_awiv_adapter/LaneChangeStatus \u2713 type name unit note std_msgs/Header header bool force_lane_change_available True when lane change is available available: Physically lane changeable state (do not consider other vehicle) bool lane_change_ready True when lane change is ready ready: State that ego-vehicle can change lane without collision with other vehicle autoware_planning_msgs/Path candidate_path according to autoware_planning_msgs/Path","title":"/awapi/lane_change/get/status"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiobject_avoidancegetstatus","text":"get obstacle avoidance information MessageType: awapi_awiv_adapter/ObstacleAvoidanceStatus \u2713 type name unit note std_msgs/Header header bool obstacle_avoidance_ready True when obstacle avoidance is ready autoware_planning_msgs/Trajectory candidate_path according to autoware_planning_msgs/Trajectory Msg type is different from lane change candidate path","title":"/awapi/object_avoidance/get/status"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapitraffic_lightgetstatus","text":"get recognition result of traffic light MessageType: autoware_api_msgs/TrafficLightStateArray \u2713 type name unit note autoware_api_msgs/TrafficLightStateArray","title":"/awapi/traffic_light/get/status"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapitraffic_lightgetnearest_traffic_light_status","text":"get recognition result of nearest traffic light MessageType: autoware_perception_msgs/LookingTrafficLightState type name unit note std_msgs/Header header autoware_perception_msgs/TrafficLightStateWithJudge perception traffic light information from autoware perception module autoware_perception_msgs/TrafficLightStateWithJudge external traffic light information from external tool/module autoware_perception_msgs/TrafficLightStateWithJudge final traffic light information used by the planning module finally The contents of TrafficLightStateWithJudge.msg is following. type name unit note autoware_perception_msgs/TrafficLightState state traffic light color/arrow uint8 judge 0:NONE, 1:STOP, 2:GO go/stop judgment based on the color/arrow of the traffic light","title":"/awapi/traffic_light/get/nearest_traffic_light_status"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapivehiclegetdoor","text":"get door status MessageType: autoware_api_msgs/DoorStatus.msg \u2713 type name unit note autoware_api_msgs/DoorStatus status 0:UNKNOWN, 1:DOOR_OPENED, 2:DOOR_CLOSED 3:DOOR_OPENING, 4:DOOR_CLOSING, 5:NOT_APPLICABLE available only for the vehicle using pacmod Now, available status is following: (0:UNKNOWN, 1:DOOR_OPENED, 2:DOOR_CLOSED, 5:NOT_APPLICABLE ). 5 (NOT_APPLICABLE) is published if the pacmod is not used Due to the specifications of pacmod, the last door open / close command is published as the status. The status is 0 (UNKNOWN) until the door open / close command is published once.","title":"/awapi/vehicle/get/door"},{"location":"awapi/awapi_awiv_adapter/Readme/#put-topic","text":"","title":"put topic"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapivehicleputvelocity","text":"set upper velocity MessageType: autoware_api_msgs/VelocityLimit \u2713 type name unit note \u2713 autoware_api_msgs/VelocityLimit max velocity","title":"/awapi/vehicle/put/velocity"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapivehicleputstop","text":"set temporary stop signal MessageType: autoware_api_msgs/StopCommand Specification send True: send upper velocity to 0 send False: resend last received upper velocity (if upper velocity have never received, send default_max_velocity value.) default_max_velocity refers to the param: /planning/scenario_planning/motion_velocity_optimizer/max_velocity \u2713 type name unit note \u2713 autoware_api_msgs/StopCommand","title":"/awapi/vehicle/put/stop"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowareputgate_mode","text":"send gate mode (auto/remote) MessageType: autoware_control_msgs/GateMode \u2713 type name unit note autoware_control_msgs/GateMode","title":"/awapi/autoware/put/gate_mode"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowareputengage","text":"send engage signal (both of autoware/engage and vehicle/engage) MessageType: autoware_vehicle_msgs/Engage \u2713 type name unit note \u2713 autoware_vehicle_msgs/Engage","title":"/awapi/autoware/put/engage"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowareputgoal","text":"send goal pose MessageType: geometry_msgs/PoseStamped \u2713 type name unit note geometry_msgs/PoseStamped","title":"/awapi/autoware/put/goal"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowareputroute","text":"send route MessageType: autoware_planning_msgs/Route \u2713 type name unit note \u2713 autoware_planning_msgs/Route","title":"/awapi/autoware/put/route"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapilane_changeputapproval","text":"send lane change approval flag send True: start lane change when lane_change_ready is true MessageType: autoware_planning_msgs/LaneChangeCommand \u2713 type name unit note autoware_planning_msgs/msg/LaneChangeCommand","title":"/awapi/lane_change/put/approval"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapilane_changeputforce","text":"send force lane change flag send True: start lane change when force_lane_change_available is true MessageType: autoware_planning_msgs/LaneChangeCommand \u2713 type name unit note autoware_planning_msgs/LaneChangeCommand","title":"/awapi/lane_change/put/force"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiobject_avoidanceputapproval","text":"send object avoidance approval flag MessageType: autoware_planning_msgs/EnableAvoidance \u2713 type name unit note autoware_planning_msgs/EnableAvoidance","title":"/awapi/object_avoidance/put/approval"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiobject_avoidanceputforce","text":"send force object avoidance flag not implemented (Autoware does not have corresponded topic) \u2713 type name unit note","title":"/awapi/object_avoidance/put/force"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapitraffic_lightputtraffic_light_status","text":"Overwrite the recognition result of traffic light MessageType: autoware_perception_msgs/TrafficLightStateArray \u2713 type name unit note autoware_perception_msgs/TrafficLightStateArray","title":"/awapi/traffic_light/put/traffic_light_status"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapivehicleputdoor","text":"send door command MessageType: autoware_api_msgs/DoorCommand send True: open door send False: close door \u2713 type name unit note autoware_api_msgs/DoorCommand available only for the vehicle using pacmod","title":"/awapi/vehicle/put/door"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowareputcrosswalk_states","text":"send crosswalk status forcibly rewrite the internal state of crosswalk module MessageType: autoware_api_msgs/CrossWalkStatus \u2713 type name unit note std_msgs/Header header int32 status 0:STOP, 1:GO, 2:SLOWDOWN","title":"/awapi/autoware/put/crosswalk_states"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowareputintersection_states","text":"send intersection status forcibly rewrite the internal state of intersection module MessageType: autoware_api_msgs/CrosswalkStatus \u2713 type name unit note std_msgs/Header header int32 status 0:STOP, 1:GO","title":"/awapi/autoware/put/intersection_states"},{"location":"awapi/awapi_awiv_adapter/Readme/#awapiautowareputexpand_stop_range","text":"send expand range of the polygon used by obstacle stop [m] MessageType: autoware_planning_msgs/ExpandStopRange \u2713 type name unit note autoware_planning_msgs/ExpandStopRange","title":"/awapi/autoware/put/expand_stop_range"},{"location":"common/math/interpolation/","text":"Interpolation package # This package supplies linear and spline interpolation functions. Linear Interpolation # lerp(src_val, dst_val, ratio) (for scalar interpolation) interpolates src_val and dst_val with ratio . This will be replaced with std::lerp(src_val, dst_val, ratio) in C++20 . lerp(base_keys, base_values, query_keys) (for vector interpolation) applies linear regression to each two continuous points whose x values are base_keys and whose y values are base_values . Then it calculates interpolated values on y-axis for query_keys on x-axis. Spline Interpolation # slerp(base_keys, base_values, query_keys) (for vector interpolation) applies spline regression to each two continuous points whose x values are base_keys and whose y values are base_values . Then it calculates interpolated values on y-axis for query_keys on x-axis. Evaluation of calculation cost # We evaluated calculation cost of spline interpolation for 100 points, and adopted the best one which is tridiagonal matrix algorithm. Methods except for tridiagonal matrix algorithm exists in spline_interpolation package, which has been removed from Autoware. Method Calculation time Tridiagonal Matrix Algorithm 0.007 [ms] Preconditioned Conjugate Gradient 0.024 [ms] Successive Over-Relaxation 0.074 [ms] Spline Interpolation Algorithm # Assuming that the size of base_keys ( x_i x_i ) and base_values ( y_i y_i ) are N + 1 N + 1 , we aim to calculate spline interpolation with the following equation to interpolate between y_i y_i and y_{i+1} y_{i+1} . Y_i(x) = a_i (x - x_i)^3 + b_i (x - x_i)^2 + c_i (x - x_i) + d_i \\ \\ \\ (i = 0, \\dots, N-1) Y_i(x) = a_i (x - x_i)^3 + b_i (x - x_i)^2 + c_i (x - x_i) + d_i \\ \\ \\ (i = 0, \\dots, N-1) Constraints on spline interpolation are as follows. The number of constraints is 4N 4N , which is equal to the number of variables of spline interpolation. \\begin{align} Y_i (x_i) & = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y_i (x_{i+1}) & = y_{i+1} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y'_i (x_{i+1}) & = Y'_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_i (x_{i+1}) & = Y''_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_0 (x_0) & = 0 \\\\ Y''_{N-1} (x_N) & = 0 \\end{align} \\begin{align} Y_i (x_i) & = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y_i (x_{i+1}) & = y_{i+1} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y'_i (x_{i+1}) & = Y'_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_i (x_{i+1}) & = Y''_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_0 (x_0) & = 0 \\\\ Y''_{N-1} (x_N) & = 0 \\end{align} According to this article , spline interpolation is formulated as the following linear equation. \\begin{align} \\begin{pmatrix} 2(h_0 + h_1) & h_1 \\\\ h_0 & 2 (h_1 + h_2) & h_2 & & O \\\\ & & & \\ddots \\\\ O & & & & h_{N-2} & 2 (h_{N-2} + h_{N-1}) \\end{pmatrix} \\begin{pmatrix} v_1 \\\\ v_2 \\\\ v_3 \\\\ \\vdots \\\\ v_{N-1} \\end{pmatrix}= \\begin{pmatrix} w_1 \\\\ w_2 \\\\ w_3 \\\\ \\vdots \\\\ w_{N-1} \\end{pmatrix} \\end{align} \\begin{align} \\begin{pmatrix} 2(h_0 + h_1) & h_1 \\\\ h_0 & 2 (h_1 + h_2) & h_2 & & O \\\\ & & & \\ddots \\\\ O & & & & h_{N-2} & 2 (h_{N-2} + h_{N-1}) \\end{pmatrix} \\begin{pmatrix} v_1 \\\\ v_2 \\\\ v_3 \\\\ \\vdots \\\\ v_{N-1} \\end{pmatrix}= \\begin{pmatrix} w_1 \\\\ w_2 \\\\ w_3 \\\\ \\vdots \\\\ w_{N-1} \\end{pmatrix} \\end{align} where \\begin{align} h_i & = x_{i+1} - x_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ w_i & = 6 \\left(\\frac{y_{i+1} - y_{i+1}}{h_i} - \\frac{y_i - y_{i-1}}{h_{i-1}}\\right) \\ \\ \\ (i = 1, \\dots, N-1) \\end{align} \\begin{align} h_i & = x_{i+1} - x_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ w_i & = 6 \\left(\\frac{y_{i+1} - y_{i+1}}{h_i} - \\frac{y_i - y_{i-1}}{h_{i-1}}\\right) \\ \\ \\ (i = 1, \\dots, N-1) \\end{align} The coefficient matrix of this linear equation is tridiagonal matrix. Therefore, it can be solve with tridiagonal matrix algorithm, which can solve linear equations without gradient descent methods. Solving this linear equation with tridiagonal matrix algorithm, we can calculate coefficients of spline interpolation as follows. \\begin{align} a_i & = \\frac{v_{i+1} - v_i}{6 (x_{i+1} - x_i)} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ b_i & = \\frac{v_i}{2} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ c_i & = \\frac{y_{i+1} - y_i}{x_{i+1} - x_i} - \\frac{1}{6}(x_{i+1} - x_i)(2 v_i + v_{i+1}) \\ \\ \\ (i = 0, \\dots, N-1) \\\\ d_i & = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\end{align} \\begin{align} a_i & = \\frac{v_{i+1} - v_i}{6 (x_{i+1} - x_i)} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ b_i & = \\frac{v_i}{2} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ c_i & = \\frac{y_{i+1} - y_i}{x_{i+1} - x_i} - \\frac{1}{6}(x_{i+1} - x_i)(2 v_i + v_{i+1}) \\ \\ \\ (i = 0, \\dots, N-1) \\\\ d_i & = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\end{align} Tridiagonal Matrix Algorithm # We solve tridiagonal linear equation according to this article where variables of linear equation are expressed as follows in the implementation. \\begin{align} \\begin{pmatrix} b_0 & c_0 & & \\\\ a_0 & b_1 & c_2 & O \\\\ & & \\ddots \\\\ O & & a_{N-2} & b_{N-1} \\end{pmatrix} x = \\begin{pmatrix} d_0 \\\\ d_2 \\\\ d_3 \\\\ \\vdots \\\\ d_{N-1} \\end{pmatrix} \\end{align} \\begin{align} \\begin{pmatrix} b_0 & c_0 & & \\\\ a_0 & b_1 & c_2 & O \\\\ & & \\ddots \\\\ O & & a_{N-2} & b_{N-1} \\end{pmatrix} x = \\begin{pmatrix} d_0 \\\\ d_2 \\\\ d_3 \\\\ \\vdots \\\\ d_{N-1} \\end{pmatrix} \\end{align}","title":"Interpolation package"},{"location":"common/math/interpolation/#interpolation-package","text":"This package supplies linear and spline interpolation functions.","title":"Interpolation package"},{"location":"common/math/interpolation/#linear-interpolation","text":"lerp(src_val, dst_val, ratio) (for scalar interpolation) interpolates src_val and dst_val with ratio . This will be replaced with std::lerp(src_val, dst_val, ratio) in C++20 . lerp(base_keys, base_values, query_keys) (for vector interpolation) applies linear regression to each two continuous points whose x values are base_keys and whose y values are base_values . Then it calculates interpolated values on y-axis for query_keys on x-axis.","title":"Linear Interpolation"},{"location":"common/math/interpolation/#spline-interpolation","text":"slerp(base_keys, base_values, query_keys) (for vector interpolation) applies spline regression to each two continuous points whose x values are base_keys and whose y values are base_values . Then it calculates interpolated values on y-axis for query_keys on x-axis.","title":"Spline Interpolation"},{"location":"common/math/interpolation/#evaluation-of-calculation-cost","text":"We evaluated calculation cost of spline interpolation for 100 points, and adopted the best one which is tridiagonal matrix algorithm. Methods except for tridiagonal matrix algorithm exists in spline_interpolation package, which has been removed from Autoware. Method Calculation time Tridiagonal Matrix Algorithm 0.007 [ms] Preconditioned Conjugate Gradient 0.024 [ms] Successive Over-Relaxation 0.074 [ms]","title":"Evaluation of calculation cost"},{"location":"common/math/interpolation/#spline-interpolation-algorithm","text":"Assuming that the size of base_keys ( x_i x_i ) and base_values ( y_i y_i ) are N + 1 N + 1 , we aim to calculate spline interpolation with the following equation to interpolate between y_i y_i and y_{i+1} y_{i+1} . Y_i(x) = a_i (x - x_i)^3 + b_i (x - x_i)^2 + c_i (x - x_i) + d_i \\ \\ \\ (i = 0, \\dots, N-1) Y_i(x) = a_i (x - x_i)^3 + b_i (x - x_i)^2 + c_i (x - x_i) + d_i \\ \\ \\ (i = 0, \\dots, N-1) Constraints on spline interpolation are as follows. The number of constraints is 4N 4N , which is equal to the number of variables of spline interpolation. \\begin{align} Y_i (x_i) & = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y_i (x_{i+1}) & = y_{i+1} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y'_i (x_{i+1}) & = Y'_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_i (x_{i+1}) & = Y''_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_0 (x_0) & = 0 \\\\ Y''_{N-1} (x_N) & = 0 \\end{align} \\begin{align} Y_i (x_i) & = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y_i (x_{i+1}) & = y_{i+1} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ Y'_i (x_{i+1}) & = Y'_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_i (x_{i+1}) & = Y''_{i+1} (x_{i+1}) \\ \\ \\ (i = 0, \\dots, N-2) \\\\ Y''_0 (x_0) & = 0 \\\\ Y''_{N-1} (x_N) & = 0 \\end{align} According to this article , spline interpolation is formulated as the following linear equation. \\begin{align} \\begin{pmatrix} 2(h_0 + h_1) & h_1 \\\\ h_0 & 2 (h_1 + h_2) & h_2 & & O \\\\ & & & \\ddots \\\\ O & & & & h_{N-2} & 2 (h_{N-2} + h_{N-1}) \\end{pmatrix} \\begin{pmatrix} v_1 \\\\ v_2 \\\\ v_3 \\\\ \\vdots \\\\ v_{N-1} \\end{pmatrix}= \\begin{pmatrix} w_1 \\\\ w_2 \\\\ w_3 \\\\ \\vdots \\\\ w_{N-1} \\end{pmatrix} \\end{align} \\begin{align} \\begin{pmatrix} 2(h_0 + h_1) & h_1 \\\\ h_0 & 2 (h_1 + h_2) & h_2 & & O \\\\ & & & \\ddots \\\\ O & & & & h_{N-2} & 2 (h_{N-2} + h_{N-1}) \\end{pmatrix} \\begin{pmatrix} v_1 \\\\ v_2 \\\\ v_3 \\\\ \\vdots \\\\ v_{N-1} \\end{pmatrix}= \\begin{pmatrix} w_1 \\\\ w_2 \\\\ w_3 \\\\ \\vdots \\\\ w_{N-1} \\end{pmatrix} \\end{align} where \\begin{align} h_i & = x_{i+1} - x_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ w_i & = 6 \\left(\\frac{y_{i+1} - y_{i+1}}{h_i} - \\frac{y_i - y_{i-1}}{h_{i-1}}\\right) \\ \\ \\ (i = 1, \\dots, N-1) \\end{align} \\begin{align} h_i & = x_{i+1} - x_i \\ \\ \\ (i = 0, \\dots, N-1) \\\\ w_i & = 6 \\left(\\frac{y_{i+1} - y_{i+1}}{h_i} - \\frac{y_i - y_{i-1}}{h_{i-1}}\\right) \\ \\ \\ (i = 1, \\dots, N-1) \\end{align} The coefficient matrix of this linear equation is tridiagonal matrix. Therefore, it can be solve with tridiagonal matrix algorithm, which can solve linear equations without gradient descent methods. Solving this linear equation with tridiagonal matrix algorithm, we can calculate coefficients of spline interpolation as follows. \\begin{align} a_i & = \\frac{v_{i+1} - v_i}{6 (x_{i+1} - x_i)} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ b_i & = \\frac{v_i}{2} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ c_i & = \\frac{y_{i+1} - y_i}{x_{i+1} - x_i} - \\frac{1}{6}(x_{i+1} - x_i)(2 v_i + v_{i+1}) \\ \\ \\ (i = 0, \\dots, N-1) \\\\ d_i & = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\end{align} \\begin{align} a_i & = \\frac{v_{i+1} - v_i}{6 (x_{i+1} - x_i)} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ b_i & = \\frac{v_i}{2} \\ \\ \\ (i = 0, \\dots, N-1) \\\\ c_i & = \\frac{y_{i+1} - y_i}{x_{i+1} - x_i} - \\frac{1}{6}(x_{i+1} - x_i)(2 v_i + v_{i+1}) \\ \\ \\ (i = 0, \\dots, N-1) \\\\ d_i & = y_i \\ \\ \\ (i = 0, \\dots, N-1) \\end{align}","title":"Spline Interpolation Algorithm"},{"location":"common/math/interpolation/#tridiagonal-matrix-algorithm","text":"We solve tridiagonal linear equation according to this article where variables of linear equation are expressed as follows in the implementation. \\begin{align} \\begin{pmatrix} b_0 & c_0 & & \\\\ a_0 & b_1 & c_2 & O \\\\ & & \\ddots \\\\ O & & a_{N-2} & b_{N-1} \\end{pmatrix} x = \\begin{pmatrix} d_0 \\\\ d_2 \\\\ d_3 \\\\ \\vdots \\\\ d_{N-1} \\end{pmatrix} \\end{align} \\begin{align} \\begin{pmatrix} b_0 & c_0 & & \\\\ a_0 & b_1 & c_2 & O \\\\ & & \\ddots \\\\ O & & a_{N-2} & b_{N-1} \\end{pmatrix} x = \\begin{pmatrix} d_0 \\\\ d_2 \\\\ d_3 \\\\ \\vdots \\\\ d_{N-1} \\end{pmatrix} \\end{align}","title":"Tridiagonal Matrix Algorithm"},{"location":"common/util/autoware_debug_tools/","text":"autoware_debug_tools # This package provides useful features for debugging Autoware. Usage # tf2pose # This tool converts any tf to pose topic. With this tool, for example, you can plot x values of tf in rqt_multiplot . rosrun autoware_debug_tools tf2pose { tf_from } { tf_to } { hz } Example: $ rosrun autoware_debug_tools tf2pose base_link ndt_base_link 100 $ rostopic echo /tf2pose/pose -n1 header: seq: 13 stamp: secs: 1605168366 nsecs: 549174070 frame_id: \"base_link\" pose: position: x: 0 .0387684271191 y: -0.00320360406477 z: 0 .000276674520819 orientation: x: 0 .000335221893885 y: 0 .000122020672186 z: -0.00539673212896 w: 0 .999985368502 --- pose2tf # This tool converts any pose topic to tf . rosrun autoware_debug_tools pose2tf { pose_topic_name } { tf_name } Example: $ rosrun autoware_debug_tools pose2tf /localization/pose_estimator/pose ndt_pose $ rosrun tf tf_echo ndt_pose ndt_base_link 100 At time 1605168365 .449 - Translation: [ 0 .000, 0 .000, 0 .000 ] - Rotation: in Quaternion [ 0 .000, 0 .000, 0 .000, 1 .000 ] in RPY ( radian ) [ 0 .000, -0.000, 0 .000 ] in RPY ( degree ) [ 0 .000, -0.000, 0 .000 ] stop_reason2pose # This tool extracts pose from stop_reasons . Topics without numbers such as /stop_reason2pose/pose/detection_area are the nearest stop_reasons, and topics with numbers are individual stop_reasons that are roughly matched with previous ones. rosrun autoware_debug_tools stop_reason2pose { stop_reason_topic_name } Example: $ rosrun autoware_debug_tools stop_reason2pose /planning/scenario_planning/status/stop_reasons $ rostopic list | ag stop_reason2pose /stop_reason2pose/pose/detection_area /stop_reason2pose/pose/detection_area_1 /stop_reason2pose/pose/obstacle_stop /stop_reason2pose/pose/obstacle_stop_1 $ rostopic echo /stop_reason2pose/pose/detection_area -n1 header: seq: 1 stamp: secs: 1605168355 nsecs: 821713 frame_id: \"map\" pose: position: x: 60608 .8433457 y: 43886 .2410876 z: 44 .9078212441 orientation: x: 0 .0 y: 0 .0 z: -0.190261378408 w: 0 .981733470901 --- stop_reason2tf # This is an all-in-one script that uses tf2pose , pose2tf , and stop_reason2pose . With this tool, you can view the relative position from base_link to the nearest stop_reason. rosrun autoware_debug_tools stop_reason2tf { stop_reason_name } Example: $ rosrun autoware_debug_tools stop_reason2tf obstacle_stop At time 1605168359 .501 - Translation: [ 0 .291, -0.095, 0 .266 ] - Rotation: in Quaternion [ 0 .007, 0 .011, -0.005, 1 .000 ] in RPY ( radian ) [ 0 .014, 0 .023, -0.010 ] in RPY ( degree ) [ 0 .825, 1 .305, -0.573 ]","title":"autoware_debug_tools"},{"location":"common/util/autoware_debug_tools/#autoware_debug_tools","text":"This package provides useful features for debugging Autoware.","title":"autoware_debug_tools"},{"location":"common/util/autoware_debug_tools/#usage","text":"","title":"Usage"},{"location":"common/util/autoware_debug_tools/#tf2pose","text":"This tool converts any tf to pose topic. With this tool, for example, you can plot x values of tf in rqt_multiplot . rosrun autoware_debug_tools tf2pose { tf_from } { tf_to } { hz } Example: $ rosrun autoware_debug_tools tf2pose base_link ndt_base_link 100 $ rostopic echo /tf2pose/pose -n1 header: seq: 13 stamp: secs: 1605168366 nsecs: 549174070 frame_id: \"base_link\" pose: position: x: 0 .0387684271191 y: -0.00320360406477 z: 0 .000276674520819 orientation: x: 0 .000335221893885 y: 0 .000122020672186 z: -0.00539673212896 w: 0 .999985368502 ---","title":"tf2pose"},{"location":"common/util/autoware_debug_tools/#pose2tf","text":"This tool converts any pose topic to tf . rosrun autoware_debug_tools pose2tf { pose_topic_name } { tf_name } Example: $ rosrun autoware_debug_tools pose2tf /localization/pose_estimator/pose ndt_pose $ rosrun tf tf_echo ndt_pose ndt_base_link 100 At time 1605168365 .449 - Translation: [ 0 .000, 0 .000, 0 .000 ] - Rotation: in Quaternion [ 0 .000, 0 .000, 0 .000, 1 .000 ] in RPY ( radian ) [ 0 .000, -0.000, 0 .000 ] in RPY ( degree ) [ 0 .000, -0.000, 0 .000 ]","title":"pose2tf"},{"location":"common/util/autoware_debug_tools/#stop_reason2pose","text":"This tool extracts pose from stop_reasons . Topics without numbers such as /stop_reason2pose/pose/detection_area are the nearest stop_reasons, and topics with numbers are individual stop_reasons that are roughly matched with previous ones. rosrun autoware_debug_tools stop_reason2pose { stop_reason_topic_name } Example: $ rosrun autoware_debug_tools stop_reason2pose /planning/scenario_planning/status/stop_reasons $ rostopic list | ag stop_reason2pose /stop_reason2pose/pose/detection_area /stop_reason2pose/pose/detection_area_1 /stop_reason2pose/pose/obstacle_stop /stop_reason2pose/pose/obstacle_stop_1 $ rostopic echo /stop_reason2pose/pose/detection_area -n1 header: seq: 1 stamp: secs: 1605168355 nsecs: 821713 frame_id: \"map\" pose: position: x: 60608 .8433457 y: 43886 .2410876 z: 44 .9078212441 orientation: x: 0 .0 y: 0 .0 z: -0.190261378408 w: 0 .981733470901 ---","title":"stop_reason2pose"},{"location":"common/util/autoware_debug_tools/#stop_reason2tf","text":"This is an all-in-one script that uses tf2pose , pose2tf , and stop_reason2pose . With this tool, you can view the relative position from base_link to the nearest stop_reason. rosrun autoware_debug_tools stop_reason2tf { stop_reason_name } Example: $ rosrun autoware_debug_tools stop_reason2tf obstacle_stop At time 1605168359 .501 - Translation: [ 0 .291, -0.095, 0 .266 ] - Rotation: in Quaternion [ 0 .007, 0 .011, -0.005, 1 .000 ] in RPY ( radian ) [ 0 .014, 0 .023, -0.010 ] in RPY ( degree ) [ 0 .825, 1 .305, -0.573 ]","title":"stop_reason2tf"},{"location":"common/util/rviz_plugins/autoware_planning_rviz_plugin/Readme/","text":"This package is including jsk code. Note that jsk_overlay_utils.cpp and jsk_overlay_utils.hpp are BSD license.","title":"Readme"},{"location":"common/util/rviz_plugins/autoware_vehicle_rviz_plugin/Readme/","text":"This package is including jsk code. Note that jsk_overlay_utils.cpp and jsk_overlay_utils.hpp are BSD license.","title":"Readme"},{"location":"control/mpc_follower/","text":"MPC follower description # Overview # A waypoint follower based on model predictive control (MPC) for accurate path tracking. This can be used as a waypoint_follower, as well as other path following nodes like pure_pursuit. There are 2 nodes related to MPC follower. /mpc_waypoint_converter : converts /final_waypoints to /mpc_waypoints which includes waypoints behind the self position. This is to solve temporary conflict of planning system and mpc follower so that mpc follower can be used in the same way as pure_pursuit. This will be removed in a future release. /mpc_follower : generates control command ( /twist_raw or/and /ctrl_raw ) to follow /mpc_waypoints . Video : comparison of pure_pursuit and mpc_follower with gazebo simulation. Input and Output for mpc_follower # input /mpc_waypoints : reference waypoints (generated in mpc_waypoints_converter) /current_pose : self pose /vehicle_status : vehicle information (as velocity and steering angle source) output /twist_raw : command for vehicle /ctrl_raw : command for vehicle node graph # Parameter description # Notation # The default parameters are adjusted to the AutonomouStuff Lexus RX 450h for under 40 km/h driving. overall # Name Type Description Default value show_debug_info bool display debug info false ctrl_period double control period [s] 0.03 traj_resample_dist double distance of waypoints in resampling [m] 0.1 enable_path_smoothing bool path smoothing flag. This should be true when uses path resampling to reduce resampling noise. true enable_yaw_recalculation bool recalculate yaw angle after resampling. Set true if yaw in received waypoints is noisy. false path_filter_moving_ave_num int number of data points moving average filter for path smoothing 35 path_smoothing_times int number of times of applying path smoothing filter 1 curvature_smoothing_num double index distance of points used in curvature calculation: p(i-num), p(i), p(i+num). larger num makes less noisy values. 35 steering_lpf_cutoff_hz double cutoff frequency of lowpass filter for steering output command [hz] 3.0 admissible_position_error double stop vehicle when following position error is larger than this value [m]. 5.0 admissible_yaw_error_rad double stop vehicle when following yaw angle error is larger than this value [rad]. 1.57 mpc algorithm # Name Type Description Default value qp_solver_type string QP solver option. described below in detail. unconstraint_fast qpoases_max_iter int maximum iteration number for convex optimization with qpoases. 500 vehicle_model_type string vehicle model option. described below in detail. kinematics prediction_horizon int total prediction step for MPC 70 prediction_sampling_time double prediction period for one step [s] 0.1 weight_lat_error double weight for lateral error 0.1 weight_heading_error double weight for heading error 0.0 weight_heading_error_squared_vel_coeff double weight for heading error * velocity 5.0 weight_steering_input double weight for steering error (steer command - reference steer) 1.0 weight_steering_input_squared_vel_coeff double weight for steering error (steer command - reference steer) * velocity 0.25 weight_lat_jerk double weight for lateral jerk (steer(i) - steer(i-1)) * velocity 0.0 weight_terminal_lat_error double terminal cost weight for lateral error 1.0 weight_terminal_heading_error double terminal cost weight for heading error 0.1 zero_ff_steer_deg double threshold of feedforward angle [deg]. feedforward angle smaller than this value is set to zero. 2.0 vehicle # Name Type Description Default value wheelbase double wheel base length for vehicle model [m] 2.9 steering_tau double steering dynamics time constant (1d approximation) for vehicle model [s] 0.3 steer_lim_deg double steering angle limit for vehicle model [deg]. This is also used for QP constraint. 35.0 QP solver type # currently, the options are unconstraint : use least square method to solve unconstraint QP with eigen. unconstraint_fast : similar to unconstraint. This is faster, but lower accuracy for optimization. qpoases_hotstart : use QPOASES with hotstart for constraint QP. vehicle model type # kinematics : bicycle kinematics model with steering 1st-order delay kinematics_no_delay : bicycle kinematics model without steering delay dynamics : bicycle dynamics model considering slip angle The kinematics model are being used as default. Please see the reference[1] for more detail. how to tune MPC parameters # Set appropriate vehicle kinematics parameters wheelbase , steering_gear_ratio , and steer_lim_deg . Also check the /vehicle_status topic has appropriate values (speed: vehicle rear-wheels-center velocity [km/h], angle: steering (tire) angle [rad]). These values give a vehicle information to the controller for path following. Errors in these values cause fundamental tracking error. Whether these values are correct can be confirmed by comparing the angular velocity obtained from the model ( /mpc_follower/debug/angvel_from_steer ) and the actual angular velocity (such as /estimate_twist/angular/z ). Set appropriate vehicle dynamics parameters of steering_tau , which is approximated delay from steering angle command to actual steering angle. Set weight_steering_input = 1.0, weight_lat_error = 0.1, and other weights to 0. If the vehicle oscillates when driving with low speed, set weight_lat_error smaller. Adjust other weights. One of the simple way for tuning is to increase weight_lat_error until oscillation occurs. If the vehicle is unstable with very small weight_lat_error , increase terminal weight : weight_terminal_lat_error and weight_terminal_heading_error to improve tracking stability. Larger prediction_horizon and smaller prediction_sampling_time is effective for tracking performance, but it is a trade-off between computational costs. Other parameters can be adjusted like below. weight_lat_error : Reduce lateral tracking error. This acts like P gain in PID. weight_heading_error : Make a drive straight. This acts like D gain in PID. weight_heading_error_squared_vel_coeff : Make a drive straight in high speed range. weight_steering_input : Reduce oscillation of tracking. weight_steering_input_squared_vel_coeff : Reduce oscillation of tracking in high speed range. weight_lat_jerk : Reduce lateral jerk. weight_terminal_lat_error : Preferable to set a higher value than normal lateral weight weight_lat_error for stability. weight_terminal_heading_error : Preferable to set a higher value than normal heading weight weight_heading_error for stability. reference # [1] Jarrod M. Snider, \"Automatic Steering Methods for Autonomous Automobile Path Tracking\", Robotics Institute, Carnegie Mellon University, February 2009.","title":"MPC follower description"},{"location":"control/mpc_follower/#mpc-follower-description","text":"","title":"MPC follower description"},{"location":"control/mpc_follower/#overview","text":"A waypoint follower based on model predictive control (MPC) for accurate path tracking. This can be used as a waypoint_follower, as well as other path following nodes like pure_pursuit. There are 2 nodes related to MPC follower. /mpc_waypoint_converter : converts /final_waypoints to /mpc_waypoints which includes waypoints behind the self position. This is to solve temporary conflict of planning system and mpc follower so that mpc follower can be used in the same way as pure_pursuit. This will be removed in a future release. /mpc_follower : generates control command ( /twist_raw or/and /ctrl_raw ) to follow /mpc_waypoints . Video : comparison of pure_pursuit and mpc_follower with gazebo simulation.","title":"Overview"},{"location":"control/mpc_follower/#input-and-output-for-mpc_follower","text":"input /mpc_waypoints : reference waypoints (generated in mpc_waypoints_converter) /current_pose : self pose /vehicle_status : vehicle information (as velocity and steering angle source) output /twist_raw : command for vehicle /ctrl_raw : command for vehicle","title":"Input and Output for mpc_follower"},{"location":"control/mpc_follower/#node-graph","text":"","title":"node graph"},{"location":"control/mpc_follower/#parameter-description","text":"","title":"Parameter description"},{"location":"control/mpc_follower/#notation","text":"The default parameters are adjusted to the AutonomouStuff Lexus RX 450h for under 40 km/h driving.","title":"Notation"},{"location":"control/mpc_follower/#overall","text":"Name Type Description Default value show_debug_info bool display debug info false ctrl_period double control period [s] 0.03 traj_resample_dist double distance of waypoints in resampling [m] 0.1 enable_path_smoothing bool path smoothing flag. This should be true when uses path resampling to reduce resampling noise. true enable_yaw_recalculation bool recalculate yaw angle after resampling. Set true if yaw in received waypoints is noisy. false path_filter_moving_ave_num int number of data points moving average filter for path smoothing 35 path_smoothing_times int number of times of applying path smoothing filter 1 curvature_smoothing_num double index distance of points used in curvature calculation: p(i-num), p(i), p(i+num). larger num makes less noisy values. 35 steering_lpf_cutoff_hz double cutoff frequency of lowpass filter for steering output command [hz] 3.0 admissible_position_error double stop vehicle when following position error is larger than this value [m]. 5.0 admissible_yaw_error_rad double stop vehicle when following yaw angle error is larger than this value [rad]. 1.57","title":"overall"},{"location":"control/mpc_follower/#mpc-algorithm","text":"Name Type Description Default value qp_solver_type string QP solver option. described below in detail. unconstraint_fast qpoases_max_iter int maximum iteration number for convex optimization with qpoases. 500 vehicle_model_type string vehicle model option. described below in detail. kinematics prediction_horizon int total prediction step for MPC 70 prediction_sampling_time double prediction period for one step [s] 0.1 weight_lat_error double weight for lateral error 0.1 weight_heading_error double weight for heading error 0.0 weight_heading_error_squared_vel_coeff double weight for heading error * velocity 5.0 weight_steering_input double weight for steering error (steer command - reference steer) 1.0 weight_steering_input_squared_vel_coeff double weight for steering error (steer command - reference steer) * velocity 0.25 weight_lat_jerk double weight for lateral jerk (steer(i) - steer(i-1)) * velocity 0.0 weight_terminal_lat_error double terminal cost weight for lateral error 1.0 weight_terminal_heading_error double terminal cost weight for heading error 0.1 zero_ff_steer_deg double threshold of feedforward angle [deg]. feedforward angle smaller than this value is set to zero. 2.0","title":"mpc algorithm"},{"location":"control/mpc_follower/#vehicle","text":"Name Type Description Default value wheelbase double wheel base length for vehicle model [m] 2.9 steering_tau double steering dynamics time constant (1d approximation) for vehicle model [s] 0.3 steer_lim_deg double steering angle limit for vehicle model [deg]. This is also used for QP constraint. 35.0","title":"vehicle"},{"location":"control/mpc_follower/#qp-solver-type","text":"currently, the options are unconstraint : use least square method to solve unconstraint QP with eigen. unconstraint_fast : similar to unconstraint. This is faster, but lower accuracy for optimization. qpoases_hotstart : use QPOASES with hotstart for constraint QP.","title":"QP solver type"},{"location":"control/mpc_follower/#vehicle-model-type","text":"kinematics : bicycle kinematics model with steering 1st-order delay kinematics_no_delay : bicycle kinematics model without steering delay dynamics : bicycle dynamics model considering slip angle The kinematics model are being used as default. Please see the reference[1] for more detail.","title":"vehicle model type"},{"location":"control/mpc_follower/#how-to-tune-mpc-parameters","text":"Set appropriate vehicle kinematics parameters wheelbase , steering_gear_ratio , and steer_lim_deg . Also check the /vehicle_status topic has appropriate values (speed: vehicle rear-wheels-center velocity [km/h], angle: steering (tire) angle [rad]). These values give a vehicle information to the controller for path following. Errors in these values cause fundamental tracking error. Whether these values are correct can be confirmed by comparing the angular velocity obtained from the model ( /mpc_follower/debug/angvel_from_steer ) and the actual angular velocity (such as /estimate_twist/angular/z ). Set appropriate vehicle dynamics parameters of steering_tau , which is approximated delay from steering angle command to actual steering angle. Set weight_steering_input = 1.0, weight_lat_error = 0.1, and other weights to 0. If the vehicle oscillates when driving with low speed, set weight_lat_error smaller. Adjust other weights. One of the simple way for tuning is to increase weight_lat_error until oscillation occurs. If the vehicle is unstable with very small weight_lat_error , increase terminal weight : weight_terminal_lat_error and weight_terminal_heading_error to improve tracking stability. Larger prediction_horizon and smaller prediction_sampling_time is effective for tracking performance, but it is a trade-off between computational costs. Other parameters can be adjusted like below. weight_lat_error : Reduce lateral tracking error. This acts like P gain in PID. weight_heading_error : Make a drive straight. This acts like D gain in PID. weight_heading_error_squared_vel_coeff : Make a drive straight in high speed range. weight_steering_input : Reduce oscillation of tracking. weight_steering_input_squared_vel_coeff : Reduce oscillation of tracking in high speed range. weight_lat_jerk : Reduce lateral jerk. weight_terminal_lat_error : Preferable to set a higher value than normal lateral weight weight_lat_error for stability. weight_terminal_heading_error : Preferable to set a higher value than normal heading weight weight_heading_error for stability.","title":"how to tune MPC parameters"},{"location":"control/mpc_follower/#reference","text":"[1] Jarrod M. Snider, \"Automatic Steering Methods for Autonomous Automobile Path Tracking\", Robotics Institute, Carnegie Mellon University, February 2009.","title":"reference"},{"location":"control/trajectory_follower/lane_departure_checker/","text":"Lane Departure Checker # The Lane Departure Checker checks if vehicle follows a trajectory. If it does not follow the trajectory, it reports its status via diagnostic_updater . Features # This package includes the following features: Lane Departure : Check if ego vehicle is going to be out of lane boundaries based on output from control module (predicted trajectory). Trajectory Deviation : Check if ego vehicle's pose does not deviate from the trajectory. Checking lateral, longitudinal and yaw deviation. Inner-workings / Algorithms # How to extend footprint by covariance # Calculate the standard deviation of error ellipse(covariance) in vehicle coordinate. 1.Transform covariance into vehicle coordinate. \\begin{align} \\left( \\begin{array}{cc} x_{vehicle}\\\\ y_{vehicle}\\\\ \\end{array} \\right) = R_{map2vehicle} \\left( \\begin{array}{cc} x_{map}\\\\ y_{map}\\\\ \\end{array} \\right) \\end{align} Calculate covariance in vehicle coordinate. \\begin{align} Cov_{vehicle} &= E \\left[ \\left( \\begin{array}{cc} x_{vehicle}\\\\ y_{vehicle}\\\\ \\end{array} \\right) (x_{vehicle}, y_{vehicle}) \\right] \\\\ &= E \\left[ R\\left( \\begin{array}{cc} x_{map}\\\\ y_{map}\\\\ \\end{array} \\right) (x_{map}, y_{map})R^t \\right] \\\\ &= R E\\left[ \\left( \\begin{array}{cc} x_{map}\\\\ y_{map}\\\\ \\end{array} \\right) (x_{map}, y_{map}) \\right] R^t \\\\ &= R Cov_{map} R^t \\end{align} 2.The longitudinal length we want to expand is correspond to marginal distribution of x_{vehicle} x_{vehicle} , which is represented in Cov_{vehicle}(0,0) Cov_{vehicle}(0,0) . In the same way, the lateral length is represented in Cov_{vehicle}(1,1) Cov_{vehicle}(1,1) . Wikipedia reference here . Expand footprint based on the standard deviation multiplied with footprint_margin_scale . Interface # Input # /localization/twist [ geometry_msgs/msg/TwistStamped ] /map/vector_map [ autoware_lanelet2_msgs::msg::MapBin ] /planning/mission_planning/route [ autoware_planning_msgs::msg::Route ] /planning/scenario_planning/trajectory [ autoware_planning_msgs::msg::Trajectory ] /control/trajectory_follower/predicted_trajectory [ autoware_planning_msgs::msg::Trajectory ] /localization/pose_with_covariance[ geometry_msgs/msg/PoseWithCovarianceStamped ] Output # [ diagnostic_updater ] lane_departure : Update diagnostic level when ego vehicle is out of lane. [ diagnostic_updater ] trajectory_deviation : Update diagnostic level when ego vehicle deviates from trajectory. Parameters # Node Parameters # Name Type Description Default value update_rate double Frequency for publishing [Hz] 10.0 visualize_lanelet bool Flag for visualizing lanelet False Core Parameters # Name Type Description Default value footprint_margin_scale double Coefficient for expanding footprint margin. Multiplied by 1 standard deviation. 1.0 resample_interval double Minimum Euclidean distance between points when resample trajectory.[m] 0.3 max_deceleration double Maximum deceleration when calculating braking distance. 2.8 delay_time double Delay time which took to actuate brake when calculating braking distance. [second] 1.3 max_lateral_deviation double Maximum lateral deviation in vehicle coordinate. [m] 2.0 max_longitudinal_deviation double Maximum longitudinal deviation in vehicle coordinate. [m] 2.0 max_yaw_deviation_deg double Maximum ego yaw deviation from trajectory. [deg] 60.0","title":"Lane Departure Checker"},{"location":"control/trajectory_follower/lane_departure_checker/#lane-departure-checker","text":"The Lane Departure Checker checks if vehicle follows a trajectory. If it does not follow the trajectory, it reports its status via diagnostic_updater .","title":"Lane Departure Checker"},{"location":"control/trajectory_follower/lane_departure_checker/#features","text":"This package includes the following features: Lane Departure : Check if ego vehicle is going to be out of lane boundaries based on output from control module (predicted trajectory). Trajectory Deviation : Check if ego vehicle's pose does not deviate from the trajectory. Checking lateral, longitudinal and yaw deviation.","title":"Features"},{"location":"control/trajectory_follower/lane_departure_checker/#inner-workings-algorithms","text":"","title":"Inner-workings / Algorithms"},{"location":"control/trajectory_follower/lane_departure_checker/#how-to-extend-footprint-by-covariance","text":"Calculate the standard deviation of error ellipse(covariance) in vehicle coordinate. 1.Transform covariance into vehicle coordinate. \\begin{align} \\left( \\begin{array}{cc} x_{vehicle}\\\\ y_{vehicle}\\\\ \\end{array} \\right) = R_{map2vehicle} \\left( \\begin{array}{cc} x_{map}\\\\ y_{map}\\\\ \\end{array} \\right) \\end{align} Calculate covariance in vehicle coordinate. \\begin{align} Cov_{vehicle} &= E \\left[ \\left( \\begin{array}{cc} x_{vehicle}\\\\ y_{vehicle}\\\\ \\end{array} \\right) (x_{vehicle}, y_{vehicle}) \\right] \\\\ &= E \\left[ R\\left( \\begin{array}{cc} x_{map}\\\\ y_{map}\\\\ \\end{array} \\right) (x_{map}, y_{map})R^t \\right] \\\\ &= R E\\left[ \\left( \\begin{array}{cc} x_{map}\\\\ y_{map}\\\\ \\end{array} \\right) (x_{map}, y_{map}) \\right] R^t \\\\ &= R Cov_{map} R^t \\end{align} 2.The longitudinal length we want to expand is correspond to marginal distribution of x_{vehicle} x_{vehicle} , which is represented in Cov_{vehicle}(0,0) Cov_{vehicle}(0,0) . In the same way, the lateral length is represented in Cov_{vehicle}(1,1) Cov_{vehicle}(1,1) . Wikipedia reference here . Expand footprint based on the standard deviation multiplied with footprint_margin_scale .","title":"How to extend footprint by covariance"},{"location":"control/trajectory_follower/lane_departure_checker/#interface","text":"","title":"Interface"},{"location":"control/trajectory_follower/lane_departure_checker/#input","text":"/localization/twist [ geometry_msgs/msg/TwistStamped ] /map/vector_map [ autoware_lanelet2_msgs::msg::MapBin ] /planning/mission_planning/route [ autoware_planning_msgs::msg::Route ] /planning/scenario_planning/trajectory [ autoware_planning_msgs::msg::Trajectory ] /control/trajectory_follower/predicted_trajectory [ autoware_planning_msgs::msg::Trajectory ] /localization/pose_with_covariance[ geometry_msgs/msg/PoseWithCovarianceStamped ]","title":"Input"},{"location":"control/trajectory_follower/lane_departure_checker/#output","text":"[ diagnostic_updater ] lane_departure : Update diagnostic level when ego vehicle is out of lane. [ diagnostic_updater ] trajectory_deviation : Update diagnostic level when ego vehicle deviates from trajectory.","title":"Output"},{"location":"control/trajectory_follower/lane_departure_checker/#parameters","text":"","title":"Parameters"},{"location":"control/trajectory_follower/lane_departure_checker/#node-parameters","text":"Name Type Description Default value update_rate double Frequency for publishing [Hz] 10.0 visualize_lanelet bool Flag for visualizing lanelet False","title":"Node Parameters"},{"location":"control/trajectory_follower/lane_departure_checker/#core-parameters","text":"Name Type Description Default value footprint_margin_scale double Coefficient for expanding footprint margin. Multiplied by 1 standard deviation. 1.0 resample_interval double Minimum Euclidean distance between points when resample trajectory.[m] 0.3 max_deceleration double Maximum deceleration when calculating braking distance. 2.8 delay_time double Delay time which took to actuate brake when calculating braking distance. [second] 1.3 max_lateral_deviation double Maximum lateral deviation in vehicle coordinate. [m] 2.0 max_longitudinal_deviation double Maximum longitudinal deviation in vehicle coordinate. [m] 2.0 max_yaw_deviation_deg double Maximum ego yaw deviation from trajectory. [deg] 60.0","title":"Core Parameters"},{"location":"control/trajectory_follower/obstacle_collision_checker/","text":"obstacle_collision_checker #","title":"obstacle_collision_checker"},{"location":"control/trajectory_follower/obstacle_collision_checker/#obstacle_collision_checker","text":"","title":"obstacle_collision_checker"},{"location":"control/velocity_controller/velocity_controller-design.ja/","text":"Velocity Controller # =========== Purpose / Use cases # velocity_controller \u306f\u76ee\u6a19\u8ecc\u9053\u4e0a\u306e\u5404\u70b9\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u76ee\u6a19\u901f\u5ea6\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u3067\u3042\u308a\u3001\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u30eb\u30fc\u30d7\u3092\u7528\u3044\u3066\u81ea\u8eca\u901f\u5ea6\u3068\u76ee\u6a19\u901f\u5ea6\u304b\u3089\u76ee\u6a19\u52a0\u901f\u5ea6\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 \u9053\u8def\u52fe\u914d\u60c5\u5831\u3092\u8003\u616e\u3057\u305f\u52fe\u914d\u529b\u88dc\u6b63\u3084\u3001\u9045\u5ef6\u88dc\u6b63\u306e\u6a5f\u80fd\u306a\u3069\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u3053\u3067\u8a08\u7b97\u3055\u308c\u305f\u76ee\u6a19\u52a0\u901f\u5ea6\u306f\u3001\u5f8c\u6bb5\u306e\u8eca\u4e21\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u3088\u3063\u3066\u9069\u5207\u306b\u5b9f\u73fe\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u306a\u304a\u3001\u81ea\u52d5\u904b\u8ee2\u3092\u884c\u3046\u8eca\u4e21\u304c\u300c\u76ee\u6a19\u901f\u5ea6\u300d\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001Autoware \u3068\u3057\u3066\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5229\u7528\u306f\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 why separate lateral (steering) and longitudinal (velocity) control? # \u3053\u306e\u901f\u5ea6\u5236\u5fa1\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7e26\u6a2a\u5236\u5fa1\u306e\u5f79\u5272\u304c\u5206\u96e2\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u30b9\u30c6\u30a2\u5236\u5fa1\u306f\u3001\u901f\u5ea6\u304c\u7406\u60f3\u72b6\u614b\u3067\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u4eee\u5b9a\u306e\u3082\u3068\u3001\u8eca\u4e21\u3092\u7d4c\u8def\u4e0a\u306b\u7559\u3081\u308b\u305f\u3081\u306e\u30b9\u30c6\u30a2\u30ea\u30f3\u30b0\u76ee\u6a19\u5024\u3092\u8a08\u7b97\u3059\u308b\u3002 \u901f\u5ea6\u5236\u5fa1\u306f\u3001\u8eca\u4e21\u304c\u7406\u60f3\u72b6\u614b\u3067\u7d4c\u8def\u4e0a\u306b\u5b58\u5728\u3059\u308b\u3068\u3044\u3046\u4eee\u5b9a\u306e\u3082\u3068\u3001\u8eca\u4e21\u901f\u5ea6\u3092\u7d4c\u8def\u901f\u5ea6\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306e\u76ee\u6a19\u901f\u5ea6/\u52a0\u901f\u5ea6\u3092\u8a08\u7b97\u3059\u308b\u3002 \u7406\u60f3\u7684\u306b\u306f\u30b9\u30c6\u30a2\u3068\u901f\u5ea6\u306e\u5236\u5fa1\u3092 1 \u3064\u306e\u6df7\u5408\u554f\u984c\u3068\u3057\u3066\u6349\u3048\u3066\u5236\u5fa1\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u6027\u80fd\u306f\u5411\u4e0a\u3057\u307e\u3059\u3002\u5bfe\u3057\u3066\u3001\u901f\u5ea6\u5236\u5fa1\u3092\u5358\u4f53\u306e\u6a5f\u80fd\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u7406\u7531\u306f 2 \u3064\u3042\u308a\u307e\u3059\u3002 Complex requirements for longitudinal motion # \u4eba\u9593\u304c\u8eca\u4e21\u306b\u671f\u5f85\u3059\u308b\u7e26\u65b9\u5411\u306e\u52d5\u4f5c\u306f\u3001\u5358\u4f53\u306e\u30ed\u30b8\u30c3\u30af\u3067\u8868\u3059\u3053\u3068\u306f\u56f0\u96e3\u3067\u3059\u3002\u305f\u3068\u3048\u3070\u505c\u6b62\u76f4\u524d\u306b\u304a\u3044\u3066\u3001\u8eca\u4e21\u306e\u73fe\u5728\u4f4d\u7f6e\u304c\u505c\u6b62\u7dda\u306e\u524d\u5f8c\u306a\u306e\u304b\u3001\u73fe\u5ea7\u901f\u5ea6\u304c\u76ee\u6a19\u901f\u5ea6\u3068\u6bd4\u3079\u3066\u9ad8\u3044\u304b\u306e\u304b\u4f4e\u3044\u304b\u306e\u304b\u3001\u306a\u3069\u306b\u5fdc\u3058\u3066\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001\u901a\u5e38\u306e\u8eca\u4e21\u306f\u6975\u4f4e\u901f\u306e\u8eca\u901f\u6e2c\u5b9a\u306f\u56f0\u96e3\u3067\u3042\u308a\u3001\u4f4e\u901f\u57df\u3067\u306e\u89b3\u6e2c\u7cbe\u5ea6\u304c\u8457\u3057\u304f\u52a3\u5316\u3059\u308b\u3068\u3044\u3046\u7279\u5fb4\u3092\u6301\u3061\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u3001\u7e26\u65b9\u5411\u306e\u5236\u5fa1\u306b\u56fa\u6709\u306e\u7279\u6027\u3084\u30cb\u30fc\u30ba\u304c\u591a\u304f\u5b58\u5728\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u6a2a\u65b9\u5411\u5236\u5fa1\u3068\u306f\u5206\u96e2\u3057\u3066\u8a2d\u8a08\u3059\u308b\u3053\u3068\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u7d50\u5408\u5ea6\u3092\u4f4e\u304f\u4fdd\u3061\u3001\u4fdd\u5b88\u6027\u3092\u5411\u4e0a\u3055\u305b\u307e\u3059\u3002 Nonlinear coupling of lateral and longitudinal motion # \u30b9\u30c6\u30a2\u3068\u901f\u5ea6\u306e\u7d71\u5408\u5236\u5fa1\u554f\u984c\u306f\u975e\u5e38\u306b\u8907\u96d1\u3067\u3042\u308a\u3001\u591a\u304f\u306e\u5834\u5408\u3001\u6027\u80fd\u3092\u51fa\u3059\u305f\u3081\u306b\u975e\u7dda\u5f62\u6700\u9069\u5316\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u30ed\u30b8\u30c3\u30af\u306f\u53ce\u675f\u6027\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u89b3\u70b9\u3067\u5b89\u5168\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u307e\u305f\u3001\u8eca\u4e21\u9650\u754c\u8fd1\u508d\u3067\u306e\u5236\u5fa1\u3092\u8003\u3048\u306a\u3044\u5834\u5408\u306f\u3001\u7e26\u6a2a\u540c\u6642\u306b\u5236\u5fa1\u3092\u884c\u3046\u30e1\u30ea\u30c3\u30c8\u306f\u5c0f\u3055\u304f\u3001\u4e00\u822c\u516c\u9053\u3067\u306e\u901a\u5e38\u8d70\u884c\u306b\u304a\u3044\u3066\u5206\u96e2\u578b\u3067\u6027\u80fd\u306b\u56f0\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002 \uff08\u3053\u3053\u3067\u8ff0\u3079\u3066\u3044\u308b\u306e\u306f\u76ee\u6a19\u5024\u8ffd\u5f93\u554f\u984c\u306b\u304a\u3051\u308b\u7d71\u5408\u5236\u5fa1\u306e\u30e1\u30ea\u30c3\u30c8\u3067\u3042\u308a\u3001\u7d4c\u8def\u8a08\u753b\u306b\u304a\u3044\u3066\u306f\u7e26\u6a2a\u540c\u6642\u306b\u8a08\u753b\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u5b58\u5728\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\uff09 So, how should we consider lateral and longitudinal motion simultaneously? # \u4e00\u65b9\u3067\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u7e26\u3068\u6a2a\u306e\u52d5\u304d\u3092\u540c\u6642\u306b\u8003\u3048\u3066\u8a2d\u8a08\u3059\u308b\u3079\u304d\u3067\u3059\u3002 \u30ab\u30fc\u30d6\u306b\u8fd1\u3065\u304f\u306e\u3067\u6e1b\u901f\u3057\u305f\u3044 \u8eca\u4e21\u304c\u7d4c\u8def\u304b\u3089\u9038\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u4f4e\u901f\u8d70\u884c\u3067\u7d4c\u8def\u306b\u5fa9\u5e30\u3057\u305f\u3044 \u305f\u3060\u3057\u3001\u3053\u308c\u3089\u306f\u5236\u5fa1\u306e\u5185\u90e8\u60c5\u5831\u3092\u5229\u7528\u305b\u305a\u306b\u5b9f\u884c\u53ef\u80fd\u3067\u3042\u308b\u305f\u3081\u3001\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306f\u4e0a\u6bb5\u306e\u901f\u5ea6\u8a08\u753b\u3084\u7d4c\u8def\u8a08\u753b\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u7f6e\u3044\u3066\u9069\u5207\u306b\u8a2d\u8a08\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u5236\u5fa1\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u3042\u304f\u307e\u3067\u8a08\u753b\u3055\u308c\u305f\u901f\u5ea6/\u7d4c\u8def\u4f4d\u7f6e\u3092\u5b88\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308a\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u81ea\u4f53\u304c\u671f\u5f85\u3059\u308b\u6319\u52d5\u81ea\u4f53\uff08\u8a08\u753b\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u51fa\u529b\uff09\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002 Design # Assumptions / Known limits # \u9069\u5207\u306b\u5e73\u6ed1\u5316\u3055\u308c\u305f\u76ee\u6a19\u901f\u5ea6\u304a\u3088\u3073\u305d\u306e\u52a0\u901f\u5ea6\u304c\u8ecc\u9053\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u3053\u3068 \u5236\u5fa1\u5185\u90e8\u3067\u76ee\u6a19\u5024\u3092\u66f8\u304d\u63db\u3048\u308b\u51e6\u7406\u306f\u884c\u3044\u307e\u305b\u3093\uff08\u30ce\u30a4\u30ba\u51e6\u7406\u7a0b\u5ea6\u306e\u3053\u3068\u306f\u884c\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\uff09\u3002 \u6025\u306a\u30b9\u30c6\u30c3\u30d7\u72b6\u306e\u76ee\u6a19\u5024\u5909\u52d5\u306b\u5bfe\u3057\u3066\u306f\u3001\u53ef\u80fd\u306a\u9650\u308a\u9ad8\u901f\u3067\u8ffd\u5f93\u3092\u884c\u3044\u307e\u3059\u3002 \u8eca\u4e21\u901f\u5ea6\u304c\u9069\u5207\u306a\u5024\u3067\u3042\u308b\u3053\u3068 \u524d\u5f8c\u65b9\u5411\u306b\u5bfe\u5fdc\u3059\u308b\u7b26\u53f7\u4ed8\u304d\u306e\u901f\u5ea6\u304c\u4e0e\u3048\u3089\u308c\u308b\u3053\u3068 EKF \u306a\u3069\u306b\u3088\u3063\u3066\u9069\u5207\u306b\u30ce\u30a4\u30ba\u51e6\u7406\u304c\u65bd\u3055\u308c\u305f\u8eca\u8f2a\u901f\u304c\u4e0e\u3048\u3089\u308c\u308b\u3053\u3068 \u81ea\u8eca\u901f\u5ea6\u306b\u5927\u304d\u306a\u30ce\u30a4\u30ba\u304c\u4e57\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u8ffd\u5f93\u6027\u80fd\u306f\u8457\u3057\u304f\u4e0b\u304c\u308a\u307e\u3059 \u5f8c\u6bb5\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066\u3001\u76ee\u6a19\u901f\u5ea6/\u76ee\u6a19\u52a0\u901f\u5ea6\u304c\u5b9f\u73fe\u3055\u308c\u308b\u3053\u3068 \u8eca\u4e21\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u76ee\u6a19\u52a0\u901f\u5ea6\u3067\u306a\u3044\u5834\u5408\uff08\u30a2\u30af\u30bb\u30eb\u30d6\u30ec\u30fc\u30ad\u306a\u3069\uff09\u306f\u3001\u9069\u5207\u306a\u5909\u63db\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u631f\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Inputs / Outputs / API # output # control_cmd [ autoware_control_msgs/ControlCommandStamped ] : command to control the vehicle for the longitudinal motion. It contains the target velocity and target acceleration. debug_values [ std_msgs/Float32MultiArray ] : debug values used for the control command generation (e.g. the contributions of each P-I-D terms). input # current_velocity [ geometry_msgs/TwistStamped ] : Current ego-velocity. /localization/twist is currently used in the Autoware.iv. current_trajectory [ autoware_planning_msgs/Trajectory ] : Current target trajectory for the desired velocity on the each trajectory points. /tf [ tf2_msgs/TFMessage ] : For ego-pose. Note: why the debug message uses the multi-array? # Ideally, this message should be defined as a specific debug message with meaningful field names, like VelocityControllerDebugValues.msg . However, these debug values are fluid and new items are frequently added on the development phase, and unfortunately, adding a new field to a ros message definition is not backward compatible. Whereas, new elements can be added in the array-type message without any burden. This is why the Float32MultiArray type is currently used for now. The content of each element is defined in the header file. Inner-workings / Algorithms # States # \u505c\u6b62\u6642\u306e\u7279\u6b8a\u51e6\u7406\u306a\u3069\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b 4 \u3064\u306e\u72b6\u614b\u9077\u79fb\u3092\u6301\u3061\u307e\u3059\u3002 DRIVE pid \u5236\u5fa1\u306b\u3088\u3063\u3066\u76ee\u6a19\u901f\u5ea6\u8ffd\u5f93\u3092\u884c\u3046 \u9045\u5ef6\u88dc\u511f\u3084\u52fe\u914d\u88dc\u511f\u306e\u6a5f\u80fd\u3082\u9069\u7528\u3055\u308c\u308b STOPPING \u505c\u8eca\u76f4\u524d\u306e\u52d5\u4f5c\u3092\u5236\u5fa1\u3057\u307e\u3059 \u505c\u6b62\u7cbe\u5ea6\u3084\u6ed1\u3089\u304b\u306a\u505c\u6b62\u306e\u305f\u3081\u306e\u7279\u6b8a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059 STOPPED \u505c\u6b62\u72b6\u614b\u3067\u306e\u52d5\u4f5c\u3092\u884c\u3044\u307e\u3059\uff08\u30d6\u30ec\u30fc\u30ad\u30db\u30fc\u30eb\u30c9\u306a\u3069\uff09 EMERGENCY \u7279\u5b9a\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u306b\u306f\u7dca\u6025\u72b6\u614b\u306b\u5165\u308a\u307e\u3059\uff08\u505c\u6b62\u7dda\u3092\u4e00\u5b9a\u4ee5\u4e0a\u8d85\u3048\u305f\u5834\u5408\u306a\u3069\uff09\u3002 \u89e3\u9664\u6761\u4ef6\uff08\u505c\u6b62\u3059\u308b\u307e\u3067\u89e3\u9664\u3057\u306a\u3044\u304b\u3069\u3046\u304b\u306a\u3069\uff09\u3084\u3001\u7dca\u6025\u5236\u52d5\u6642\u306e\u6e1b\u901f\u5ea6\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u307e\u3059\u3002 \u72b6\u614b\u9077\u79fb\u56f3\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\uff08TODO\uff09 Logics # Control Block Diagram # FeedForward # \u76ee\u6a19\u8ecc\u9053\u306b\u57cb\u3081\u8fbc\u307e\u308c\u305f\u52a0\u901f\u5ea6\u3001\u304a\u3088\u3073\u52fe\u914d\u88dc\u6b63\u9805\u3092 FF \u6210\u5206\u3068\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002\u30e2\u30c7\u30eb\u5316\u8aa4\u5dee\u304c\u306a\u3044\u7406\u60f3\u4e0b\u306b\u304a\u3044\u3066\u306f\u3001\u3053\u306e FF \u9805\u306e\u307f\u3067\u9069\u5207\u306a\u901f\u5ea6\u8ffd\u5f93\u304c\u53ef\u80fd\u3067\u3059\u3002 \u96e2\u6563\u5316\u3084\u30e2\u30c7\u30eb\u5316\u8aa4\u5dee\u306b\u3088\u3063\u3066\u751f\u3058\u305f\u8ffd\u5f93\u8aa4\u5dee\u306f feedback \u7cfb\u306b\u3088\u3063\u3066\u53d6\u308a\u9664\u304b\u308c\u307e\u3059\u3002 Slope compensation # \u52fe\u914d\u60c5\u5831\u3092\u3082\u3068\u306b\u3001\u76ee\u6a19\u52a0\u901f\u5ea6\u306b\u52fe\u914d\u529b\u6210\u5206\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002 \u3053\u306e\u52fe\u914d\u60c5\u5831\u306f 2 \u3064\u306e\u30bd\u30fc\u30b9\u304c\u3042\u308a\u3001\u5207\u66ff\u53ef\u80fd\u3067\u3059 \u81ea\u5df1\u4f4d\u7f6e\u306e\u30d4\u30c3\u30c1\u6210\u5206\uff08default\uff09 \u81ea\u5df1\u4f4d\u7f6e\u306e\u30d4\u30c3\u30c1\u89d2\u304b\u3089\u73fe\u5728\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b Pros: \u7c21\u5358\u306b\u5229\u7528\u53ef\u80fd Cons: \u8eca\u4f53\u306e\u632f\u52d5\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u305f\u3081\u3001\u7cbe\u5ea6\u306e\u826f\u3044\u52fe\u914d\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044 \u7d4c\u8def\u306e z \u5ea7\u6a19 \u76ee\u6a19\u7d4c\u8def\u306b\u304a\u3051\u308b\u524d\u8f2a\u3068\u5f8c\u8f2a\u4f4d\u7f6e\u3067\u306e z \u5ea7\u6a19\u306e\u5dee\u5206\u304b\u3089\u9053\u8def\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b Pros: \u7d4c\u8def\u306e z \u5ea7\u6a19\u304c\u9069\u5207\u306b\u6574\u5099\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u81ea\u5df1\u4f4d\u7f6e\u63a8\u5b9a\u306e\u30d4\u30c3\u30c1\u63a8\u5b9a\u3088\u308a\u3082\u9ad8\u7cbe\u5ea6\u3067\u3042\u308b Pros: \u9045\u5ef6\u88dc\u511f\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u5229\u7528\u304c\u53ef\u80fd\uff08\u6a5f\u80fd\u306f\u672a\u5b9f\u88c5\uff09 Cons: \u9ad8\u7cbe\u5ea6\u5730\u56f3\u306e z \u5ea7\u6a19\u3092\u9069\u5207\u306b\u6574\u5099\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b Cons: \uff08\u73fe\u6642\u70b9\u3067\u306f\uff09\u30d5\u30ea\u30fc\u30b9\u30da\u30fc\u30b9\u3067\u306e\u8a08\u753b\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044 PID control # \u30e2\u30c7\u30eb\u8aa4\u5dee\u306a\u3069\u306e FeedForward \u5236\u5fa1\u3067\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u504f\u5dee\u306b\u5bfe\u3057\u3066\u3001PID \u5236\u5fa1\u3092\u7528\u3044\u3066\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u7cfb\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002 \u3053\u306e PID \u5236\u5fa1\u306f\u3001\u73fe\u5728\u8eca\u901f\u3068\u76ee\u6a19\u8eca\u901f\u306e\u504f\u5dee\u304b\u3089\u76ee\u6a19\u52a0\u901f\u5ea6\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002 \u3053\u306e PID \u30ed\u30b8\u30c3\u30af\u306b\u306f\u3001\u5404\u9805\u306e\u51fa\u529b\u306b\u6700\u5927\u5024\u3092\u8a2d\u3051\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u4ee5\u4e0b\u3092\u9632\u3050\u305f\u3081\u3067\u3059\u3002 \u5927\u304d\u306a\u7a4d\u5206\u9805\u306f\u958b\u767a\u8005\u306e\u610f\u56f3\u3057\u306a\u3044\u6319\u52d5\u3092\u5f15\u304d\u8d77\u3053\u3059\u6050\u308c\u304c\u3042\u308b \u610f\u56f3\u3057\u306a\u3044\u30ce\u30a4\u30ba\u306b\u3088\u308a\u3001\u5fae\u5206\u9805\u306e\u51fa\u529b\u304c\u975e\u5e38\u306b\u5927\u304d\u306a\u5024\u306b\u306a\u308b\u6050\u308c\u304c\u3042\u308b \u307e\u305f\u3001\u7a4d\u5206\u9805\u306f\u901f\u5ea6 0 \u306e\u3068\u304d\u306b\u306f\u84c4\u7a4d\u3055\u308c\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u300cAutoware \u3068\u3057\u3066\u306f\u767a\u8eca\u60f3\u5b9a\u3092\u3057\u3066\u3044\u308b\u304c\u3001\u5916\u90e8\u30e6\u30fc\u30b6\u306b\u3088\u3063\u3066\u8eca\u4e21\u306e\u767a\u9032\u306b\u30ed\u30c3\u30af\u304c\u639b\u3051\u3089\u308c\u3066\u3044\u308b\u300d\u3088\u3046\u306a\u30b1\u30fc\u30b9\u306b\u304a\u3051\u308b\u610f\u56f3\u3057\u306a\u3044\u7a4d\u5206\u9805\u306e\u84c4\u7a4d\u3092\u9632\u3050\u305f\u3081\u3067\u3042\u308a\u3001\u672c\u8cea\u7684\u306b\u306f\u3053\u306e\u901f\u5ea6\u8a08\u753b\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u8eca\u4e21\u99c6\u52d5\u3092\u771f\u306b\u958b\u59cb\u3059\u308b\u4fe1\u53f7\u3092\u53d6\u5f97\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u539f\u56e0\u3067\u3059\u3002 \u4e00\u65b9\u3067\u3001\u767a\u9032\u6642\u306b\u8def\u9762\u306e\u7aaa\u307f\u306b\u306f\u307e\u3063\u3066\u30b9\u30bf\u30c3\u30af\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u3044\u3064\u307e\u3067\u3082\u767a\u9032\u3057\u306a\u3044\u3068\u3044\u3063\u305f\u8ab2\u984c\u3082\u3042\u308a\u3001\u3053\u3053\u306f\u73fe\u5728\u5bfe\u5fdc\u4e2d\u3067\u3059\u3002 \u306a\u304a\u3001\u73fe\u5728\u306f\u958b\u767a/\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30b3\u30b9\u30c8\u3068\u6027\u80fd\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u89b3\u70b9\u304b\u3089 PID \u5236\u5fa1\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u3053\u306f\u3001\u4eca\u5f8c\u306e\u958b\u767a\u306b\u304a\u3044\u3066\u3001\u3088\u308a\u9ad8\u6027\u80fd\u306a\u5236\u5fa1\u7cfb\uff08adaptive control \u3084\u30ed\u30d0\u30b9\u30c8\u5236\u5fa1\uff09\u306b\u3088\u308b\u7f6e\u304d\u63db\u308f\u3063\u3066\u3044\u304f\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 Time delay compensation # \u9ad8\u901f\u8d70\u884c\u6642\u306b\u304a\u3044\u3066\u3001\u30a2\u30af\u30bb\u30eb\u3084\u30d6\u30ec\u30fc\u30ad\u306a\u3069\u306e\u30a2\u30af\u30c1\u30e5\u30a8\u30fc\u30bf\u7cfb\u304c\u6301\u3064\u9045\u5ef6\u306f\u3001\u8d70\u884c\u7cbe\u5ea6\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u53ca\u307c\u3057\u307e\u3059\u3002 \u8eca\u4e21\u306e\u99c6\u52d5\u539f\u7406\u306b\u4f9d\u5b58\u3057\u307e\u3059\u304c\u3001\u30a2\u30af\u30bb\u30eb\u30d6\u30ec\u30fc\u30ad\u3092\u7269\u7406\u7684\u306b\u5236\u5fa1\u3059\u308b\u6a5f\u69cb\u306f\u4e00\u822c\u7684\u306b\u6570 100ms \u306e\u9045\u5ef6\u3092\u6709\u3057\u307e\u3059\u3002 \u3053\u306e\u901f\u5ea6\u5236\u5fa1\u3067\u306f\u3001\u5236\u5fa1\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u90e8\u3067\u9045\u5ef6\u6642\u9593\u5f8c\u306e\u81ea\u8eca\u901f\u5ea6\u3068\u76ee\u6a19\u901f\u5ea6\u3092\u8a08\u7b97\u3057\u3001\u4e88\u3081\u5148\u306e\u72b6\u614b\u3092\u7528\u3044\u3066\u5236\u5fa1\u7cfb\u3092\u7d44\u3080\u3053\u3068\u306b\u3088\u308a\u3001\u9045\u5ef6\u6642\u9593\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002 References / External links # - Future extensions / Unimplemented parts # - Related issues # -","title":"Velocity Controller"},{"location":"control/velocity_controller/velocity_controller-design.ja/#velocity-controller","text":"===========","title":"Velocity Controller"},{"location":"control/velocity_controller/velocity_controller-design.ja/#purpose-use-cases","text":"velocity_controller \u306f\u76ee\u6a19\u8ecc\u9053\u4e0a\u306e\u5404\u70b9\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u76ee\u6a19\u901f\u5ea6\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u3067\u3042\u308a\u3001\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u30eb\u30fc\u30d7\u3092\u7528\u3044\u3066\u81ea\u8eca\u901f\u5ea6\u3068\u76ee\u6a19\u901f\u5ea6\u304b\u3089\u76ee\u6a19\u52a0\u901f\u5ea6\u3092\u51fa\u529b\u3057\u307e\u3059\u3002 \u9053\u8def\u52fe\u914d\u60c5\u5831\u3092\u8003\u616e\u3057\u305f\u52fe\u914d\u529b\u88dc\u6b63\u3084\u3001\u9045\u5ef6\u88dc\u6b63\u306e\u6a5f\u80fd\u306a\u3069\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u3053\u3067\u8a08\u7b97\u3055\u308c\u305f\u76ee\u6a19\u52a0\u901f\u5ea6\u306f\u3001\u5f8c\u6bb5\u306e\u8eca\u4e21\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u3088\u3063\u3066\u9069\u5207\u306b\u5b9f\u73fe\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u306a\u304a\u3001\u81ea\u52d5\u904b\u8ee2\u3092\u884c\u3046\u8eca\u4e21\u304c\u300c\u76ee\u6a19\u901f\u5ea6\u300d\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001Autoware \u3068\u3057\u3066\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5229\u7528\u306f\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"Purpose / Use cases"},{"location":"control/velocity_controller/velocity_controller-design.ja/#why-separate-lateral-steering-and-longitudinal-velocity-control","text":"\u3053\u306e\u901f\u5ea6\u5236\u5fa1\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7e26\u6a2a\u5236\u5fa1\u306e\u5f79\u5272\u304c\u5206\u96e2\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u30b9\u30c6\u30a2\u5236\u5fa1\u306f\u3001\u901f\u5ea6\u304c\u7406\u60f3\u72b6\u614b\u3067\u5236\u5fa1\u3055\u308c\u3066\u3044\u308b\u4eee\u5b9a\u306e\u3082\u3068\u3001\u8eca\u4e21\u3092\u7d4c\u8def\u4e0a\u306b\u7559\u3081\u308b\u305f\u3081\u306e\u30b9\u30c6\u30a2\u30ea\u30f3\u30b0\u76ee\u6a19\u5024\u3092\u8a08\u7b97\u3059\u308b\u3002 \u901f\u5ea6\u5236\u5fa1\u306f\u3001\u8eca\u4e21\u304c\u7406\u60f3\u72b6\u614b\u3067\u7d4c\u8def\u4e0a\u306b\u5b58\u5728\u3059\u308b\u3068\u3044\u3046\u4eee\u5b9a\u306e\u3082\u3068\u3001\u8eca\u4e21\u901f\u5ea6\u3092\u7d4c\u8def\u901f\u5ea6\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u306e\u76ee\u6a19\u901f\u5ea6/\u52a0\u901f\u5ea6\u3092\u8a08\u7b97\u3059\u308b\u3002 \u7406\u60f3\u7684\u306b\u306f\u30b9\u30c6\u30a2\u3068\u901f\u5ea6\u306e\u5236\u5fa1\u3092 1 \u3064\u306e\u6df7\u5408\u554f\u984c\u3068\u3057\u3066\u6349\u3048\u3066\u5236\u5fa1\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u6027\u80fd\u306f\u5411\u4e0a\u3057\u307e\u3059\u3002\u5bfe\u3057\u3066\u3001\u901f\u5ea6\u5236\u5fa1\u3092\u5358\u4f53\u306e\u6a5f\u80fd\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u7406\u7531\u306f 2 \u3064\u3042\u308a\u307e\u3059\u3002","title":"why separate lateral (steering) and longitudinal (velocity) control?"},{"location":"control/velocity_controller/velocity_controller-design.ja/#complex-requirements-for-longitudinal-motion","text":"\u4eba\u9593\u304c\u8eca\u4e21\u306b\u671f\u5f85\u3059\u308b\u7e26\u65b9\u5411\u306e\u52d5\u4f5c\u306f\u3001\u5358\u4f53\u306e\u30ed\u30b8\u30c3\u30af\u3067\u8868\u3059\u3053\u3068\u306f\u56f0\u96e3\u3067\u3059\u3002\u305f\u3068\u3048\u3070\u505c\u6b62\u76f4\u524d\u306b\u304a\u3044\u3066\u3001\u8eca\u4e21\u306e\u73fe\u5728\u4f4d\u7f6e\u304c\u505c\u6b62\u7dda\u306e\u524d\u5f8c\u306a\u306e\u304b\u3001\u73fe\u5ea7\u901f\u5ea6\u304c\u76ee\u6a19\u901f\u5ea6\u3068\u6bd4\u3079\u3066\u9ad8\u3044\u304b\u306e\u304b\u4f4e\u3044\u304b\u306e\u304b\u3001\u306a\u3069\u306b\u5fdc\u3058\u3066\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u306f\u7570\u306a\u308a\u307e\u3059\u3002 \u307e\u305f\u3001\u901a\u5e38\u306e\u8eca\u4e21\u306f\u6975\u4f4e\u901f\u306e\u8eca\u901f\u6e2c\u5b9a\u306f\u56f0\u96e3\u3067\u3042\u308a\u3001\u4f4e\u901f\u57df\u3067\u306e\u89b3\u6e2c\u7cbe\u5ea6\u304c\u8457\u3057\u304f\u52a3\u5316\u3059\u308b\u3068\u3044\u3046\u7279\u5fb4\u3092\u6301\u3061\u307e\u3059\u3002 \u3053\u306e\u3088\u3046\u306b\u3001\u7e26\u65b9\u5411\u306e\u5236\u5fa1\u306b\u56fa\u6709\u306e\u7279\u6027\u3084\u30cb\u30fc\u30ba\u304c\u591a\u304f\u5b58\u5728\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u6a2a\u65b9\u5411\u5236\u5fa1\u3068\u306f\u5206\u96e2\u3057\u3066\u8a2d\u8a08\u3059\u308b\u3053\u3068\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u7d50\u5408\u5ea6\u3092\u4f4e\u304f\u4fdd\u3061\u3001\u4fdd\u5b88\u6027\u3092\u5411\u4e0a\u3055\u305b\u307e\u3059\u3002","title":"Complex requirements for longitudinal motion"},{"location":"control/velocity_controller/velocity_controller-design.ja/#nonlinear-coupling-of-lateral-and-longitudinal-motion","text":"\u30b9\u30c6\u30a2\u3068\u901f\u5ea6\u306e\u7d71\u5408\u5236\u5fa1\u554f\u984c\u306f\u975e\u5e38\u306b\u8907\u96d1\u3067\u3042\u308a\u3001\u591a\u304f\u306e\u5834\u5408\u3001\u6027\u80fd\u3092\u51fa\u3059\u305f\u3081\u306b\u975e\u7dda\u5f62\u6700\u9069\u5316\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u30ed\u30b8\u30c3\u30af\u306f\u53ce\u675f\u6027\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u89b3\u70b9\u3067\u5b89\u5168\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u307e\u305f\u3001\u8eca\u4e21\u9650\u754c\u8fd1\u508d\u3067\u306e\u5236\u5fa1\u3092\u8003\u3048\u306a\u3044\u5834\u5408\u306f\u3001\u7e26\u6a2a\u540c\u6642\u306b\u5236\u5fa1\u3092\u884c\u3046\u30e1\u30ea\u30c3\u30c8\u306f\u5c0f\u3055\u304f\u3001\u4e00\u822c\u516c\u9053\u3067\u306e\u901a\u5e38\u8d70\u884c\u306b\u304a\u3044\u3066\u5206\u96e2\u578b\u3067\u6027\u80fd\u306b\u56f0\u308b\u3053\u3068\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002 \uff08\u3053\u3053\u3067\u8ff0\u3079\u3066\u3044\u308b\u306e\u306f\u76ee\u6a19\u5024\u8ffd\u5f93\u554f\u984c\u306b\u304a\u3051\u308b\u7d71\u5408\u5236\u5fa1\u306e\u30e1\u30ea\u30c3\u30c8\u3067\u3042\u308a\u3001\u7d4c\u8def\u8a08\u753b\u306b\u304a\u3044\u3066\u306f\u7e26\u6a2a\u540c\u6642\u306b\u8a08\u753b\u3059\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u5b58\u5728\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\uff09","title":"Nonlinear coupling of lateral and longitudinal motion"},{"location":"control/velocity_controller/velocity_controller-design.ja/#so-how-should-we-consider-lateral-and-longitudinal-motion-simultaneously","text":"\u4e00\u65b9\u3067\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u7e26\u3068\u6a2a\u306e\u52d5\u304d\u3092\u540c\u6642\u306b\u8003\u3048\u3066\u8a2d\u8a08\u3059\u308b\u3079\u304d\u3067\u3059\u3002 \u30ab\u30fc\u30d6\u306b\u8fd1\u3065\u304f\u306e\u3067\u6e1b\u901f\u3057\u305f\u3044 \u8eca\u4e21\u304c\u7d4c\u8def\u304b\u3089\u9038\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u4f4e\u901f\u8d70\u884c\u3067\u7d4c\u8def\u306b\u5fa9\u5e30\u3057\u305f\u3044 \u305f\u3060\u3057\u3001\u3053\u308c\u3089\u306f\u5236\u5fa1\u306e\u5185\u90e8\u60c5\u5831\u3092\u5229\u7528\u305b\u305a\u306b\u5b9f\u884c\u53ef\u80fd\u3067\u3042\u308b\u305f\u3081\u3001\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306f\u4e0a\u6bb5\u306e\u901f\u5ea6\u8a08\u753b\u3084\u7d4c\u8def\u8a08\u753b\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u7f6e\u3044\u3066\u9069\u5207\u306b\u8a2d\u8a08\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002 \u5236\u5fa1\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u3042\u304f\u307e\u3067\u8a08\u753b\u3055\u308c\u305f\u901f\u5ea6/\u7d4c\u8def\u4f4d\u7f6e\u3092\u5b88\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3042\u308a\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u81ea\u4f53\u304c\u671f\u5f85\u3059\u308b\u6319\u52d5\u81ea\u4f53\uff08\u8a08\u753b\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u51fa\u529b\uff09\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002","title":"So, how should we consider lateral and longitudinal motion simultaneously?"},{"location":"control/velocity_controller/velocity_controller-design.ja/#design","text":"","title":"Design"},{"location":"control/velocity_controller/velocity_controller-design.ja/#assumptions-known-limits","text":"\u9069\u5207\u306b\u5e73\u6ed1\u5316\u3055\u308c\u305f\u76ee\u6a19\u901f\u5ea6\u304a\u3088\u3073\u305d\u306e\u52a0\u901f\u5ea6\u304c\u8ecc\u9053\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u3053\u3068 \u5236\u5fa1\u5185\u90e8\u3067\u76ee\u6a19\u5024\u3092\u66f8\u304d\u63db\u3048\u308b\u51e6\u7406\u306f\u884c\u3044\u307e\u305b\u3093\uff08\u30ce\u30a4\u30ba\u51e6\u7406\u7a0b\u5ea6\u306e\u3053\u3068\u306f\u884c\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\uff09\u3002 \u6025\u306a\u30b9\u30c6\u30c3\u30d7\u72b6\u306e\u76ee\u6a19\u5024\u5909\u52d5\u306b\u5bfe\u3057\u3066\u306f\u3001\u53ef\u80fd\u306a\u9650\u308a\u9ad8\u901f\u3067\u8ffd\u5f93\u3092\u884c\u3044\u307e\u3059\u3002 \u8eca\u4e21\u901f\u5ea6\u304c\u9069\u5207\u306a\u5024\u3067\u3042\u308b\u3053\u3068 \u524d\u5f8c\u65b9\u5411\u306b\u5bfe\u5fdc\u3059\u308b\u7b26\u53f7\u4ed8\u304d\u306e\u901f\u5ea6\u304c\u4e0e\u3048\u3089\u308c\u308b\u3053\u3068 EKF \u306a\u3069\u306b\u3088\u3063\u3066\u9069\u5207\u306b\u30ce\u30a4\u30ba\u51e6\u7406\u304c\u65bd\u3055\u308c\u305f\u8eca\u8f2a\u901f\u304c\u4e0e\u3048\u3089\u308c\u308b\u3053\u3068 \u81ea\u8eca\u901f\u5ea6\u306b\u5927\u304d\u306a\u30ce\u30a4\u30ba\u304c\u4e57\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u8ffd\u5f93\u6027\u80fd\u306f\u8457\u3057\u304f\u4e0b\u304c\u308a\u307e\u3059 \u5f8c\u6bb5\u306e\u6a5f\u80fd\u306b\u3088\u3063\u3066\u3001\u76ee\u6a19\u901f\u5ea6/\u76ee\u6a19\u52a0\u901f\u5ea6\u304c\u5b9f\u73fe\u3055\u308c\u308b\u3053\u3068 \u8eca\u4e21\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u76ee\u6a19\u52a0\u901f\u5ea6\u3067\u306a\u3044\u5834\u5408\uff08\u30a2\u30af\u30bb\u30eb\u30d6\u30ec\u30fc\u30ad\u306a\u3069\uff09\u306f\u3001\u9069\u5207\u306a\u5909\u63db\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u631f\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002","title":"Assumptions / Known limits"},{"location":"control/velocity_controller/velocity_controller-design.ja/#inputs-outputs-api","text":"","title":"Inputs / Outputs / API"},{"location":"control/velocity_controller/velocity_controller-design.ja/#output","text":"control_cmd [ autoware_control_msgs/ControlCommandStamped ] : command to control the vehicle for the longitudinal motion. It contains the target velocity and target acceleration. debug_values [ std_msgs/Float32MultiArray ] : debug values used for the control command generation (e.g. the contributions of each P-I-D terms).","title":"output"},{"location":"control/velocity_controller/velocity_controller-design.ja/#input","text":"current_velocity [ geometry_msgs/TwistStamped ] : Current ego-velocity. /localization/twist is currently used in the Autoware.iv. current_trajectory [ autoware_planning_msgs/Trajectory ] : Current target trajectory for the desired velocity on the each trajectory points. /tf [ tf2_msgs/TFMessage ] : For ego-pose.","title":"input"},{"location":"control/velocity_controller/velocity_controller-design.ja/#note-why-the-debug-message-uses-the-multi-array","text":"Ideally, this message should be defined as a specific debug message with meaningful field names, like VelocityControllerDebugValues.msg . However, these debug values are fluid and new items are frequently added on the development phase, and unfortunately, adding a new field to a ros message definition is not backward compatible. Whereas, new elements can be added in the array-type message without any burden. This is why the Float32MultiArray type is currently used for now. The content of each element is defined in the header file.","title":"Note: why the debug message uses the multi-array?"},{"location":"control/velocity_controller/velocity_controller-design.ja/#inner-workings-algorithms","text":"","title":"Inner-workings / Algorithms"},{"location":"control/velocity_controller/velocity_controller-design.ja/#states","text":"\u505c\u6b62\u6642\u306e\u7279\u6b8a\u51e6\u7406\u306a\u3069\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b 4 \u3064\u306e\u72b6\u614b\u9077\u79fb\u3092\u6301\u3061\u307e\u3059\u3002 DRIVE pid \u5236\u5fa1\u306b\u3088\u3063\u3066\u76ee\u6a19\u901f\u5ea6\u8ffd\u5f93\u3092\u884c\u3046 \u9045\u5ef6\u88dc\u511f\u3084\u52fe\u914d\u88dc\u511f\u306e\u6a5f\u80fd\u3082\u9069\u7528\u3055\u308c\u308b STOPPING \u505c\u8eca\u76f4\u524d\u306e\u52d5\u4f5c\u3092\u5236\u5fa1\u3057\u307e\u3059 \u505c\u6b62\u7cbe\u5ea6\u3084\u6ed1\u3089\u304b\u306a\u505c\u6b62\u306e\u305f\u3081\u306e\u7279\u6b8a\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059 STOPPED \u505c\u6b62\u72b6\u614b\u3067\u306e\u52d5\u4f5c\u3092\u884c\u3044\u307e\u3059\uff08\u30d6\u30ec\u30fc\u30ad\u30db\u30fc\u30eb\u30c9\u306a\u3069\uff09 EMERGENCY \u7279\u5b9a\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u5834\u5408\u306b\u306f\u7dca\u6025\u72b6\u614b\u306b\u5165\u308a\u307e\u3059\uff08\u505c\u6b62\u7dda\u3092\u4e00\u5b9a\u4ee5\u4e0a\u8d85\u3048\u305f\u5834\u5408\u306a\u3069\uff09\u3002 \u89e3\u9664\u6761\u4ef6\uff08\u505c\u6b62\u3059\u308b\u307e\u3067\u89e3\u9664\u3057\u306a\u3044\u304b\u3069\u3046\u304b\u306a\u3069\uff09\u3084\u3001\u7dca\u6025\u5236\u52d5\u6642\u306e\u6e1b\u901f\u5ea6\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u307e\u3059\u3002 \u72b6\u614b\u9077\u79fb\u56f3\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\uff08TODO\uff09","title":"States"},{"location":"control/velocity_controller/velocity_controller-design.ja/#logics","text":"","title":"Logics"},{"location":"control/velocity_controller/velocity_controller-design.ja/#control-block-diagram","text":"","title":"Control Block Diagram"},{"location":"control/velocity_controller/velocity_controller-design.ja/#feedforward","text":"\u76ee\u6a19\u8ecc\u9053\u306b\u57cb\u3081\u8fbc\u307e\u308c\u305f\u52a0\u901f\u5ea6\u3001\u304a\u3088\u3073\u52fe\u914d\u88dc\u6b63\u9805\u3092 FF \u6210\u5206\u3068\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002\u30e2\u30c7\u30eb\u5316\u8aa4\u5dee\u304c\u306a\u3044\u7406\u60f3\u4e0b\u306b\u304a\u3044\u3066\u306f\u3001\u3053\u306e FF \u9805\u306e\u307f\u3067\u9069\u5207\u306a\u901f\u5ea6\u8ffd\u5f93\u304c\u53ef\u80fd\u3067\u3059\u3002 \u96e2\u6563\u5316\u3084\u30e2\u30c7\u30eb\u5316\u8aa4\u5dee\u306b\u3088\u3063\u3066\u751f\u3058\u305f\u8ffd\u5f93\u8aa4\u5dee\u306f feedback \u7cfb\u306b\u3088\u3063\u3066\u53d6\u308a\u9664\u304b\u308c\u307e\u3059\u3002","title":"FeedForward"},{"location":"control/velocity_controller/velocity_controller-design.ja/#slope-compensation","text":"\u52fe\u914d\u60c5\u5831\u3092\u3082\u3068\u306b\u3001\u76ee\u6a19\u52a0\u901f\u5ea6\u306b\u52fe\u914d\u529b\u6210\u5206\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002 \u3053\u306e\u52fe\u914d\u60c5\u5831\u306f 2 \u3064\u306e\u30bd\u30fc\u30b9\u304c\u3042\u308a\u3001\u5207\u66ff\u53ef\u80fd\u3067\u3059 \u81ea\u5df1\u4f4d\u7f6e\u306e\u30d4\u30c3\u30c1\u6210\u5206\uff08default\uff09 \u81ea\u5df1\u4f4d\u7f6e\u306e\u30d4\u30c3\u30c1\u89d2\u304b\u3089\u73fe\u5728\u306e\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b Pros: \u7c21\u5358\u306b\u5229\u7528\u53ef\u80fd Cons: \u8eca\u4f53\u306e\u632f\u52d5\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u305f\u3081\u3001\u7cbe\u5ea6\u306e\u826f\u3044\u52fe\u914d\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044 \u7d4c\u8def\u306e z \u5ea7\u6a19 \u76ee\u6a19\u7d4c\u8def\u306b\u304a\u3051\u308b\u524d\u8f2a\u3068\u5f8c\u8f2a\u4f4d\u7f6e\u3067\u306e z \u5ea7\u6a19\u306e\u5dee\u5206\u304b\u3089\u9053\u8def\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b Pros: \u7d4c\u8def\u306e z \u5ea7\u6a19\u304c\u9069\u5207\u306b\u6574\u5099\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u81ea\u5df1\u4f4d\u7f6e\u63a8\u5b9a\u306e\u30d4\u30c3\u30c1\u63a8\u5b9a\u3088\u308a\u3082\u9ad8\u7cbe\u5ea6\u3067\u3042\u308b Pros: \u9045\u5ef6\u88dc\u511f\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u5229\u7528\u304c\u53ef\u80fd\uff08\u6a5f\u80fd\u306f\u672a\u5b9f\u88c5\uff09 Cons: \u9ad8\u7cbe\u5ea6\u5730\u56f3\u306e z \u5ea7\u6a19\u3092\u9069\u5207\u306b\u6574\u5099\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b Cons: \uff08\u73fe\u6642\u70b9\u3067\u306f\uff09\u30d5\u30ea\u30fc\u30b9\u30da\u30fc\u30b9\u3067\u306e\u8a08\u753b\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044","title":"Slope compensation"},{"location":"control/velocity_controller/velocity_controller-design.ja/#pid-control","text":"\u30e2\u30c7\u30eb\u8aa4\u5dee\u306a\u3069\u306e FeedForward \u5236\u5fa1\u3067\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u504f\u5dee\u306b\u5bfe\u3057\u3066\u3001PID \u5236\u5fa1\u3092\u7528\u3044\u3066\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u7cfb\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002 \u3053\u306e PID \u5236\u5fa1\u306f\u3001\u73fe\u5728\u8eca\u901f\u3068\u76ee\u6a19\u8eca\u901f\u306e\u504f\u5dee\u304b\u3089\u76ee\u6a19\u52a0\u901f\u5ea6\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002 \u3053\u306e PID \u30ed\u30b8\u30c3\u30af\u306b\u306f\u3001\u5404\u9805\u306e\u51fa\u529b\u306b\u6700\u5927\u5024\u3092\u8a2d\u3051\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u4ee5\u4e0b\u3092\u9632\u3050\u305f\u3081\u3067\u3059\u3002 \u5927\u304d\u306a\u7a4d\u5206\u9805\u306f\u958b\u767a\u8005\u306e\u610f\u56f3\u3057\u306a\u3044\u6319\u52d5\u3092\u5f15\u304d\u8d77\u3053\u3059\u6050\u308c\u304c\u3042\u308b \u610f\u56f3\u3057\u306a\u3044\u30ce\u30a4\u30ba\u306b\u3088\u308a\u3001\u5fae\u5206\u9805\u306e\u51fa\u529b\u304c\u975e\u5e38\u306b\u5927\u304d\u306a\u5024\u306b\u306a\u308b\u6050\u308c\u304c\u3042\u308b \u307e\u305f\u3001\u7a4d\u5206\u9805\u306f\u901f\u5ea6 0 \u306e\u3068\u304d\u306b\u306f\u84c4\u7a4d\u3055\u308c\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u300cAutoware \u3068\u3057\u3066\u306f\u767a\u8eca\u60f3\u5b9a\u3092\u3057\u3066\u3044\u308b\u304c\u3001\u5916\u90e8\u30e6\u30fc\u30b6\u306b\u3088\u3063\u3066\u8eca\u4e21\u306e\u767a\u9032\u306b\u30ed\u30c3\u30af\u304c\u639b\u3051\u3089\u308c\u3066\u3044\u308b\u300d\u3088\u3046\u306a\u30b1\u30fc\u30b9\u306b\u304a\u3051\u308b\u610f\u56f3\u3057\u306a\u3044\u7a4d\u5206\u9805\u306e\u84c4\u7a4d\u3092\u9632\u3050\u305f\u3081\u3067\u3042\u308a\u3001\u672c\u8cea\u7684\u306b\u306f\u3053\u306e\u901f\u5ea6\u8a08\u753b\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u8eca\u4e21\u99c6\u52d5\u3092\u771f\u306b\u958b\u59cb\u3059\u308b\u4fe1\u53f7\u3092\u53d6\u5f97\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u539f\u56e0\u3067\u3059\u3002 \u4e00\u65b9\u3067\u3001\u767a\u9032\u6642\u306b\u8def\u9762\u306e\u7aaa\u307f\u306b\u306f\u307e\u3063\u3066\u30b9\u30bf\u30c3\u30af\u3057\u305f\u5834\u5408\u306b\u306f\u3001\u3044\u3064\u307e\u3067\u3082\u767a\u9032\u3057\u306a\u3044\u3068\u3044\u3063\u305f\u8ab2\u984c\u3082\u3042\u308a\u3001\u3053\u3053\u306f\u73fe\u5728\u5bfe\u5fdc\u4e2d\u3067\u3059\u3002 \u306a\u304a\u3001\u73fe\u5728\u306f\u958b\u767a/\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u30b3\u30b9\u30c8\u3068\u6027\u80fd\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306e\u89b3\u70b9\u304b\u3089 PID \u5236\u5fa1\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002 \u3053\u3053\u306f\u3001\u4eca\u5f8c\u306e\u958b\u767a\u306b\u304a\u3044\u3066\u3001\u3088\u308a\u9ad8\u6027\u80fd\u306a\u5236\u5fa1\u7cfb\uff08adaptive control \u3084\u30ed\u30d0\u30b9\u30c8\u5236\u5fa1\uff09\u306b\u3088\u308b\u7f6e\u304d\u63db\u308f\u3063\u3066\u3044\u304f\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002","title":"PID control"},{"location":"control/velocity_controller/velocity_controller-design.ja/#time-delay-compensation","text":"\u9ad8\u901f\u8d70\u884c\u6642\u306b\u304a\u3044\u3066\u3001\u30a2\u30af\u30bb\u30eb\u3084\u30d6\u30ec\u30fc\u30ad\u306a\u3069\u306e\u30a2\u30af\u30c1\u30e5\u30a8\u30fc\u30bf\u7cfb\u304c\u6301\u3064\u9045\u5ef6\u306f\u3001\u8d70\u884c\u7cbe\u5ea6\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u53ca\u307c\u3057\u307e\u3059\u3002 \u8eca\u4e21\u306e\u99c6\u52d5\u539f\u7406\u306b\u4f9d\u5b58\u3057\u307e\u3059\u304c\u3001\u30a2\u30af\u30bb\u30eb\u30d6\u30ec\u30fc\u30ad\u3092\u7269\u7406\u7684\u306b\u5236\u5fa1\u3059\u308b\u6a5f\u69cb\u306f\u4e00\u822c\u7684\u306b\u6570 100ms \u306e\u9045\u5ef6\u3092\u6709\u3057\u307e\u3059\u3002 \u3053\u306e\u901f\u5ea6\u5236\u5fa1\u3067\u306f\u3001\u5236\u5fa1\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u90e8\u3067\u9045\u5ef6\u6642\u9593\u5f8c\u306e\u81ea\u8eca\u901f\u5ea6\u3068\u76ee\u6a19\u901f\u5ea6\u3092\u8a08\u7b97\u3057\u3001\u4e88\u3081\u5148\u306e\u72b6\u614b\u3092\u7528\u3044\u3066\u5236\u5fa1\u7cfb\u3092\u7d44\u3080\u3053\u3068\u306b\u3088\u308a\u3001\u9045\u5ef6\u6642\u9593\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002","title":"Time delay compensation"},{"location":"control/velocity_controller/velocity_controller-design.ja/#references-external-links","text":"-","title":"References / External links"},{"location":"control/velocity_controller/velocity_controller-design.ja/#future-extensions-unimplemented-parts","text":"-","title":"Future extensions / Unimplemented parts"},{"location":"control/velocity_controller/velocity_controller-design.ja/#related-issues","text":"-","title":"Related issues"},{"location":"control/velocity_controller/velocity_controller-design/","text":"Velocity Controller # =========== Purpose / Use cases # The velocity_controller computes the target acceleration from the ego-velocity to realize the target velocity set at each point on the target trajectory using a feed-forward/back control. It also contains a slope force correction that takes into account road slope information, and a delay compensation function. It is assumed that the target acceleration calculated here will be properly realized by the vehicle interface. Note that the use of this module is not mandatory for Autoware if the vehicle supports the \"target speed\" interface. why separate lateral (steering) and longitudinal (velocity) control? # This velocity controller assumes that the roles of lateral and longitudinal control are separated as follows. Lateral control computes a target steering to keep the vehicle on the trajectory, assuming perfect velocity tracking. Longitudinal control computes a target velocity/acceleration to keep the vehicle velocity on the trajectory speed, assuming perfect trajectory tracking. Ideally, dealing with the lateral and longitudinal control as a single mixed problem can achieve high performance. In contrast, there are two reasons to provide velocity controller as a stand-alone function, described below. Complex requirements for longitudinal motion # The longitudinal vehicle behavior that humans expect is difficult to express in a single logic. For example, the expected behavior just before stopping differs depending on whether the ego-position is ahead/behind of the stop line, or whether the current speed is higher/lower than the target speed to achieve a human-like movement. In addition, some vehicles have difficulty measuring the ego-speed at extremely low speeds. In such cases, a configuration that can improve the functionality of the longitudinal control without affecting the lateral control is important. There are many characteristics and needs that are unique to longitudinal control. Designing them separately from the lateral control keeps the modules less coupled and improves maintainability. Nonlinear coupling of lateral and longitudinal motion # The lat-lon mixed control problem is very complex and uses nonlinear optimization to achieve high performance. Since it is difficult to guarantee the convergence of the nonlinear optimization, a simple control logic is also necessary for development. Also, the benefits of simultaneous longitudinal and lateral control are small if the vehicle doesn't move at high speed. So, how should we consider lateral and longitudinal motion simultaneously? # On the other hand, in the following cases, lateral and longitudinal movements should be considered and designed at the same time. the vehicle should decelerate when it is approaching a curve the vehicle should drive at low speed when it deviates from the path. However, since these can be done without using the internal information of the controller modules, it is assumed that these functions are properly designed in the previous path/velocity planning modules. The control module is only meant to follow the planned trajectory as accurately as possible, and this module itself will not override the desired motion. Design # Assumptions / Known limits # Smoothed target velocity and its acceleration shall be set in the trajectory The velocity command is not smoothed inside the controller (only noise may be removed). For step-like target signal, tracking is performed as fast as possible. The vehicle velocity must be an appropriate value The ego-velocity must be a signed-value corresponding to the forward/backward direction The ego-velocity should be given with appropriate noise processing. If there is a large amount of noise in the ego-velocity, the tracking performance will be significantly reduced. The output of this controller must be achieved by later modules (e.g. vehicle interface). If the vehicle interface does not have the target velocity or acceleration interface (e.g., the vehicle only has a gas pedal and brake interface), an appropriate conversion must be done after this controller. Inputs / Outputs / API # output # control_cmd [ autoware_control_msgs/ControlCommandStamped ] : command to control the vehicle for the longitudinal motion. It contains the target velocity and target acceleration. debug_values [ std_msgs/Float32MultiArray ] : debug values used for the control command generation (e.g. the contributions of each P-I-D terms). input # current_velocity [ geometry_msgs/TwistStamped ] : Current ego-velocity. /localization/twist is currently used in the Autoware.iv. current_trajectory [ autoware_planning_msgs/Trajectory ] : Current target trajectory for the desired velocity on the each trajectory points. /tf [ tf2_msgs/TFMessage ] : For ego-pose. Note: why the debug message uses the multi-array? # Ideally, this message should be defined as a specific debug message with meaningful field names, like VelocityControllerDebugValues.msg . However, these debug values are fluid and new items are frequently added on the development phase, and unfortunately, adding a new field to a ros message definition is not backward compatible. Whereas, new elements can be added in the array-type message without any burden. This is why the Float32MultiArray type is currently used for now. The content of each element is defined in the header file. Inner-workings / Algorithms # States # This module has four state transitions as shown below in order to handle special processing in a specific situation. DRIVE Executes target velocity tracking by PID control. It also applies the delay compensation and slope compensation. STOPPING Controls the motion just before stopping. Special sequence is performed to achieve accurate and smooth stopping. STOPPED Performs operations in the stopped state (e.g. brake hold) EMERGENCY . Enters an emergency state when certain conditions are met (e.g., when the vehicle has crossed a certain distance of a stop line). The recovery condition (whether or not to keep emergency state until the vehicle completely stops) or the deceleration in the emergency state are defined by parameters. The state transition diagram is shown below. Logics # Control Block Diagram # FeedForward (FF) # The reference acceleration set in the trajectory and slope compensation terms are output as a feedforward. Under ideal conditions with no modeling error, this FF term alone should be sufficient for velocity tracking. Tracking errors causing modeling or discretization errors are removed by the feedback control (now using PID). Slope compensation # Based on the slope information, a compensation term is added to the target acceleration. There are two sources of the slope information, which can be switched by a parameter. Pitch of the estimated ego-pose (default) Calculates the current slope from the pitch angle of the estimated ego-pose Pros: Easily available Cons: Cannot extract accurate slope information due to the influence of vehicle vibration. Z coordinate on the trajectory Calculates the road slope from the difference of z-coordinates between the front and rear wheel positions in the target trajectory Pros: More accurate than pitch information, if the z-coordinates of the route are properly maintained Pros: Can be used in combination with delay compensation (not yet implemented) Cons: z-coordinates of high-precision map is needed. Cons: Does not support free space planning (for now) PID control # For deviations that cannot be handled by FeedForward control, such as model errors, PID control is used to construct a feedback system. This PID control calculates the target acceleration from the deviation between the current ego-velocity and the target velocity. This PID logic has a maximum value for the output of each term. This is to prevent the following: Large integral terms may cause unintended behavior by users. Unintended noise may cause the output of the derivative term to be very large. Also, the integral term is not accumulated when the vehicle is stopped. This is to prevent unintended accumulation of the integral term in cases such as \"Autoware assumes that the vehicle is engaged, but an external system has locked the vehicle to start. On the other hand, if the vehicle gets stuck in a depression in the road surface when starting, the vehicle will not start forever, which is currently being addressed by developers. At present, PID control is implemented from the viewpoint of trade-off between development/maintenance cost and performance. This may be replaced by a higher performance controller (adaptive control or robust control) in future development. Time delay compensation # At high speeds, the delay of actuator systems such as gas pedals and brakes has a significant impact on driving accuracy. Depending on the actuating principle of the vehicle, the mechanism that physically controls the gas pedal and brake typically has a delay of about a hundred millisecond. In this controller, the predicted ego-velocity and the target velocity after the delay time are calculated and used for the feedback to address the time delay problem. References / External links # - Future extensions / Unimplemented parts # - Related issues # -","title":"Velocity Controller"},{"location":"control/velocity_controller/velocity_controller-design/#velocity-controller","text":"===========","title":"Velocity Controller"},{"location":"control/velocity_controller/velocity_controller-design/#purpose-use-cases","text":"The velocity_controller computes the target acceleration from the ego-velocity to realize the target velocity set at each point on the target trajectory using a feed-forward/back control. It also contains a slope force correction that takes into account road slope information, and a delay compensation function. It is assumed that the target acceleration calculated here will be properly realized by the vehicle interface. Note that the use of this module is not mandatory for Autoware if the vehicle supports the \"target speed\" interface.","title":"Purpose / Use cases"},{"location":"control/velocity_controller/velocity_controller-design/#why-separate-lateral-steering-and-longitudinal-velocity-control","text":"This velocity controller assumes that the roles of lateral and longitudinal control are separated as follows. Lateral control computes a target steering to keep the vehicle on the trajectory, assuming perfect velocity tracking. Longitudinal control computes a target velocity/acceleration to keep the vehicle velocity on the trajectory speed, assuming perfect trajectory tracking. Ideally, dealing with the lateral and longitudinal control as a single mixed problem can achieve high performance. In contrast, there are two reasons to provide velocity controller as a stand-alone function, described below.","title":"why separate lateral (steering) and longitudinal (velocity) control?"},{"location":"control/velocity_controller/velocity_controller-design/#complex-requirements-for-longitudinal-motion","text":"The longitudinal vehicle behavior that humans expect is difficult to express in a single logic. For example, the expected behavior just before stopping differs depending on whether the ego-position is ahead/behind of the stop line, or whether the current speed is higher/lower than the target speed to achieve a human-like movement. In addition, some vehicles have difficulty measuring the ego-speed at extremely low speeds. In such cases, a configuration that can improve the functionality of the longitudinal control without affecting the lateral control is important. There are many characteristics and needs that are unique to longitudinal control. Designing them separately from the lateral control keeps the modules less coupled and improves maintainability.","title":"Complex requirements for longitudinal motion"},{"location":"control/velocity_controller/velocity_controller-design/#nonlinear-coupling-of-lateral-and-longitudinal-motion","text":"The lat-lon mixed control problem is very complex and uses nonlinear optimization to achieve high performance. Since it is difficult to guarantee the convergence of the nonlinear optimization, a simple control logic is also necessary for development. Also, the benefits of simultaneous longitudinal and lateral control are small if the vehicle doesn't move at high speed.","title":"Nonlinear coupling of lateral and longitudinal motion"},{"location":"control/velocity_controller/velocity_controller-design/#so-how-should-we-consider-lateral-and-longitudinal-motion-simultaneously","text":"On the other hand, in the following cases, lateral and longitudinal movements should be considered and designed at the same time. the vehicle should decelerate when it is approaching a curve the vehicle should drive at low speed when it deviates from the path. However, since these can be done without using the internal information of the controller modules, it is assumed that these functions are properly designed in the previous path/velocity planning modules. The control module is only meant to follow the planned trajectory as accurately as possible, and this module itself will not override the desired motion.","title":"So, how should we consider lateral and longitudinal motion simultaneously?"},{"location":"control/velocity_controller/velocity_controller-design/#design","text":"","title":"Design"},{"location":"control/velocity_controller/velocity_controller-design/#assumptions-known-limits","text":"Smoothed target velocity and its acceleration shall be set in the trajectory The velocity command is not smoothed inside the controller (only noise may be removed). For step-like target signal, tracking is performed as fast as possible. The vehicle velocity must be an appropriate value The ego-velocity must be a signed-value corresponding to the forward/backward direction The ego-velocity should be given with appropriate noise processing. If there is a large amount of noise in the ego-velocity, the tracking performance will be significantly reduced. The output of this controller must be achieved by later modules (e.g. vehicle interface). If the vehicle interface does not have the target velocity or acceleration interface (e.g., the vehicle only has a gas pedal and brake interface), an appropriate conversion must be done after this controller.","title":"Assumptions / Known limits"},{"location":"control/velocity_controller/velocity_controller-design/#inputs-outputs-api","text":"","title":"Inputs / Outputs / API"},{"location":"control/velocity_controller/velocity_controller-design/#output","text":"control_cmd [ autoware_control_msgs/ControlCommandStamped ] : command to control the vehicle for the longitudinal motion. It contains the target velocity and target acceleration. debug_values [ std_msgs/Float32MultiArray ] : debug values used for the control command generation (e.g. the contributions of each P-I-D terms).","title":"output"},{"location":"control/velocity_controller/velocity_controller-design/#input","text":"current_velocity [ geometry_msgs/TwistStamped ] : Current ego-velocity. /localization/twist is currently used in the Autoware.iv. current_trajectory [ autoware_planning_msgs/Trajectory ] : Current target trajectory for the desired velocity on the each trajectory points. /tf [ tf2_msgs/TFMessage ] : For ego-pose.","title":"input"},{"location":"control/velocity_controller/velocity_controller-design/#note-why-the-debug-message-uses-the-multi-array","text":"Ideally, this message should be defined as a specific debug message with meaningful field names, like VelocityControllerDebugValues.msg . However, these debug values are fluid and new items are frequently added on the development phase, and unfortunately, adding a new field to a ros message definition is not backward compatible. Whereas, new elements can be added in the array-type message without any burden. This is why the Float32MultiArray type is currently used for now. The content of each element is defined in the header file.","title":"Note: why the debug message uses the multi-array?"},{"location":"control/velocity_controller/velocity_controller-design/#inner-workings-algorithms","text":"","title":"Inner-workings / Algorithms"},{"location":"control/velocity_controller/velocity_controller-design/#states","text":"This module has four state transitions as shown below in order to handle special processing in a specific situation. DRIVE Executes target velocity tracking by PID control. It also applies the delay compensation and slope compensation. STOPPING Controls the motion just before stopping. Special sequence is performed to achieve accurate and smooth stopping. STOPPED Performs operations in the stopped state (e.g. brake hold) EMERGENCY . Enters an emergency state when certain conditions are met (e.g., when the vehicle has crossed a certain distance of a stop line). The recovery condition (whether or not to keep emergency state until the vehicle completely stops) or the deceleration in the emergency state are defined by parameters. The state transition diagram is shown below.","title":"States"},{"location":"control/velocity_controller/velocity_controller-design/#logics","text":"","title":"Logics"},{"location":"control/velocity_controller/velocity_controller-design/#control-block-diagram","text":"","title":"Control Block Diagram"},{"location":"control/velocity_controller/velocity_controller-design/#feedforward-ff","text":"The reference acceleration set in the trajectory and slope compensation terms are output as a feedforward. Under ideal conditions with no modeling error, this FF term alone should be sufficient for velocity tracking. Tracking errors causing modeling or discretization errors are removed by the feedback control (now using PID).","title":"FeedForward (FF)"},{"location":"control/velocity_controller/velocity_controller-design/#slope-compensation","text":"Based on the slope information, a compensation term is added to the target acceleration. There are two sources of the slope information, which can be switched by a parameter. Pitch of the estimated ego-pose (default) Calculates the current slope from the pitch angle of the estimated ego-pose Pros: Easily available Cons: Cannot extract accurate slope information due to the influence of vehicle vibration. Z coordinate on the trajectory Calculates the road slope from the difference of z-coordinates between the front and rear wheel positions in the target trajectory Pros: More accurate than pitch information, if the z-coordinates of the route are properly maintained Pros: Can be used in combination with delay compensation (not yet implemented) Cons: z-coordinates of high-precision map is needed. Cons: Does not support free space planning (for now)","title":"Slope compensation"},{"location":"control/velocity_controller/velocity_controller-design/#pid-control","text":"For deviations that cannot be handled by FeedForward control, such as model errors, PID control is used to construct a feedback system. This PID control calculates the target acceleration from the deviation between the current ego-velocity and the target velocity. This PID logic has a maximum value for the output of each term. This is to prevent the following: Large integral terms may cause unintended behavior by users. Unintended noise may cause the output of the derivative term to be very large. Also, the integral term is not accumulated when the vehicle is stopped. This is to prevent unintended accumulation of the integral term in cases such as \"Autoware assumes that the vehicle is engaged, but an external system has locked the vehicle to start. On the other hand, if the vehicle gets stuck in a depression in the road surface when starting, the vehicle will not start forever, which is currently being addressed by developers. At present, PID control is implemented from the viewpoint of trade-off between development/maintenance cost and performance. This may be replaced by a higher performance controller (adaptive control or robust control) in future development.","title":"PID control"},{"location":"control/velocity_controller/velocity_controller-design/#time-delay-compensation","text":"At high speeds, the delay of actuator systems such as gas pedals and brakes has a significant impact on driving accuracy. Depending on the actuating principle of the vehicle, the mechanism that physically controls the gas pedal and brake typically has a delay of about a hundred millisecond. In this controller, the predicted ego-velocity and the target velocity after the delay time are calculated and used for the feedback to address the time delay problem.","title":"Time delay compensation"},{"location":"control/velocity_controller/velocity_controller-design/#references-external-links","text":"-","title":"References / External links"},{"location":"control/velocity_controller/velocity_controller-design/#future-extensions-unimplemented-parts","text":"-","title":"Future extensions / Unimplemented parts"},{"location":"control/velocity_controller/velocity_controller-design/#related-issues","text":"-","title":"Related issues"},{"location":"localization/localization_diagnostics/localization_error_monitor/","text":"localization_error_monitor # Purpose # localization_error_monitor is a package for diagnosing localization errors by monitoring uncertainty of the localization results. The package monitors the following two values: size of long radius of confidence ellipse size of confidence ellipse along lateral direction (body-frame) Inputs / Outputs # Input # Name Type Description input/pose_with_cov geometry_msgs::msg::PoseWithCovarianceStamped localization result Output # Name Type Description debug/ellipse_marker visualization_msgs::msg::Marker ellipse marker diagnostics diagnostic_msgs::msg::DiagnosticArray diagnostics outputs Parameters # Name Type Description scale double scale factor for monitored values (default: 3.0) error_ellipse_size double error threshold for long radius of confidence ellipse [m] (default: 1.0) warn_ellipse_size double warning threshold for long radius of confidence ellipse [m] (default: 0.8) error_ellipse_size_lateral_direction double error threshold for size of confidence ellipse along lateral direction [m] (default: 0.3) warn_ellipse_size_lateral_direction double warning threshold for size of confidence ellipse along lateral direction [m] (default: 0.2)","title":"localization_error_monitor"},{"location":"localization/localization_diagnostics/localization_error_monitor/#localization_error_monitor","text":"","title":"localization_error_monitor"},{"location":"localization/localization_diagnostics/localization_error_monitor/#purpose","text":"localization_error_monitor is a package for diagnosing localization errors by monitoring uncertainty of the localization results. The package monitors the following two values: size of long radius of confidence ellipse size of confidence ellipse along lateral direction (body-frame)","title":"Purpose"},{"location":"localization/localization_diagnostics/localization_error_monitor/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"localization/localization_diagnostics/localization_error_monitor/#input","text":"Name Type Description input/pose_with_cov geometry_msgs::msg::PoseWithCovarianceStamped localization result","title":"Input"},{"location":"localization/localization_diagnostics/localization_error_monitor/#output","text":"Name Type Description debug/ellipse_marker visualization_msgs::msg::Marker ellipse marker diagnostics diagnostic_msgs::msg::DiagnosticArray diagnostics outputs","title":"Output"},{"location":"localization/localization_diagnostics/localization_error_monitor/#parameters","text":"Name Type Description scale double scale factor for monitored values (default: 3.0) error_ellipse_size double error threshold for long radius of confidence ellipse [m] (default: 1.0) warn_ellipse_size double warning threshold for long radius of confidence ellipse [m] (default: 0.8) error_ellipse_size_lateral_direction double error threshold for size of confidence ellipse along lateral direction [m] (default: 0.3) warn_ellipse_size_lateral_direction double warning threshold for size of confidence ellipse along lateral direction [m] (default: 0.2)","title":"Parameters"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/","text":"Overview # The Extend Kalman Filter Localizer estimates robust and less noisy robot pose and twist by integrating the 2D vehicle dynamics model with input ego-pose and ego-twist messages. The algorithm is designed especially for fast moving robot such as autonomous driving system. Flowchart # The overall flowchart of the ekf_localizer is described below. Features # This package includes the following features: Time delay compensation for input messages, which enables proper integration of input information with varying time delay. This is important especially for high speed moving robot, such as autonomous driving vehicle. (see following figure). Automatic estimation of yaw bias prevents modeling errors caused by sensor mounting angle errors, which can improve estimation accuracy. Mahalanobis distance gate enables probabilistic outlier detection to determine which inputs should be used or ignored. Smooth update , the Kalman Filter measurement update is typically performed when a measurement is obtained, but it can cause large changes in the estimated value especially for low frequency measurements. Since the algorithm can consider the measurement time, the measurement data can be divided into multiple pieces and integrated smoothly while maintaining consistency (see following figure). Launch # The ekf_localizer starts with the default parameters with the following command. roslaunch ekf_localizer ekf_localizer.launch The parameters and input topic names can be set in the ekf_localizer.launch file. Node # Subscribed Topics # measured_pose_with_covariance (geometry_msgs/PoseWithCovarianceStamped) Input pose source with measurement covariance matrix, used when use_pose_with_covariance is true. measured_twist_with_covariance (geometry_msgs/PoseWithCovarianceStamped) Input twist source with measurement covariance matrix, used when use_twist_with_covariance is true. measured_pose (geometry_msgs/PoseStamped) Input pose source, used when use_pose_with_covariance is false. measured_twist (geometry_msgs/TwistStamped) Input twist source, used when use_twist_with_covariance is false. initialpose (geometry_msgs/PoseWithCovarianceStamped) Initial pose for EKF. The estimated pose is initialized with zeros at start. It is initialized with this message whenever published. Published Topics # ekf_pose (geometry_msgs/PoseStamped) Estimated pose. ekf_pose_with_covariance (geometry_msgs/PoseWithCovarianceStamped) Estimated pose with covariance. ekf_pose_with_covariance (geometry_msgs/PoseStamped) Estimated pose without yawbias effect. ekf_pose_with_covariance_without_yawbias (geometry_msgs/PoseWithCovarianceStamped) Estimated pose with covariance without yawbias effect. ekf_twist (geometry_msgs/TwistStamped) Estimated twist. ekf_twist_with_covariance (geometry_msgs/TwistWithCovarianceStamped) Estimated twist with covariance. Published TF # base_link TF from \"map\" coordinate to estimated pose. Functions # Predict # The current robot state is predicted from previously estimated data using a given prediction model. This calculation is called at constant interval ( predict_frequency [Hz] ). The prediction equation is described at the end of this page. Measurement Update # Before update, the Mahalanobis distance is calculated between the measured input and the predicted state, the measurement update is not performed for inputs where the Mahalanobis distance exceeds the given threshold. The predicted state is updated with the latest measured inputs, measured_pose and measured_twist. The updates are performed with the same frequency as prediction, usually at a high frequency, in order to enable smooth state estimation. Parameter description # The parameters are set in launch/ekf_localizer.launch . For Node # Name Type Description Default value show_debug_info bool Flag to display debug info false predict_frequency double Frequency for filtering and publishing [Hz] 50.0 tf_rate double Frequency for tf broadcasting [Hz] 10.0 extend_state_step int Max delay step which can be dealt with in EKF. Large number increases computational cost. 50 enable_yaw_bias_estimation bool Flag to enable yaw bias estimation true For pose measurement # Name Type Description Default value pose_additional_delay double Additional delay time for pose measurement [s] 0.0 pose_measure_uncertainty_time double Measured time uncertainty used for covariance calculation [s] 0.01 pose_rate double Approximated input pose rate used for covariance calculation [Hz] 10.0 pose_gate_dist double Limit of Mahalanobis distance used for outliers detection 10000.0 use_pose_with_covariance bool Flag to use covariance in pose_with_covariance message false pose_stddev_x double Standard deviation for pose position x [m] (used when use_pose_with_covariance is false) 0.05 pose_stddev_y double Standard deviation for pose position y [m] (used when use_pose_with_covariance is false) 0.05 pose_stddev_yaw double Standard deviation for pose yaw angle [rad] (used when use_pose_with_covariance is false) 0.025 For twist measurement # Name Type Description Default value twist_additional_delay double Additional delay time for twist [s] 0.0 twist_rate double Approximated input twist rate used for covariance calculation [Hz] 10.0 twist_gate_dist double Limit of Mahalanobis distance used for outliers detection 10000.0 use_twist_with_covariance bool Flag to use covariance in twist_with_covariance message false twist_stddev_vx double Standard deviation for twist linear x [m/s] (used when use_twist_with_covariance is false) 0.2 twist_stddev_wz double Standard deviation for twist angular z [rad/s] (used when use_twist_with_covariance is false) 0.03 For process noise # Name Type Description Default value proc_stddev_vx_c double Standard deviation of process noise in time differentiation expression of linear velocity x, noise for d_vx = 0 2.0 proc_stddev_wz_c double Standard deviation of process noise in time differentiation expression of angular velocity z, noise for d_wz = 0 0.2 proc_stddev_yaw_c double Standard deviation of process noise in time differentiation expression of yaw, noise for d_yaw = omega 0.005 proc_stddev_yaw_bias_c double Standard deviation of process noise in time differentiation expression of yaw_bias, noise for d_yaw_bias = 0 0.001 note: process noise for position x & y are calculated automatically from nonlinear dynamics. How to turn EKF parameters # 0. Preliminaries # Check header time in pose and twist message is set to sensor time appropriately, because time delay is calculated from this value. If it is difficult to set appropriate time due to timer synchronization problem, use twist_additional_delay and pose_additional_delay to correct the time. Check the relation between measurement pose and twist is appropriate (whether the derivative of pose has similar value to twist). This discrepancy is caused mainly by unit error (such as confusing radian/degree) or bias noise, and it causes large estimation errors. 1. Set sensor parameters # Set sensor-rate and standard-deviation from the basic information of the sensor. The pose_measure_uncertainty_time is for uncertainty of the header timestamp data. pose_measure_uncertainty_time pose_rate pose_stddev_x pose_stddev_y pose_stddev_yaw twist_rate twist_stddev_vx twist_stddev_wz 2. Set process model parameters # proc_stddev_vx_c : set to maximum linear acceleration proc_stddev_wz_c : set to maximum angular acceleration proc_stddev_yaw_c : This parameter describes the correlation between the yaw and yaw-rate. Large value means the change in yaw does not correlate to the estimated yaw-rate. If this is set to 0, it means the change in estimate yaw is equal to yaw-rate. Usually this should be set to 0. proc_stddev_yaw_bias_c : This parameter is the standard deviation for the rate of change in yaw bias. In most cases, yaw bias is constant, so it can be very small, but must be non-zero. 3. Tune sensor standard deviation parameters with rosbag simulation # If the position measurement seems more reliable, make these parameters smaller. If the estimated position seems to be noisy due to pose measurement noise, make these values bigger. pose_stddev_x pose_stddev_y pose_stddev_yaw If the twist measurement seems more reliable, make these parameters smaller. If the estimated twist seems to be noisy due to pose measurement noise, make these values bigger. twist_stddev_vx twist_stddev_wz Kalman Filter Model # kinematics model in update function # where b_k is the yaw-bias. time delay model # The measurement time delay is handled by an augmented states [1] (See, Section 7.3 FIXED-LAG SMOOTHING). Note that, although the dimension gets larger, since the analytical expansion can be applied based on the specific structures of the augmented states, the computational complexity does not significantly change. Test Result with Autoware NDT # reference # [1] Anderson, B. D. O., & Moore, J. B. (1979). Optimal filtering. Englewood Cliffs, NJ: Prentice-Hall.","title":"Overview"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#overview","text":"The Extend Kalman Filter Localizer estimates robust and less noisy robot pose and twist by integrating the 2D vehicle dynamics model with input ego-pose and ego-twist messages. The algorithm is designed especially for fast moving robot such as autonomous driving system.","title":"Overview"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#flowchart","text":"The overall flowchart of the ekf_localizer is described below.","title":"Flowchart"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#features","text":"This package includes the following features: Time delay compensation for input messages, which enables proper integration of input information with varying time delay. This is important especially for high speed moving robot, such as autonomous driving vehicle. (see following figure). Automatic estimation of yaw bias prevents modeling errors caused by sensor mounting angle errors, which can improve estimation accuracy. Mahalanobis distance gate enables probabilistic outlier detection to determine which inputs should be used or ignored. Smooth update , the Kalman Filter measurement update is typically performed when a measurement is obtained, but it can cause large changes in the estimated value especially for low frequency measurements. Since the algorithm can consider the measurement time, the measurement data can be divided into multiple pieces and integrated smoothly while maintaining consistency (see following figure).","title":"Features"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#launch","text":"The ekf_localizer starts with the default parameters with the following command. roslaunch ekf_localizer ekf_localizer.launch The parameters and input topic names can be set in the ekf_localizer.launch file.","title":"Launch"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#node","text":"","title":"Node"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#subscribed-topics","text":"measured_pose_with_covariance (geometry_msgs/PoseWithCovarianceStamped) Input pose source with measurement covariance matrix, used when use_pose_with_covariance is true. measured_twist_with_covariance (geometry_msgs/PoseWithCovarianceStamped) Input twist source with measurement covariance matrix, used when use_twist_with_covariance is true. measured_pose (geometry_msgs/PoseStamped) Input pose source, used when use_pose_with_covariance is false. measured_twist (geometry_msgs/TwistStamped) Input twist source, used when use_twist_with_covariance is false. initialpose (geometry_msgs/PoseWithCovarianceStamped) Initial pose for EKF. The estimated pose is initialized with zeros at start. It is initialized with this message whenever published.","title":"Subscribed Topics"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#published-topics","text":"ekf_pose (geometry_msgs/PoseStamped) Estimated pose. ekf_pose_with_covariance (geometry_msgs/PoseWithCovarianceStamped) Estimated pose with covariance. ekf_pose_with_covariance (geometry_msgs/PoseStamped) Estimated pose without yawbias effect. ekf_pose_with_covariance_without_yawbias (geometry_msgs/PoseWithCovarianceStamped) Estimated pose with covariance without yawbias effect. ekf_twist (geometry_msgs/TwistStamped) Estimated twist. ekf_twist_with_covariance (geometry_msgs/TwistWithCovarianceStamped) Estimated twist with covariance.","title":"Published Topics"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#published-tf","text":"base_link TF from \"map\" coordinate to estimated pose.","title":"Published TF"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#functions","text":"","title":"Functions"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#predict","text":"The current robot state is predicted from previously estimated data using a given prediction model. This calculation is called at constant interval ( predict_frequency [Hz] ). The prediction equation is described at the end of this page.","title":"Predict"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#measurement-update","text":"Before update, the Mahalanobis distance is calculated between the measured input and the predicted state, the measurement update is not performed for inputs where the Mahalanobis distance exceeds the given threshold. The predicted state is updated with the latest measured inputs, measured_pose and measured_twist. The updates are performed with the same frequency as prediction, usually at a high frequency, in order to enable smooth state estimation.","title":"Measurement Update"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#parameter-description","text":"The parameters are set in launch/ekf_localizer.launch .","title":"Parameter description"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#for-node","text":"Name Type Description Default value show_debug_info bool Flag to display debug info false predict_frequency double Frequency for filtering and publishing [Hz] 50.0 tf_rate double Frequency for tf broadcasting [Hz] 10.0 extend_state_step int Max delay step which can be dealt with in EKF. Large number increases computational cost. 50 enable_yaw_bias_estimation bool Flag to enable yaw bias estimation true","title":"For Node"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#for-pose-measurement","text":"Name Type Description Default value pose_additional_delay double Additional delay time for pose measurement [s] 0.0 pose_measure_uncertainty_time double Measured time uncertainty used for covariance calculation [s] 0.01 pose_rate double Approximated input pose rate used for covariance calculation [Hz] 10.0 pose_gate_dist double Limit of Mahalanobis distance used for outliers detection 10000.0 use_pose_with_covariance bool Flag to use covariance in pose_with_covariance message false pose_stddev_x double Standard deviation for pose position x [m] (used when use_pose_with_covariance is false) 0.05 pose_stddev_y double Standard deviation for pose position y [m] (used when use_pose_with_covariance is false) 0.05 pose_stddev_yaw double Standard deviation for pose yaw angle [rad] (used when use_pose_with_covariance is false) 0.025","title":"For pose measurement"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#for-twist-measurement","text":"Name Type Description Default value twist_additional_delay double Additional delay time for twist [s] 0.0 twist_rate double Approximated input twist rate used for covariance calculation [Hz] 10.0 twist_gate_dist double Limit of Mahalanobis distance used for outliers detection 10000.0 use_twist_with_covariance bool Flag to use covariance in twist_with_covariance message false twist_stddev_vx double Standard deviation for twist linear x [m/s] (used when use_twist_with_covariance is false) 0.2 twist_stddev_wz double Standard deviation for twist angular z [rad/s] (used when use_twist_with_covariance is false) 0.03","title":"For twist measurement"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#for-process-noise","text":"Name Type Description Default value proc_stddev_vx_c double Standard deviation of process noise in time differentiation expression of linear velocity x, noise for d_vx = 0 2.0 proc_stddev_wz_c double Standard deviation of process noise in time differentiation expression of angular velocity z, noise for d_wz = 0 0.2 proc_stddev_yaw_c double Standard deviation of process noise in time differentiation expression of yaw, noise for d_yaw = omega 0.005 proc_stddev_yaw_bias_c double Standard deviation of process noise in time differentiation expression of yaw_bias, noise for d_yaw_bias = 0 0.001 note: process noise for position x & y are calculated automatically from nonlinear dynamics.","title":"For process noise"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#how-to-turn-ekf-parameters","text":"","title":"How to turn EKF parameters"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#0-preliminaries","text":"Check header time in pose and twist message is set to sensor time appropriately, because time delay is calculated from this value. If it is difficult to set appropriate time due to timer synchronization problem, use twist_additional_delay and pose_additional_delay to correct the time. Check the relation between measurement pose and twist is appropriate (whether the derivative of pose has similar value to twist). This discrepancy is caused mainly by unit error (such as confusing radian/degree) or bias noise, and it causes large estimation errors.","title":"0. Preliminaries"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#1-set-sensor-parameters","text":"Set sensor-rate and standard-deviation from the basic information of the sensor. The pose_measure_uncertainty_time is for uncertainty of the header timestamp data. pose_measure_uncertainty_time pose_rate pose_stddev_x pose_stddev_y pose_stddev_yaw twist_rate twist_stddev_vx twist_stddev_wz","title":"1. Set sensor parameters"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#2-set-process-model-parameters","text":"proc_stddev_vx_c : set to maximum linear acceleration proc_stddev_wz_c : set to maximum angular acceleration proc_stddev_yaw_c : This parameter describes the correlation between the yaw and yaw-rate. Large value means the change in yaw does not correlate to the estimated yaw-rate. If this is set to 0, it means the change in estimate yaw is equal to yaw-rate. Usually this should be set to 0. proc_stddev_yaw_bias_c : This parameter is the standard deviation for the rate of change in yaw bias. In most cases, yaw bias is constant, so it can be very small, but must be non-zero.","title":"2. Set process model parameters"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#3-tune-sensor-standard-deviation-parameters-with-rosbag-simulation","text":"If the position measurement seems more reliable, make these parameters smaller. If the estimated position seems to be noisy due to pose measurement noise, make these values bigger. pose_stddev_x pose_stddev_y pose_stddev_yaw If the twist measurement seems more reliable, make these parameters smaller. If the estimated twist seems to be noisy due to pose measurement noise, make these values bigger. twist_stddev_vx twist_stddev_wz","title":"3. Tune sensor standard deviation parameters with rosbag simulation"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#kalman-filter-model","text":"","title":"Kalman Filter Model"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#kinematics-model-in-update-function","text":"where b_k is the yaw-bias.","title":"kinematics model in update function"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#time-delay-model","text":"The measurement time delay is handled by an augmented states [1] (See, Section 7.3 FIXED-LAG SMOOTHING). Note that, although the dimension gets larger, since the analytical expansion can be applied based on the specific structures of the augmented states, the computational complexity does not significantly change.","title":"time delay model"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#test-result-with-autoware-ndt","text":"","title":"Test Result with Autoware NDT"},{"location":"localization/pose_twist_fusion_filter/ekf_localizer/#reference","text":"[1] Anderson, B. D. O., & Moore, J. B. (1979). Optimal filtering. Englewood Cliffs, NJ: Prentice-Hall.","title":"reference"},{"location":"map/lanelet2_extension/","text":"lanelet2_extension package # This package contains external library for Lanelet2 and is meant to ease the use of Lanelet2 in Autoware. Lanelet Format for Autoware # Autoware uses extended Lanelet2 Format for Autoware, which means you need to add some tags to default OSM file if you want to fully use Lanelet2 maps. For details about custom tags, please refer to this document . Code API # IO # Autoware OSM Parser # Autoware Lanelet2 Format uses .osm extension as original Lanelet2. However, there are some custom tags that is used by the parser. Currently, this includes: overwriting x,y values with local_x and local_y tags. reading <MapMetaInfo> tag which contains information about map format version and map version. The parser is registered as \"autoware_osm_handler\" as lanelet parser Projection # MGRS Projector # MGRS projector projects latitude longitude into MGRS Coordinates. Regulatory Elements # Autoware Traffic Light # Autoware Traffic Light class allows you to retrieve information about traffic lights. Autoware Traffic Light class contains following members: traffic light shape light bulbs information of traffic lights stopline associated to traffic light Utility # Message Conversion # This contains functions to convert lanelet map objects into ROS messages. Currently it contains following conversions: lanelet::LaneletMapPtr to/from lanelet_msgs::MapBinMsg lanelet::Point3d to geometry_msgs::Point lanelet::Point2d to geometry_msgs::Point lanelet::BasicPoint3d to geometry_msgs::Point Query # This module contains functions to retrieve various information from maps. e.g. crosswalks, trafficlights, stoplines Utilities # This module contains other useful functions related to Lanelet. e.g. matching waypoint with lanelets Visualization # Visualization contains functions to convert lanelet objects into visualization marker messages. Currently it contains following conversions: lanelet::Lanelet to Triangle Markers lanelet::LineString to LineStrip Markers TrafficLights to Triangle Markers Nodes # lanelet2_extension_sample # Code for this explains how this lanelet2_extension library is used. The executable is not meant to do anything. autoware_lanelet2_extension # This node checks if an .osm file follows the Autoware version of Lanelet2 format. You can check by running: rosrun lanelet2_extension autoware_lanelet2_validation _map_file: = <path/to/map.osm>","title":"lanelet2_extension package"},{"location":"map/lanelet2_extension/#lanelet2_extension-package","text":"This package contains external library for Lanelet2 and is meant to ease the use of Lanelet2 in Autoware.","title":"lanelet2_extension package"},{"location":"map/lanelet2_extension/#lanelet-format-for-autoware","text":"Autoware uses extended Lanelet2 Format for Autoware, which means you need to add some tags to default OSM file if you want to fully use Lanelet2 maps. For details about custom tags, please refer to this document .","title":"Lanelet Format for Autoware"},{"location":"map/lanelet2_extension/#code-api","text":"","title":"Code API"},{"location":"map/lanelet2_extension/#io","text":"","title":"IO"},{"location":"map/lanelet2_extension/#autoware-osm-parser","text":"Autoware Lanelet2 Format uses .osm extension as original Lanelet2. However, there are some custom tags that is used by the parser. Currently, this includes: overwriting x,y values with local_x and local_y tags. reading <MapMetaInfo> tag which contains information about map format version and map version. The parser is registered as \"autoware_osm_handler\" as lanelet parser","title":"Autoware OSM Parser"},{"location":"map/lanelet2_extension/#projection","text":"","title":"Projection"},{"location":"map/lanelet2_extension/#mgrs-projector","text":"MGRS projector projects latitude longitude into MGRS Coordinates.","title":"MGRS Projector"},{"location":"map/lanelet2_extension/#regulatory-elements","text":"","title":"Regulatory Elements"},{"location":"map/lanelet2_extension/#autoware-traffic-light","text":"Autoware Traffic Light class allows you to retrieve information about traffic lights. Autoware Traffic Light class contains following members: traffic light shape light bulbs information of traffic lights stopline associated to traffic light","title":"Autoware Traffic Light"},{"location":"map/lanelet2_extension/#utility","text":"","title":"Utility"},{"location":"map/lanelet2_extension/#message-conversion","text":"This contains functions to convert lanelet map objects into ROS messages. Currently it contains following conversions: lanelet::LaneletMapPtr to/from lanelet_msgs::MapBinMsg lanelet::Point3d to geometry_msgs::Point lanelet::Point2d to geometry_msgs::Point lanelet::BasicPoint3d to geometry_msgs::Point","title":"Message Conversion"},{"location":"map/lanelet2_extension/#query","text":"This module contains functions to retrieve various information from maps. e.g. crosswalks, trafficlights, stoplines","title":"Query"},{"location":"map/lanelet2_extension/#utilities","text":"This module contains other useful functions related to Lanelet. e.g. matching waypoint with lanelets","title":"Utilities"},{"location":"map/lanelet2_extension/#visualization","text":"Visualization contains functions to convert lanelet objects into visualization marker messages. Currently it contains following conversions: lanelet::Lanelet to Triangle Markers lanelet::LineString to LineStrip Markers TrafficLights to Triangle Markers","title":"Visualization"},{"location":"map/lanelet2_extension/#nodes","text":"","title":"Nodes"},{"location":"map/lanelet2_extension/#lanelet2_extension_sample","text":"Code for this explains how this lanelet2_extension library is used. The executable is not meant to do anything.","title":"lanelet2_extension_sample"},{"location":"map/lanelet2_extension/#autoware_lanelet2_extension","text":"This node checks if an .osm file follows the Autoware version of Lanelet2 format. You can check by running: rosrun lanelet2_extension autoware_lanelet2_validation _map_file: = <path/to/map.osm>","title":"autoware_lanelet2_extension"},{"location":"map/lanelet2_extension/docs/extra_regulatory_elements/","text":"Extra Regulatory Elements # Detection Area # This regulatory element specifies region of interest which vehicle must pay attention whenever it is driving along the associated lanelet. When there are any obstacle in the detection area, vehicle must stop at specified stopline. refers: refers to detection area polygon. There could be multiple detection areas registered to a single regulatory element. refline: refers to stop line of the detection area Sample detection area in .osm format is shown below: <node id= 1 version= '1' lat= '49.00541994701' lon= '8.41565013855' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 2 version= '1' lat= '49.00542091657' lon= '8.4156469497' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 3 version= '1' lat= '49.00542180052' lon= '8.41564400223' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 4 version= '1' lat= '49.00541994701' lon= '8.41564400223' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 5 version= '1' lat= '49.00542180052' lon= '8.41564400223' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 6 version= '1' lat= '49.00541994701' lon= '8.41564400223' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <way id= 11 version= '1' > <nd ref= 1 /> <nd ref= 2 /> <nd ref= 3 /> <nd ref= 4 /> <nd ref= 1 /> <tag k= 'type' v= \u2019detection_area\u2019 /> <tag k= 'area' v= \u2019yes\u2019 /> </way> <way id= 12 version= \"1\" > <nd ref= 5 /> <nd ref= 6 /> <tag k= 'type' v= stop_line\u2019 /> </way> <relation id= \"13\" > <tag k= \"type\" v= \"regulatory_element\" /> <tag k= \"subtype\" v= \"detection_area\" /> <member type= \"way\" ref= \"11\" role= \"refers\" /> <member type= \"way\" ref= \"12\" role= \"ref_line\" /> </relation> Road Marking # This regulatory element specifies related road markings to a lanelet as shown below. * Note that the stopline in the image is for stoplines that are for reference, and normal stoplines should be expressed using TrafficSign regulatory element. refers: linestring with type attribute. Type explains what road marking it represents (e.g. stopline).","title":"Extra Regulatory Elements"},{"location":"map/lanelet2_extension/docs/extra_regulatory_elements/#extra-regulatory-elements","text":"","title":"Extra Regulatory Elements"},{"location":"map/lanelet2_extension/docs/extra_regulatory_elements/#detection-area","text":"This regulatory element specifies region of interest which vehicle must pay attention whenever it is driving along the associated lanelet. When there are any obstacle in the detection area, vehicle must stop at specified stopline. refers: refers to detection area polygon. There could be multiple detection areas registered to a single regulatory element. refline: refers to stop line of the detection area Sample detection area in .osm format is shown below: <node id= 1 version= '1' lat= '49.00541994701' lon= '8.41565013855' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 2 version= '1' lat= '49.00542091657' lon= '8.4156469497' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 3 version= '1' lat= '49.00542180052' lon= '8.41564400223' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 4 version= '1' lat= '49.00541994701' lon= '8.41564400223' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 5 version= '1' lat= '49.00542180052' lon= '8.41564400223' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <node id= 6 version= '1' lat= '49.00541994701' lon= '8.41564400223' > <tag k= \u2019ele\u2019 v= \u20190\u2019/ > </node> <way id= 11 version= '1' > <nd ref= 1 /> <nd ref= 2 /> <nd ref= 3 /> <nd ref= 4 /> <nd ref= 1 /> <tag k= 'type' v= \u2019detection_area\u2019 /> <tag k= 'area' v= \u2019yes\u2019 /> </way> <way id= 12 version= \"1\" > <nd ref= 5 /> <nd ref= 6 /> <tag k= 'type' v= stop_line\u2019 /> </way> <relation id= \"13\" > <tag k= \"type\" v= \"regulatory_element\" /> <tag k= \"subtype\" v= \"detection_area\" /> <member type= \"way\" ref= \"11\" role= \"refers\" /> <member type= \"way\" ref= \"12\" role= \"ref_line\" /> </relation>","title":"Detection Area"},{"location":"map/lanelet2_extension/docs/extra_regulatory_elements/#road-marking","text":"This regulatory element specifies related road markings to a lanelet as shown below. * Note that the stopline in the image is for stoplines that are for reference, and normal stoplines should be expressed using TrafficSign regulatory element. refers: linestring with type attribute. Type explains what road marking it represents (e.g. stopline).","title":"Road Marking"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/","text":"Modifying Lanelet2 format for Autoware # Overview # About the basics of the default format, please refer to main Lanelet2 repository . (see here about primitives) In addition to default Lanelet2 Format, users should add following mandatory/optional tags to their osm lanelet files as explained in reset of this document. Users may use autoware_lanelet2_validation node to check if their maps are valid. There are also extra regulatory elements added for Autoware: Detection Area Road Marking Mandatory Tags # Elevation Tags # Elevation(\"ele\") information for points( node ) is optional in default Lanelet2 format. However, some of Autoware packages(e.g. trafficlight_recognizer) need elevation to be included in HD map. Therefore, users must make sure that all points in their osm maps contain elevation tags. Here is an example osm syntax for node object. <node id= '1' visible= 'true' version= '1' lat= '49.00501435943' lon= '8.41687458512' > <tag k= 'ele' v= '3.0' /> <!-- this tag is mandatory for Autoware!! --> </node> TrafficLights # Default Lanelet2 format uses LineString( way ) or Polygon class to represent the shape of a traffic light. For Autoware, traffic light objects must be represented only by LineString to avoid confusion, where start point is at bottom left edge and end point is at bottom right edge. Also, \"height\" tag must be added in order to represent the size in vertical direction (not the position). The Following image illustrates how LineString is used to represent shape of Traffic Light in Autoware. Here is an example osm syntax for traffic light object. <way id= '13' visible= 'true' version= '1' > <nd ref= '6' /> <nd ref= '5' /> <tag k= 'type' v= 'traffic_light' /> <tag k= 'subtype' v= 'red_yellow_green' /> <tag k= 'height' v= '0.5' /> <!-- this tag is mandatory for Autoware!! --> </way> Turn Directions # Users must add \"turn_direction\" tags to lanelets within intersections to indicate vehicle's turning direction. You do not need this tags for lanelets that are not in intersections. If you do not have this tag, Autoware will not be able to light up turning indicators. This tags only take following values: left right straight Following image illustrates how lanelets should be tagged. Here is an example of osm syntax for lanelets in intersections. <relation id= '1' visible= 'true' version= '1' > <member type= 'way' ref= '2' role= 'left' /> <member type= 'way' ref= '3' role= 'right' /> <member type= 'relation' ref= '4' role= 'regulatory_element' /> <tag k= 'location' v= 'urban' /> <tag k= 'one_way' v= 'yes' /> <tag k= 'subtype' v= 'road' /> <tag k= 'type' v= 'lanelet' /> <tag k= 'turn_direction' v= 'left' /> <!-- this tag is mandatory for lanelets at intersections!! --> </relation> Optional Taggings # Following tags are optional tags that you may want to add depending on how you want to use your map in Autoware. Meta Info # Users may add the MetaInfo element to their OSM file to indicate format version and map version of their OSM file. This information is not meant to influence Autoware vehicle's behavior, but is published as ROS message so that developers could know which map was used from ROSBAG log files. MetaInfo elements exists in the same hierarchy with node , way , and relation elements, otherwise JOSM wouldn't be able to load the file correctly. Here is an example of MetaInfo in osm file: <?xml version='1.0' encoding='UTF-8'?> <osm version= '0.6' generator= 'JOSM' > <MetaInfo format_version= '1.0' map_version= '1.0' /> <node> ... </node> <way> ... </way> <relation> ... </relation> </osm> Local Coordinate Expression # Sometimes users might want to create Lanelet2 maps that are not georeferenced. In such a case, users may use \"local_x\", \"local_y\" taggings to express local positions instead of latitude and longitude. Autoware Osm Parser will overwrite x,y positions with these tags when they are present. For z values, use \"ele\" tags as default Lanelet2 Format. You would still need to fill in lat and lon attributes so that parser does not crush, but their values could be anything. Here is example node element in osm with \"local_x\", \"local_y\" taggings: <!-- lat/lon attributes are required, but their values can be anything --> <node id= '40648' visible= 'true' version= '1' lat= '0' lon= '0' > <tag k= 'local_x' v= 2.54'/ > <tag k= 'local_y' v= 4.38'/ > <tag k= 'ele' v= '3.0' /> </node> Light Bulbs in Traffic Lights # Default Lanelet format can only express shape (base + height) of traffic lights. However, region_tlr node in Autoware uses positions of each light bulbs to recognize color of traffic light. If users may wish to use this node, \"light_bulbs\"( way ) element must be registered to traffic_light regulatory_element object define position and color of each light bulb in traffic lights. If you are using other trafficlight_recognizer nodes(e.g. tlr_mxnet), which only uses bounding box of traffic light, then you do not need to add this object. \"light_bulbs\" object is defined using LineString( way ), and each node of line string is placed at the center of each light bulb. Also, each node should have \"color\" and optionally \"arrow\" tags to describe its type. Also, \"traffic_light_id\" tag is used to indicate which ID of relevant traffic_light element. \"color\" tag is used to express the color of the light bulb. Currently only three values are used: red yellow green \"arrow\" tag is used to express the direction of the arrow of light bulb: up right left up_right up_left Following image illustrates how \"light_bulbs\" LineString should be created. Here is an example of osm syntax for light_bulb object: <node id= 1 version= '1' lat= '49.00541994701' lon= '8.41565013855' > <tag k= 'ele' v= '5' /> <tag k= 'color' v= 'red' /> </node> <node id= 2 version= '1' lat= '49.00542091657' lon= '8.4156469497' > <tag k= 'ele' v= '5' /> <tag k= 'color' v= 'yellow' /> </node> <node id= 3 version= '1' lat= '49.00542180052' lon= '8.41564400223' > <tag k= 'ele' v= '5' /> <tag k= 'color' v= 'green' /> </node> <node id= 3 version= '1' lat= '49.00542180052' lon= '8.41564400223' > <tag k= 'ele' v= '4.6' /> <tag k= 'color' v= 'green' /> <tag k= arrow v= 'right' /> </node> <way id= 11 version= '1' > <nd ref= 1 /> <nd ref= 2 /> <nd ref= 3 /> <tag k= 'traffic_light_id' v= '10' /> <!-- id of linestring with type=\"traffic_light\" --> <tag k= 'type' v= 'light_bulbs' /> </way> After creating \"light_bulbs\" elements, you have to register them to traffic_light regulatory element as role \"light_bulbs\". The following illustrates how light_bulbs are registered to traffic_light regulatory elements. <relation id= '8' visible= 'true' version= '1' > <tag k= 'type' v= 'regulatory_element' /> <tag k= 'subtype' v= 'traffic_light' /> <member type= 'way' ref= '9' role= 'ref_line' /> <member type= 'way' ref= '10' role= 'refers' /> <!-- refers to the traffic light line string --> <member type= 'way' ref= '11' role= 'light_bulbs' /> <!-- refers to the light_bulb line string --> </relation>","title":"Modifying Lanelet2 format for Autoware"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#modifying-lanelet2-format-for-autoware","text":"","title":"Modifying Lanelet2 format for Autoware"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#overview","text":"About the basics of the default format, please refer to main Lanelet2 repository . (see here about primitives) In addition to default Lanelet2 Format, users should add following mandatory/optional tags to their osm lanelet files as explained in reset of this document. Users may use autoware_lanelet2_validation node to check if their maps are valid. There are also extra regulatory elements added for Autoware: Detection Area Road Marking","title":"Overview"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#mandatory-tags","text":"","title":"Mandatory Tags"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#elevation-tags","text":"Elevation(\"ele\") information for points( node ) is optional in default Lanelet2 format. However, some of Autoware packages(e.g. trafficlight_recognizer) need elevation to be included in HD map. Therefore, users must make sure that all points in their osm maps contain elevation tags. Here is an example osm syntax for node object. <node id= '1' visible= 'true' version= '1' lat= '49.00501435943' lon= '8.41687458512' > <tag k= 'ele' v= '3.0' /> <!-- this tag is mandatory for Autoware!! --> </node>","title":"Elevation Tags"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#trafficlights","text":"Default Lanelet2 format uses LineString( way ) or Polygon class to represent the shape of a traffic light. For Autoware, traffic light objects must be represented only by LineString to avoid confusion, where start point is at bottom left edge and end point is at bottom right edge. Also, \"height\" tag must be added in order to represent the size in vertical direction (not the position). The Following image illustrates how LineString is used to represent shape of Traffic Light in Autoware. Here is an example osm syntax for traffic light object. <way id= '13' visible= 'true' version= '1' > <nd ref= '6' /> <nd ref= '5' /> <tag k= 'type' v= 'traffic_light' /> <tag k= 'subtype' v= 'red_yellow_green' /> <tag k= 'height' v= '0.5' /> <!-- this tag is mandatory for Autoware!! --> </way>","title":"TrafficLights"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#turn-directions","text":"Users must add \"turn_direction\" tags to lanelets within intersections to indicate vehicle's turning direction. You do not need this tags for lanelets that are not in intersections. If you do not have this tag, Autoware will not be able to light up turning indicators. This tags only take following values: left right straight Following image illustrates how lanelets should be tagged. Here is an example of osm syntax for lanelets in intersections. <relation id= '1' visible= 'true' version= '1' > <member type= 'way' ref= '2' role= 'left' /> <member type= 'way' ref= '3' role= 'right' /> <member type= 'relation' ref= '4' role= 'regulatory_element' /> <tag k= 'location' v= 'urban' /> <tag k= 'one_way' v= 'yes' /> <tag k= 'subtype' v= 'road' /> <tag k= 'type' v= 'lanelet' /> <tag k= 'turn_direction' v= 'left' /> <!-- this tag is mandatory for lanelets at intersections!! --> </relation>","title":"Turn Directions"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#optional-taggings","text":"Following tags are optional tags that you may want to add depending on how you want to use your map in Autoware.","title":"Optional Taggings"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#meta-info","text":"Users may add the MetaInfo element to their OSM file to indicate format version and map version of their OSM file. This information is not meant to influence Autoware vehicle's behavior, but is published as ROS message so that developers could know which map was used from ROSBAG log files. MetaInfo elements exists in the same hierarchy with node , way , and relation elements, otherwise JOSM wouldn't be able to load the file correctly. Here is an example of MetaInfo in osm file: <?xml version='1.0' encoding='UTF-8'?> <osm version= '0.6' generator= 'JOSM' > <MetaInfo format_version= '1.0' map_version= '1.0' /> <node> ... </node> <way> ... </way> <relation> ... </relation> </osm>","title":"Meta Info"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#local-coordinate-expression","text":"Sometimes users might want to create Lanelet2 maps that are not georeferenced. In such a case, users may use \"local_x\", \"local_y\" taggings to express local positions instead of latitude and longitude. Autoware Osm Parser will overwrite x,y positions with these tags when they are present. For z values, use \"ele\" tags as default Lanelet2 Format. You would still need to fill in lat and lon attributes so that parser does not crush, but their values could be anything. Here is example node element in osm with \"local_x\", \"local_y\" taggings: <!-- lat/lon attributes are required, but their values can be anything --> <node id= '40648' visible= 'true' version= '1' lat= '0' lon= '0' > <tag k= 'local_x' v= 2.54'/ > <tag k= 'local_y' v= 4.38'/ > <tag k= 'ele' v= '3.0' /> </node>","title":"Local Coordinate Expression"},{"location":"map/lanelet2_extension/docs/lanelet2_format_extension/#light-bulbs-in-traffic-lights","text":"Default Lanelet format can only express shape (base + height) of traffic lights. However, region_tlr node in Autoware uses positions of each light bulbs to recognize color of traffic light. If users may wish to use this node, \"light_bulbs\"( way ) element must be registered to traffic_light regulatory_element object define position and color of each light bulb in traffic lights. If you are using other trafficlight_recognizer nodes(e.g. tlr_mxnet), which only uses bounding box of traffic light, then you do not need to add this object. \"light_bulbs\" object is defined using LineString( way ), and each node of line string is placed at the center of each light bulb. Also, each node should have \"color\" and optionally \"arrow\" tags to describe its type. Also, \"traffic_light_id\" tag is used to indicate which ID of relevant traffic_light element. \"color\" tag is used to express the color of the light bulb. Currently only three values are used: red yellow green \"arrow\" tag is used to express the direction of the arrow of light bulb: up right left up_right up_left Following image illustrates how \"light_bulbs\" LineString should be created. Here is an example of osm syntax for light_bulb object: <node id= 1 version= '1' lat= '49.00541994701' lon= '8.41565013855' > <tag k= 'ele' v= '5' /> <tag k= 'color' v= 'red' /> </node> <node id= 2 version= '1' lat= '49.00542091657' lon= '8.4156469497' > <tag k= 'ele' v= '5' /> <tag k= 'color' v= 'yellow' /> </node> <node id= 3 version= '1' lat= '49.00542180052' lon= '8.41564400223' > <tag k= 'ele' v= '5' /> <tag k= 'color' v= 'green' /> </node> <node id= 3 version= '1' lat= '49.00542180052' lon= '8.41564400223' > <tag k= 'ele' v= '4.6' /> <tag k= 'color' v= 'green' /> <tag k= arrow v= 'right' /> </node> <way id= 11 version= '1' > <nd ref= 1 /> <nd ref= 2 /> <nd ref= 3 /> <tag k= 'traffic_light_id' v= '10' /> <!-- id of linestring with type=\"traffic_light\" --> <tag k= 'type' v= 'light_bulbs' /> </way> After creating \"light_bulbs\" elements, you have to register them to traffic_light regulatory element as role \"light_bulbs\". The following illustrates how light_bulbs are registered to traffic_light regulatory elements. <relation id= '8' visible= 'true' version= '1' > <tag k= 'type' v= 'regulatory_element' /> <tag k= 'subtype' v= 'traffic_light' /> <member type= 'way' ref= '9' role= 'ref_line' /> <member type= 'way' ref= '10' role= 'refers' /> <!-- refers to the traffic light line string --> <member type= 'way' ref= '11' role= 'light_bulbs' /> <!-- refers to the light_bulb line string --> </relation>","title":"Light Bulbs in Traffic Lights"},{"location":"map/map_loader/","text":"map_loader package # This package provides the features of loading various maps. pointcloud_map_loader # Feature # pointcloud_map_loader loads PointCloud file and publishes the map data as sensor_msgs/PointCloud2 message. How to run # ros2 run map_loader pointcloud_map_loader --ros-args -p \"pcd_paths_or_directory:=[path/to/pointcloud1.pcd, path/to/pointcloud2.pcd, ...]\" Published Topics # pointcloud_map (sensor_msgs/PointCloud2) : PointCloud Map lanelet2_map_loader # Feature # lanelet2_map_loader loads Lanelet2 file and publishes the map data as autoware_lanelet2_msgs/MapBin message. The node projects lan/lon coordinates into MGRS coordinates. How to run # ros2 run map_loader lanelet2_map_loader --ros-args -p lanelet2_map_path:=path/to/map.osm Published Topics # ~output/lanelet2_map (autoware_lanelet2_msgs/MapBin) : Binary data of loaded Lanelet2 Map lanelet2_map_visualization # Feature # lanelet2_map_visualization visualizes autoware_lanelet2_msgs/MapBin messages into visualization_msgs/MarkerArray. How to Run # ros2 run map_loader lanelet2_map_visualization Subscribed Topics # ~input/lanelet2_map (autoware_lanelet2_msgs/MapBin) : binary data of Lanelet2 Map Published Topics # ~output/lanelet2_map_marker (visualization_msgs/MarkerArray) : visualization messages for RViz elevation_map_loader # Feature # Generate elevation_map from subscribed pointcloud_map and vector_map and publish it. Save the generated elevation_map locally and load it from next time. The elevation value of each cell is the average value of z of the points of the lowest cluster. Cells with No elevation value can be inpainted using the values of neighboring cells. How to run # ros2 run map_loader elevation_map_loader --ros-args -p param_file_path:=path/to/elevation_map_parameters.yaml -p elevation_map_directory:=path/to/elevation_map_directory -p pointcloud_map_path:=path/to/pointcloud.pcd Subscribed Topics # input/pointcloud_map (sensor_msgs:PointCloud2) : PointCloud Map input/vector_map (autoware_lanelet2_msgs/MapBin) : binary data of Lanelet2 Map Published Topics # output/elevation_map (grid_map_msgs/GridMap) : Elevation Map output/elevation_map_cloud (sensor_msgs:PointCloud2) : Pointcloud generated from the value of Elevation Map Parameter description # ROS parameters # Name Type Description Default value map_layer_name std::string elevation_map layer name elevation param_file_path std::string GridMap parameters config path_default elevation_map_file_path std::string elevation_map file (bag2) path_default map_frame std::string map_frame when loading elevation_map file map use_inpaint bool Whether to inpaint empty cells true inpaint_radius float Radius of a circular neighborhood of each point inpainted that is considered by the algorithm [m] 0.3 use_elevation_map_cloud_publisher bool Whether to publish output/elevation_map_cloud false use_lane_filter bool Whether to filter elevation_map with vector_map false lane_margin float Value of how much to expand the range of vector_map [m] 0.5 lane_height_diff_thresh float Only point clouds in the height range of this value from vector_map are used to generate elevation_map [m] 1.0 lane_filter_voxel_size_x float Voxel size x for calculating point clouds in vector_map [m] 0.04 lane_filter_voxel_size_y float Voxel size y for calculating point clouds in vector_map [m] 0.04 lane_filter_voxel_size_z float Voxel size z for calculating point clouds in vector_map [m] 0.04 GridMap parameters # The parameters are described on config/elevation_map_parameters.yaml . General parameters # Name Type Description Default value pcl_grid_map_extraction/num_processing_threads int Number of threads for processing grid map cells. Filtering of the raw input point cloud is not parallelized. 12 Grid map parameters # See: https://github.com/ANYbotics/grid_map/tree/ros2/grid_map_pcl Resulting grid map parameters. Name Type Description Default value pcl_grid_map_extraction/grid_map/min_num_points_per_cell int Minimum number of points in the point cloud that have to fall within any of the grid map cells. Otherwise the cell elevation will be set to NaN. 3 pcl_grid_map_extraction/grid_map/resolution float Resolution of the grid map. Width and length are computed automatically. 0.3 Point Cloud Pre-processing Parameters # Rigid body transform parameters # Rigid body transform that is applied to the point cloud before computing elevation. Name Type Description Default value pcl_grid_map_extraction/cloud_transform/translation float Translation (xyz) that is applied to the input point cloud before computing elevation. 0.0 pcl_grid_map_extraction/cloud_transform/rotation float Rotation (intrinsic rotation, convention X-Y'-Z'') that is applied to the input point cloud before computing elevation. 0.0 Cluster extraction parameters # Cluster extraction is based on pcl algorithms. See https://pointclouds.org/documentation/tutorials/cluster_extraction.html for more details. Name Type Description Default value pcl_grid_map_extraction/cluster_extraction/cluster_tolerance float Distance between points below which they will still be considered part of one cluster. 0.2 pcl_grid_map_extraction/cluster_extraction/min_num_points int Min number of points that a cluster needs to have (otherwise it will be discarded). 3 pcl_grid_map_extraction/cluster_extraction/max_num_points int Max number of points that a cluster can have (otherwise it will be discarded). 1000000 Outlier removal parameters # See https://pointclouds.org/documentation/tutorials/statistical_outlier.html for more explanation on outlier removal. Name Type Description Default value pcl_grid_map_extraction/outlier_removal/is_remove_outliers float Whether to perform statistical outlier removal. false pcl_grid_map_extraction/outlier_removal/mean_K float Number of neighbours to analyze for estimating statistics of a point. 10 pcl_grid_map_extraction/outlier_removal/stddev_threshold float Number of standard deviations under which points are considered to be inliers. 1.0 Subsampling parameters # See https://pointclouds.org/documentation/tutorials/voxel_grid.html for more explanation on point cloud downsampling. Name Type Description Default value pcl_grid_map_extraction/downsampling/is_downsample_cloud bool Whether to perform downsampling or not. false pcl_grid_map_extraction/downsampling/voxel_size float Voxel sizes (xyz) in meters. 0.02","title":"map_loader package"},{"location":"map/map_loader/#map_loader-package","text":"This package provides the features of loading various maps.","title":"map_loader package"},{"location":"map/map_loader/#pointcloud_map_loader","text":"","title":"pointcloud_map_loader"},{"location":"map/map_loader/#feature","text":"pointcloud_map_loader loads PointCloud file and publishes the map data as sensor_msgs/PointCloud2 message.","title":"Feature"},{"location":"map/map_loader/#how-to-run","text":"ros2 run map_loader pointcloud_map_loader --ros-args -p \"pcd_paths_or_directory:=[path/to/pointcloud1.pcd, path/to/pointcloud2.pcd, ...]\"","title":"How to run"},{"location":"map/map_loader/#published-topics","text":"pointcloud_map (sensor_msgs/PointCloud2) : PointCloud Map","title":"Published Topics"},{"location":"map/map_loader/#lanelet2_map_loader","text":"","title":"lanelet2_map_loader"},{"location":"map/map_loader/#feature_1","text":"lanelet2_map_loader loads Lanelet2 file and publishes the map data as autoware_lanelet2_msgs/MapBin message. The node projects lan/lon coordinates into MGRS coordinates.","title":"Feature"},{"location":"map/map_loader/#how-to-run_1","text":"ros2 run map_loader lanelet2_map_loader --ros-args -p lanelet2_map_path:=path/to/map.osm","title":"How to run"},{"location":"map/map_loader/#published-topics_1","text":"~output/lanelet2_map (autoware_lanelet2_msgs/MapBin) : Binary data of loaded Lanelet2 Map","title":"Published Topics"},{"location":"map/map_loader/#lanelet2_map_visualization","text":"","title":"lanelet2_map_visualization"},{"location":"map/map_loader/#feature_2","text":"lanelet2_map_visualization visualizes autoware_lanelet2_msgs/MapBin messages into visualization_msgs/MarkerArray.","title":"Feature"},{"location":"map/map_loader/#how-to-run_2","text":"ros2 run map_loader lanelet2_map_visualization","title":"How to Run"},{"location":"map/map_loader/#subscribed-topics","text":"~input/lanelet2_map (autoware_lanelet2_msgs/MapBin) : binary data of Lanelet2 Map","title":"Subscribed Topics"},{"location":"map/map_loader/#published-topics_2","text":"~output/lanelet2_map_marker (visualization_msgs/MarkerArray) : visualization messages for RViz","title":"Published Topics"},{"location":"map/map_loader/#elevation_map_loader","text":"","title":"elevation_map_loader"},{"location":"map/map_loader/#feature_3","text":"Generate elevation_map from subscribed pointcloud_map and vector_map and publish it. Save the generated elevation_map locally and load it from next time. The elevation value of each cell is the average value of z of the points of the lowest cluster. Cells with No elevation value can be inpainted using the values of neighboring cells.","title":"Feature"},{"location":"map/map_loader/#how-to-run_3","text":"ros2 run map_loader elevation_map_loader --ros-args -p param_file_path:=path/to/elevation_map_parameters.yaml -p elevation_map_directory:=path/to/elevation_map_directory -p pointcloud_map_path:=path/to/pointcloud.pcd","title":"How to run"},{"location":"map/map_loader/#subscribed-topics_1","text":"input/pointcloud_map (sensor_msgs:PointCloud2) : PointCloud Map input/vector_map (autoware_lanelet2_msgs/MapBin) : binary data of Lanelet2 Map","title":"Subscribed Topics"},{"location":"map/map_loader/#published-topics_3","text":"output/elevation_map (grid_map_msgs/GridMap) : Elevation Map output/elevation_map_cloud (sensor_msgs:PointCloud2) : Pointcloud generated from the value of Elevation Map","title":"Published Topics"},{"location":"map/map_loader/#parameter-description","text":"","title":"Parameter description"},{"location":"map/map_loader/#ros-parameters","text":"Name Type Description Default value map_layer_name std::string elevation_map layer name elevation param_file_path std::string GridMap parameters config path_default elevation_map_file_path std::string elevation_map file (bag2) path_default map_frame std::string map_frame when loading elevation_map file map use_inpaint bool Whether to inpaint empty cells true inpaint_radius float Radius of a circular neighborhood of each point inpainted that is considered by the algorithm [m] 0.3 use_elevation_map_cloud_publisher bool Whether to publish output/elevation_map_cloud false use_lane_filter bool Whether to filter elevation_map with vector_map false lane_margin float Value of how much to expand the range of vector_map [m] 0.5 lane_height_diff_thresh float Only point clouds in the height range of this value from vector_map are used to generate elevation_map [m] 1.0 lane_filter_voxel_size_x float Voxel size x for calculating point clouds in vector_map [m] 0.04 lane_filter_voxel_size_y float Voxel size y for calculating point clouds in vector_map [m] 0.04 lane_filter_voxel_size_z float Voxel size z for calculating point clouds in vector_map [m] 0.04","title":"ROS parameters"},{"location":"map/map_loader/#gridmap-parameters","text":"The parameters are described on config/elevation_map_parameters.yaml .","title":"GridMap parameters"},{"location":"map/map_loader/#general-parameters","text":"Name Type Description Default value pcl_grid_map_extraction/num_processing_threads int Number of threads for processing grid map cells. Filtering of the raw input point cloud is not parallelized. 12","title":"General parameters"},{"location":"map/map_loader/#grid-map-parameters","text":"See: https://github.com/ANYbotics/grid_map/tree/ros2/grid_map_pcl Resulting grid map parameters. Name Type Description Default value pcl_grid_map_extraction/grid_map/min_num_points_per_cell int Minimum number of points in the point cloud that have to fall within any of the grid map cells. Otherwise the cell elevation will be set to NaN. 3 pcl_grid_map_extraction/grid_map/resolution float Resolution of the grid map. Width and length are computed automatically. 0.3","title":"Grid map parameters"},{"location":"map/map_loader/#point-cloud-pre-processing-parameters","text":"","title":"Point Cloud Pre-processing Parameters"},{"location":"map/map_loader/#rigid-body-transform-parameters","text":"Rigid body transform that is applied to the point cloud before computing elevation. Name Type Description Default value pcl_grid_map_extraction/cloud_transform/translation float Translation (xyz) that is applied to the input point cloud before computing elevation. 0.0 pcl_grid_map_extraction/cloud_transform/rotation float Rotation (intrinsic rotation, convention X-Y'-Z'') that is applied to the input point cloud before computing elevation. 0.0","title":"Rigid body transform parameters"},{"location":"map/map_loader/#cluster-extraction-parameters","text":"Cluster extraction is based on pcl algorithms. See https://pointclouds.org/documentation/tutorials/cluster_extraction.html for more details. Name Type Description Default value pcl_grid_map_extraction/cluster_extraction/cluster_tolerance float Distance between points below which they will still be considered part of one cluster. 0.2 pcl_grid_map_extraction/cluster_extraction/min_num_points int Min number of points that a cluster needs to have (otherwise it will be discarded). 3 pcl_grid_map_extraction/cluster_extraction/max_num_points int Max number of points that a cluster can have (otherwise it will be discarded). 1000000","title":"Cluster extraction parameters"},{"location":"map/map_loader/#outlier-removal-parameters","text":"See https://pointclouds.org/documentation/tutorials/statistical_outlier.html for more explanation on outlier removal. Name Type Description Default value pcl_grid_map_extraction/outlier_removal/is_remove_outliers float Whether to perform statistical outlier removal. false pcl_grid_map_extraction/outlier_removal/mean_K float Number of neighbours to analyze for estimating statistics of a point. 10 pcl_grid_map_extraction/outlier_removal/stddev_threshold float Number of standard deviations under which points are considered to be inliers. 1.0","title":"Outlier removal parameters"},{"location":"map/map_loader/#subsampling-parameters","text":"See https://pointclouds.org/documentation/tutorials/voxel_grid.html for more explanation on point cloud downsampling. Name Type Description Default value pcl_grid_map_extraction/downsampling/is_downsample_cloud bool Whether to perform downsampling or not. false pcl_grid_map_extraction/downsampling/voxel_size float Voxel sizes (xyz) in meters. 0.02","title":"Subsampling parameters"},{"location":"perception/object_recognition/detection/lidar_apollo_instance_segmentation/","text":"Note # This package makes use of three external codes. The trained files are provided by apollo. The trained files are automatically downloaded when you build. Original URL VLP-16 : https://github.com/ApolloAuto/apollo/raw/88bfa5a1acbd20092963d6057f3a922f3939a183/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne16/deploy.caffemodel HDL-64 : https://github.com/ApolloAuto/apollo/raw/88bfa5a1acbd20092963d6057f3a922f3939a183/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne64/deploy.caffemodel VLS-128 : https://github.com/ApolloAuto/apollo/raw/91844c80ee4bd0cc838b4de4c625852363c258b5/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne128/deploy.caffemodel Supported lidars are velodyne 16, 64 and 128, but you can also use velodyne 32 and other lidars with good accuracy. apollo 3D Obstacle Perception description /****************************************************************************** * Copyright 2017 The Apollo Authors. All Rights Reserved. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. *****************************************************************************/ tensorRTWrapper : It is used under the lib directory. MIT License Copyright (c) 2018 lewes6369 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. autoware_perception description /* * Copyright 2018-2019 Autoware Foundation. All rights reserved. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */ Special thanks # Apollo Project lewes6369 Autoware Foundation Kosuke Takeuchi (TierIV Part timer)","title":"Index"},{"location":"perception/object_recognition/detection/lidar_apollo_instance_segmentation/#note","text":"This package makes use of three external codes. The trained files are provided by apollo. The trained files are automatically downloaded when you build. Original URL VLP-16 : https://github.com/ApolloAuto/apollo/raw/88bfa5a1acbd20092963d6057f3a922f3939a183/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne16/deploy.caffemodel HDL-64 : https://github.com/ApolloAuto/apollo/raw/88bfa5a1acbd20092963d6057f3a922f3939a183/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne64/deploy.caffemodel VLS-128 : https://github.com/ApolloAuto/apollo/raw/91844c80ee4bd0cc838b4de4c625852363c258b5/modules/perception/production/data/perception/lidar/models/cnnseg/velodyne128/deploy.caffemodel Supported lidars are velodyne 16, 64 and 128, but you can also use velodyne 32 and other lidars with good accuracy. apollo 3D Obstacle Perception description /****************************************************************************** * Copyright 2017 The Apollo Authors. All Rights Reserved. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. *****************************************************************************/ tensorRTWrapper : It is used under the lib directory. MIT License Copyright (c) 2018 lewes6369 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. autoware_perception description /* * Copyright 2018-2019 Autoware Foundation. All rights reserved. * * Licensed under the Apache License, Version 2.0 (the \"License\"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an \"AS IS\" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */","title":"Note"},{"location":"perception/object_recognition/detection/lidar_apollo_instance_segmentation/#special-thanks","text":"Apollo Project lewes6369 Autoware Foundation Kosuke Takeuchi (TierIV Part timer)","title":"Special thanks"},{"location":"perception/object_recognition/detection/lidar_apollo_instance_segmentation/lib/","text":"Note # This library is customized. Original repository : https://github.com/lewes6369/tensorRTWrapper MIT License Copyright (c) 2018 lewes6369 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Index"},{"location":"perception/object_recognition/detection/lidar_apollo_instance_segmentation/lib/#note","text":"This library is customized. Original repository : https://github.com/lewes6369/tensorRTWrapper MIT License Copyright (c) 2018 lewes6369 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Note"},{"location":"perception/object_recognition/detection/shape_estimation/","text":"Shape Estimation # L-shape fitting implementation of the paper: @conference { Zhang-2017-26536 , author = {Xiao Zhang and Wenda Xu and Chiyu Dong and John M. Dolan} , title = {Efficient L-Shape Fitting for Vehicle Detection Using Laser Scanners} , booktitle = {2017 IEEE Intelligent Vehicles Symposium} , year = {2017} , month = {June} , keywords = {autonomous driving, laser scanner, perception, segmentation} , } How to launch # From RTM # Computing tab -> Detection -> lidar_detector -> lidar_shape_estimation Configure parameters using the [app] button. From the command line # From a sourced command line: roslaunch lidar_shape_estimation shape_estimation_clustering.launch Launch files also include the visualization node. Requirements # LiDAR data segmented. Objects Parameters # Parameter Type Description Default input String Topic name containing the objects detected by the Lidar in 3D space. /detection/lidar_detector/objects output String Topic name containing the objects with the shape estimated in 3D space. /detection/lidar_shape_estimation/objects Usage example # Launch a ground filter algorithm from the Points Preprocessor section in the Sensing tab. (adjust the parameters to your vehicle setup). Launch a Lidar Detector from the Computing tab. Launch this node. Node info # Node [/lidar_shape_estimation] Publications: * /detection/shape_estimation/objects [autoware_perception_msgs/DetectedObjectArray] Subscriptions: * /detection/lidar_detector/objects [autoware_perception_msgs/DetectedObjectArray] ------------------------- Node [/detection/shape_estimation/shape_estimation_visualization] Publications: * /detection/shape_estimation/objects_markers [visualization_msgs/MarkerArray] Subscriptions: * /detection/shape_estimation/objects [autoware_perception_msgs/DetectedObjectArray]","title":"Shape Estimation"},{"location":"perception/object_recognition/detection/shape_estimation/#shape-estimation","text":"L-shape fitting implementation of the paper: @conference { Zhang-2017-26536 , author = {Xiao Zhang and Wenda Xu and Chiyu Dong and John M. Dolan} , title = {Efficient L-Shape Fitting for Vehicle Detection Using Laser Scanners} , booktitle = {2017 IEEE Intelligent Vehicles Symposium} , year = {2017} , month = {June} , keywords = {autonomous driving, laser scanner, perception, segmentation} , }","title":"Shape Estimation"},{"location":"perception/object_recognition/detection/shape_estimation/#how-to-launch","text":"","title":"How to launch"},{"location":"perception/object_recognition/detection/shape_estimation/#from-rtm","text":"Computing tab -> Detection -> lidar_detector -> lidar_shape_estimation Configure parameters using the [app] button.","title":"From RTM"},{"location":"perception/object_recognition/detection/shape_estimation/#from-the-command-line","text":"From a sourced command line: roslaunch lidar_shape_estimation shape_estimation_clustering.launch Launch files also include the visualization node.","title":"From the command line"},{"location":"perception/object_recognition/detection/shape_estimation/#requirements","text":"LiDAR data segmented. Objects","title":"Requirements"},{"location":"perception/object_recognition/detection/shape_estimation/#parameters","text":"Parameter Type Description Default input String Topic name containing the objects detected by the Lidar in 3D space. /detection/lidar_detector/objects output String Topic name containing the objects with the shape estimated in 3D space. /detection/lidar_shape_estimation/objects","title":"Parameters"},{"location":"perception/object_recognition/detection/shape_estimation/#usage-example","text":"Launch a ground filter algorithm from the Points Preprocessor section in the Sensing tab. (adjust the parameters to your vehicle setup). Launch a Lidar Detector from the Computing tab. Launch this node.","title":"Usage example"},{"location":"perception/object_recognition/detection/shape_estimation/#node-info","text":"Node [/lidar_shape_estimation] Publications: * /detection/shape_estimation/objects [autoware_perception_msgs/DetectedObjectArray] Subscriptions: * /detection/lidar_detector/objects [autoware_perception_msgs/DetectedObjectArray] ------------------------- Node [/detection/shape_estimation/shape_estimation_visualization] Publications: * /detection/shape_estimation/objects_markers [visualization_msgs/MarkerArray] Subscriptions: * /detection/shape_estimation/objects [autoware_perception_msgs/DetectedObjectArray]","title":"Node info"},{"location":"perception/object_recognition/detection/tensorrt_yolo/","text":"Tensorrt YOLO # Onnx model # YOLOv3 # YOLOv3 : Converted from darknet weight file and conf file . YOLOv4 # YOLOv4 : Converted from darknet weight file and conf file . YOLOv5 # Refer to this guide YOLOv5s YOLOv5m YOLOv5l YOLOv5x Reference repositories # https://github.com/pjreddie/darknet https://github.com/AlexeyAB/darknet https://github.com/ultralytics/yolov5 https://github.com/wang-xinyu/tensorrtx https://github.com/NVIDIA/retinanet-examples Note # This package includes multiple licenses.","title":"Tensorrt YOLO"},{"location":"perception/object_recognition/detection/tensorrt_yolo/#tensorrt-yolo","text":"","title":"Tensorrt YOLO"},{"location":"perception/object_recognition/detection/tensorrt_yolo/#onnx-model","text":"","title":"Onnx model"},{"location":"perception/object_recognition/detection/tensorrt_yolo/#yolov3","text":"YOLOv3 : Converted from darknet weight file and conf file .","title":"YOLOv3"},{"location":"perception/object_recognition/detection/tensorrt_yolo/#yolov4","text":"YOLOv4 : Converted from darknet weight file and conf file .","title":"YOLOv4"},{"location":"perception/object_recognition/detection/tensorrt_yolo/#yolov5","text":"Refer to this guide YOLOv5s YOLOv5m YOLOv5l YOLOv5x","title":"YOLOv5"},{"location":"perception/object_recognition/detection/tensorrt_yolo/#reference-repositories","text":"https://github.com/pjreddie/darknet https://github.com/AlexeyAB/darknet https://github.com/ultralytics/yolov5 https://github.com/wang-xinyu/tensorrtx https://github.com/NVIDIA/retinanet-examples","title":"Reference repositories"},{"location":"perception/object_recognition/detection/tensorrt_yolo/#note","text":"This package includes multiple licenses.","title":"Note"},{"location":"perception/object_recognition/prediction/map_based_prediction/Readme/","text":"Reference # M. Werling, J. Ziegler, S. Kammel, and S. Thrun, \u201cOptimal trajectory generation for dynamic street scenario in a frenet frame,\u201d IEEE International Conference on Robotics and Automation, Anchorage, Alaska, USA, May 2010. A. Houenou, P. Bonnifait, V. Cherfaoui, and Wen Yao, \u201cVehicle trajectory prediction based on motion model and maneuver recognition,\u201d in 2013 IEEE/RSJ International Conference on Intelligent Robots and Systems. IEEE, nov 2013, pp. 4363\u20134369.","title":"Reference"},{"location":"perception/object_recognition/prediction/map_based_prediction/Readme/#reference","text":"M. Werling, J. Ziegler, S. Kammel, and S. Thrun, \u201cOptimal trajectory generation for dynamic street scenario in a frenet frame,\u201d IEEE International Conference on Robotics and Automation, Anchorage, Alaska, USA, May 2010. A. Houenou, P. Bonnifait, V. Cherfaoui, and Wen Yao, \u201cVehicle trajectory prediction based on motion model and maneuver recognition,\u201d in 2013 IEEE/RSJ International Conference on Intelligent Robots and Systems. IEEE, nov 2013, pp. 4363\u20134369.","title":"Reference"},{"location":"perception/object_recognition/tracking/multi_object_tracker/","text":"multi object tracker # This multi object tracker consists of data association and EKF. Data association # The data association performs maximum score matching, called min cost max flow problem. In this package, mussp[1] is used as solver. In addition, when associating observations to tracers, data association have gates such as the area of the object from the BEV, Mahalanobis distance, and maximum distance, depending on the class label. EKF Tracker # Models for pedestrians, bicycles (motorcycles), and cars are available. The pedestrian or bicycle tracker is running at the same time as the respective EKF model in order to enable the transition between pedestrian and bicycle tracking. For big vehicles such as trucks and buses, we have separate models for passenger cars and large vehicles because they are difficult to distinguish from passenger cars and are not stable. Therefore, separate models are prepared for passenger cars and big vehicles, and these models are run at the same time as the respective EKF models to ensure stability. Note # This package makes use of external code. Name License Original Repository muSSP Apache 2.0 https://github.com/yu-lab-vt/muSSP Evaluation of muSSP # According to our evaluation, muSSP is faster than normal SSP when the matrix size is more than 100. Execution time for varying matrix size at 95% sparsity. In real data, the sparsity was often around 95%. Execution time for varying the sparsity with matrix size 100. Reference # [1] C. Wang, Y. Wang, Y. Wang, C.-t. Wu, and G. Yu, \u201cmuSSP: Efficient Min-cost Flow Algorithm for Multi-object Tracking,\u201d NeurIPS, 2019","title":"multi object tracker"},{"location":"perception/object_recognition/tracking/multi_object_tracker/#multi-object-tracker","text":"This multi object tracker consists of data association and EKF.","title":"multi object tracker"},{"location":"perception/object_recognition/tracking/multi_object_tracker/#data-association","text":"The data association performs maximum score matching, called min cost max flow problem. In this package, mussp[1] is used as solver. In addition, when associating observations to tracers, data association have gates such as the area of the object from the BEV, Mahalanobis distance, and maximum distance, depending on the class label.","title":"Data association"},{"location":"perception/object_recognition/tracking/multi_object_tracker/#ekf-tracker","text":"Models for pedestrians, bicycles (motorcycles), and cars are available. The pedestrian or bicycle tracker is running at the same time as the respective EKF model in order to enable the transition between pedestrian and bicycle tracking. For big vehicles such as trucks and buses, we have separate models for passenger cars and large vehicles because they are difficult to distinguish from passenger cars and are not stable. Therefore, separate models are prepared for passenger cars and big vehicles, and these models are run at the same time as the respective EKF models to ensure stability.","title":"EKF Tracker"},{"location":"perception/object_recognition/tracking/multi_object_tracker/#note","text":"This package makes use of external code. Name License Original Repository muSSP Apache 2.0 https://github.com/yu-lab-vt/muSSP","title":"Note"},{"location":"perception/object_recognition/tracking/multi_object_tracker/#evaluation-of-mussp","text":"According to our evaluation, muSSP is faster than normal SSP when the matrix size is more than 100. Execution time for varying matrix size at 95% sparsity. In real data, the sparsity was often around 95%. Execution time for varying the sparsity with matrix size 100.","title":"Evaluation of muSSP"},{"location":"perception/object_recognition/tracking/multi_object_tracker/#reference","text":"[1] C. Wang, Y. Wang, Y. Wang, C.-t. Wu, and G. Yu, \u201cmuSSP: Efficient Min-cost Flow Algorithm for Multi-object Tracking,\u201d NeurIPS, 2019","title":"Reference"},{"location":"perception/traffic_light_recognition/traffic_light_classifier/","text":"traffic_light_classifier # There's an implementation of CNN and HSV filter versions. label support # By default, this package only support typical type of traffic light in Japan. so only basic type of lamp is supported. please refer LampState label names are assumed to be comma-separated to represent each lamp.\\ For example, the traffic light with red and right arrow lit are represented by label such as \"red,right\" , which are converted to the string array [\"red\", \"right\"] in cnn_classifier, and finally array is converted to LampState array. HSV filter version # CNN version # If you use CNN, the trained file are automatically downloaded when you build. other country traffic light model # Please download from below list and replace onnx and label file in the data directory. pretrained onnx model corresponding label file United States LISA go-stop-warning-label Japan nishishinjuku nishishinjuku-label Reference # M. Sandler, A. Howard, M. Zhu, A. Zhmoginov and L. Chen, \"MobileNetV2: Inverted Residuals and Linear Bottlenecks,\" 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition, Salt Lake City, UT, 2018, pp. 4510-4520, doi: 10.1109/CVPR.2018.00474.","title":"traffic_light_classifier"},{"location":"perception/traffic_light_recognition/traffic_light_classifier/#traffic_light_classifier","text":"There's an implementation of CNN and HSV filter versions.","title":"traffic_light_classifier"},{"location":"perception/traffic_light_recognition/traffic_light_classifier/#label-support","text":"By default, this package only support typical type of traffic light in Japan. so only basic type of lamp is supported. please refer LampState label names are assumed to be comma-separated to represent each lamp.\\ For example, the traffic light with red and right arrow lit are represented by label such as \"red,right\" , which are converted to the string array [\"red\", \"right\"] in cnn_classifier, and finally array is converted to LampState array.","title":"label support"},{"location":"perception/traffic_light_recognition/traffic_light_classifier/#hsv-filter-version","text":"","title":"HSV filter version"},{"location":"perception/traffic_light_recognition/traffic_light_classifier/#cnn-version","text":"If you use CNN, the trained file are automatically downloaded when you build.","title":"CNN version"},{"location":"perception/traffic_light_recognition/traffic_light_classifier/#other-country-traffic-light-model","text":"Please download from below list and replace onnx and label file in the data directory. pretrained onnx model corresponding label file United States LISA go-stop-warning-label Japan nishishinjuku nishishinjuku-label","title":"other country traffic light model"},{"location":"perception/traffic_light_recognition/traffic_light_classifier/#reference","text":"M. Sandler, A. Howard, M. Zhu, A. Zhmoginov and L. Chen, \"MobileNetV2: Inverted Residuals and Linear Bottlenecks,\" 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition, Salt Lake City, UT, 2018, pp. 4510-4520, doi: 10.1109/CVPR.2018.00474.","title":"Reference"},{"location":"perception/traffic_light_recognition/traffic_light_map_based_detector/","text":"The traffic_light_map_based_detector Package # Overview # traffic_light_map_based_detector calculates where the traffic lights will appear in the image based on the HD map. Calibration and vibration errors can be entered as parameters, and the size of the detected RegionOfInterest will change according to the error. If the node receives route information, it only looks at traffic lights on that route. If the node receives no route information, it looks at a radius of 200 meters and the angle between the traffic light and the camera is less than 40 degrees. Input topics # Name Type Description ~input/vector_map autoware_lanelet2_msgs::MapBin vector map ~input/camera_info sensor_msgs::CameraInfo target camera parameter ~input/route autoware_planning_msgs::Route optional: route Output topics # Name Type Description ~output/rois autoware_perception_msgs::TrafficLightRoiArray location of traffic lights in image corresponding to the camera info ~debug/markers visualization_msgs::MarkerArray visualization to debug Node parameters # Parameter Type Description max_vibration_pitch double Maximum error in pitch direction. If -5~+5, it will be 10. max_vibration_yaw double Maximum error in yaw direction. If -5~+5, it will be 10. max_vibration_height double Maximum error in height direction. If -5~+5, it will be 10. max_vibration_width double Maximum error in width direction. If -5~+5, it will be 10. max_vibration_depth double Maximum error in depth direction. If -5~+5, it will be 10.","title":"The `traffic_light_map_based_detector` Package"},{"location":"perception/traffic_light_recognition/traffic_light_map_based_detector/#the-traffic_light_map_based_detector-package","text":"","title":"The traffic_light_map_based_detector Package"},{"location":"perception/traffic_light_recognition/traffic_light_map_based_detector/#overview","text":"traffic_light_map_based_detector calculates where the traffic lights will appear in the image based on the HD map. Calibration and vibration errors can be entered as parameters, and the size of the detected RegionOfInterest will change according to the error. If the node receives route information, it only looks at traffic lights on that route. If the node receives no route information, it looks at a radius of 200 meters and the angle between the traffic light and the camera is less than 40 degrees.","title":"Overview"},{"location":"perception/traffic_light_recognition/traffic_light_map_based_detector/#input-topics","text":"Name Type Description ~input/vector_map autoware_lanelet2_msgs::MapBin vector map ~input/camera_info sensor_msgs::CameraInfo target camera parameter ~input/route autoware_planning_msgs::Route optional: route","title":"Input topics"},{"location":"perception/traffic_light_recognition/traffic_light_map_based_detector/#output-topics","text":"Name Type Description ~output/rois autoware_perception_msgs::TrafficLightRoiArray location of traffic lights in image corresponding to the camera info ~debug/markers visualization_msgs::MarkerArray visualization to debug","title":"Output topics"},{"location":"perception/traffic_light_recognition/traffic_light_map_based_detector/#node-parameters","text":"Parameter Type Description max_vibration_pitch double Maximum error in pitch direction. If -5~+5, it will be 10. max_vibration_yaw double Maximum error in yaw direction. If -5~+5, it will be 10. max_vibration_height double Maximum error in height direction. If -5~+5, it will be 10. max_vibration_width double Maximum error in width direction. If -5~+5, it will be 10. max_vibration_depth double Maximum error in depth direction. If -5~+5, it will be 10.","title":"Node parameters"},{"location":"perception/traffic_light_recognition/traffic_light_ssd_fine_detector/","text":"traffic_light_ssd_fine_detector # This is a traffic light fine detector implementation of MobileNetV2 + SSDLite. The trained model is based on pytorch-ssd . Reference # M. Sandler, A. Howard, M. Zhu, A. Zhmoginov and L. Chen, \"MobileNetV2: Inverted Residuals and Linear Bottlenecks,\" 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition, Salt Lake City, UT, 2018, pp. 4510-4520, doi: 10.1109/CVPR.2018.00474.","title":"traffic_light_ssd_fine_detector"},{"location":"perception/traffic_light_recognition/traffic_light_ssd_fine_detector/#traffic_light_ssd_fine_detector","text":"This is a traffic light fine detector implementation of MobileNetV2 + SSDLite. The trained model is based on pytorch-ssd .","title":"traffic_light_ssd_fine_detector"},{"location":"perception/traffic_light_recognition/traffic_light_ssd_fine_detector/#reference","text":"M. Sandler, A. Howard, M. Zhu, A. Zhmoginov and L. Chen, \"MobileNetV2: Inverted Residuals and Linear Bottlenecks,\" 2018 IEEE/CVF Conference on Computer Vision and Pattern Recognition, Salt Lake City, UT, 2018, pp. 4510-4520, doi: 10.1109/CVPR.2018.00474.","title":"Reference"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/","text":"Mission Planner # Purpose # Mission Planner calculates a route that navigates from the current ego pose to the goal pose following the given check points. The route is made of a sequence of lanes on a static map. Dynamic objects (e.g. pedestrians and other vehicles) and dynamic map information (e.g. road construction which blocks some lanes) are not considered during route planning. Therefore, the output topic is only published when the goal pose or check points are given and will be latched until the new goal pose or check points are given. The core implementation does not depend on a map format. In current Autoware.IV, only Lanelet2 map format is supported. Inputs / Outputs # input # Name Type Description ~input/vector_map autoware_lanelet2_msgs/MapBin vector map of Lanelet2 ~input/goal_pose autoware_planning_msgs/PoseStamped goal pose ~input/checkpoints autoware_planning_msgs/PoseStamped checkpoint to follow while heading to goal output # Name Type Description ~output/route autoware_planning_msgs/Route route from ego pose to goal autoware_planning_msgs/Route consists of route sections and goal pose. Route section, whose type is autoware_planning_msgs/RouteSections , is a \"slice\" of a road that bundles lane changeable lanes. Note that the most atomic unit of route is lane_id , which is the unique id of a lane in a vector map. Therefore, route message does not contain geometric information about the lane since we did not want to have planning module\u2019s message to have dependency on map data structure. The ROS message of route section contains following three elements for each route section. preferred_lane_id : Preferred lane to follow towards the goal. continued_lane_ids : Lanes whose next lane is also in the same direction (e.g. The lane whose next lane is turning right/left although the preferred lane is going straight is not a continued lane). This continued_lane_ids is used only for lane change. lane_ids : All neighbor lanes in the same direction including the preferred lane. Implementation # Mission Planner # Two callbacks (goal and check points) are a trigger for route planning. Routing graph, which plans route in Lanelet2, must be created before those callbacks, and this routing graph is created in vector map callback. plan route is explained in detail in the following section. Note that during the goal callback, previously memorized check points are removed, and only current ego pose and goal pose are memorized as check points. Note that at least two check points must be already memorized, which are start and goal pose, before the check point callback. Route Planner # plan route is executed with check points including current ego pose and goal pose. plan path between each check points firstly calculates closest lanes to start and goal pose. Then routing graph of Lanelet2 plans the shortest path from start and goal pose. initialize route lanelets initializes route handler, and calculates route_lanelets . route_lanelets , all of which will be registered in route sections, are lanelets next to the lanelets in the planned path, and used when planning lane change. To calculate route_lanelets , All the neighbor (right and left) lanes for the planned path which is lane-changeable is memorized as route_lanelets . All the neighbor (right and left) lanes for the planned path which is not lane-changeable is memorized as candidate_lanelets . If the following and previous lanelets of each candidate_lanelets are route_lanelets , the candidate_lanelet is registered as route_lanelets This is because even though candidate_lanelet (an adjacent lane) is not lane-changeable, we can pass the candidate_lanelet without lane change if the following and previous lanelets of the candidate_lanelet are route_lanelets get preferred lanelets extracts preferred_lane_id from route_lanelets with the route handler. create route sections extracts continued_lane_ids , and lane_ids from route_lanelets for each route section with the route handler, and creates route sections. Limitations # Dynamic objects (e.g. pedestrians and other vehicles) and dynamic map information (e.g. road construction which blocks some lanes) are not considered during route planning. Looped route is not supported.","title":"Mission Planner"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#mission-planner","text":"","title":"Mission Planner"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#purpose","text":"Mission Planner calculates a route that navigates from the current ego pose to the goal pose following the given check points. The route is made of a sequence of lanes on a static map. Dynamic objects (e.g. pedestrians and other vehicles) and dynamic map information (e.g. road construction which blocks some lanes) are not considered during route planning. Therefore, the output topic is only published when the goal pose or check points are given and will be latched until the new goal pose or check points are given. The core implementation does not depend on a map format. In current Autoware.IV, only Lanelet2 map format is supported.","title":"Purpose"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#input","text":"Name Type Description ~input/vector_map autoware_lanelet2_msgs/MapBin vector map of Lanelet2 ~input/goal_pose autoware_planning_msgs/PoseStamped goal pose ~input/checkpoints autoware_planning_msgs/PoseStamped checkpoint to follow while heading to goal","title":"input"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#output","text":"Name Type Description ~output/route autoware_planning_msgs/Route route from ego pose to goal autoware_planning_msgs/Route consists of route sections and goal pose. Route section, whose type is autoware_planning_msgs/RouteSections , is a \"slice\" of a road that bundles lane changeable lanes. Note that the most atomic unit of route is lane_id , which is the unique id of a lane in a vector map. Therefore, route message does not contain geometric information about the lane since we did not want to have planning module\u2019s message to have dependency on map data structure. The ROS message of route section contains following three elements for each route section. preferred_lane_id : Preferred lane to follow towards the goal. continued_lane_ids : Lanes whose next lane is also in the same direction (e.g. The lane whose next lane is turning right/left although the preferred lane is going straight is not a continued lane). This continued_lane_ids is used only for lane change. lane_ids : All neighbor lanes in the same direction including the preferred lane.","title":"output"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#implementation","text":"","title":"Implementation"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#mission-planner_1","text":"Two callbacks (goal and check points) are a trigger for route planning. Routing graph, which plans route in Lanelet2, must be created before those callbacks, and this routing graph is created in vector map callback. plan route is explained in detail in the following section. Note that during the goal callback, previously memorized check points are removed, and only current ego pose and goal pose are memorized as check points. Note that at least two check points must be already memorized, which are start and goal pose, before the check point callback.","title":"Mission Planner"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#route-planner","text":"plan route is executed with check points including current ego pose and goal pose. plan path between each check points firstly calculates closest lanes to start and goal pose. Then routing graph of Lanelet2 plans the shortest path from start and goal pose. initialize route lanelets initializes route handler, and calculates route_lanelets . route_lanelets , all of which will be registered in route sections, are lanelets next to the lanelets in the planned path, and used when planning lane change. To calculate route_lanelets , All the neighbor (right and left) lanes for the planned path which is lane-changeable is memorized as route_lanelets . All the neighbor (right and left) lanes for the planned path which is not lane-changeable is memorized as candidate_lanelets . If the following and previous lanelets of each candidate_lanelets are route_lanelets , the candidate_lanelet is registered as route_lanelets This is because even though candidate_lanelet (an adjacent lane) is not lane-changeable, we can pass the candidate_lanelet without lane change if the following and previous lanelets of the candidate_lanelet are route_lanelets get preferred lanelets extracts preferred_lane_id from route_lanelets with the route handler. create route sections extracts continued_lane_ids , and lane_ids from route_lanelets for each route section with the route handler, and creates route sections.","title":"Route Planner"},{"location":"planning/mission_planning/mission_planner/mission_planner-design/#limitations","text":"Dynamic objects (e.g. pedestrians and other vehicles) and dynamic map information (e.g. road construction which blocks some lanes) are not considered during route planning. Looped route is not supported.","title":"Limitations"},{"location":"planning/planning_diagnostics/planning_error_monitor/","text":"Planning Error Monitor # Purpose # planning_error_monitor checks a trajectory that if it has any invalid numerical values in its positions, twist and accel values. In addition, it also checks the distance between any two consecutive points and curvature value at a certain point. This package basically monitors if a trajectory, which is generated by planning module, has any unexpected errors. Inner-workings / Algorithms # Point Value Checker (onTrajectoryPointValueChecker) # This function checks position, twist and accel values of all points on a trajectory. If they have Nan or Infinity , this function outputs error status. Interval Checker (onTrajectoryIntervalChecker) # This function computes interval distance between two consecutive points, and will output error messages if the distance is over the interval_threshold . Curvature Checker (onTrajectoryCurvatureChecker) # This function checks if the curvature at each point on a trajectory has an appropriate value. Calculation details are described in the following picture. First, we choose one point(green point in the picture) that are 1.0[m] behind the current point. Then we get a point(blue point in the picture) 1.0[m] ahead of the current point. Using these three points, we calculate the curvature by this method . Relative Angle Checker (onTrajectoryRelativeAngleChecker) # This function checks if the relative angle at point1 generated from point2 and 3 on a trajectory has an appropriate value. Inputs / Outputs # Input # Name Type Description ~/input/trajectory autoware_planning_msgs/Trajectory Planned Trajectory by planning modules Output # Name Type Description /diagnostics diagnostic_msgs/DiagnosticArray diagnostics outputs Parameters # Name Type Description Default value error_interval double Error Interval Distance Threshold [m] 100.0 error_curvature double Error Curvature Threshold 1.0 error_sharp_angle double Error Sharp Angle Threshold \\pi \\pi /4 ignore_too_close_points double Ignore Too Close Distance Threshold 0.005 Assumptions / Known limits # It cannot compute curvature values at start and end points of the trajectory. If trajectory points are too close, curvature calculation might output incorrect values. Future extensions / Unimplemented parts # Collision checker with obstacles may be implemented in the future. Error detection and handling # For the onsite validation, you can use the invalid_trajectory_publisher node. Please launch the node with the following command when the target trajectory is being published. ros2 launch planning_error_monitor invalid_trajectory_publisher.launch.xml This node subscribes the target trajectory, inserts the invalid point, and publishes it with the same name. The invalid trajectory is supposed to be detected by the planning_error_monitor . Limitation: Once the invalid_trajectory_publisher receives the trajectory, it will turn off the subscriber. This is to prevent the trajectory from looping in the same node, therefore, only the one pattern of invalid trajectory is generated.","title":"Planning Error Monitor"},{"location":"planning/planning_diagnostics/planning_error_monitor/#planning-error-monitor","text":"","title":"Planning Error Monitor"},{"location":"planning/planning_diagnostics/planning_error_monitor/#purpose","text":"planning_error_monitor checks a trajectory that if it has any invalid numerical values in its positions, twist and accel values. In addition, it also checks the distance between any two consecutive points and curvature value at a certain point. This package basically monitors if a trajectory, which is generated by planning module, has any unexpected errors.","title":"Purpose"},{"location":"planning/planning_diagnostics/planning_error_monitor/#inner-workings-algorithms","text":"","title":"Inner-workings / Algorithms"},{"location":"planning/planning_diagnostics/planning_error_monitor/#point-value-checker-ontrajectorypointvaluechecker","text":"This function checks position, twist and accel values of all points on a trajectory. If they have Nan or Infinity , this function outputs error status.","title":"Point Value Checker (onTrajectoryPointValueChecker)"},{"location":"planning/planning_diagnostics/planning_error_monitor/#interval-checker-ontrajectoryintervalchecker","text":"This function computes interval distance between two consecutive points, and will output error messages if the distance is over the interval_threshold .","title":"Interval Checker (onTrajectoryIntervalChecker)"},{"location":"planning/planning_diagnostics/planning_error_monitor/#curvature-checker-ontrajectorycurvaturechecker","text":"This function checks if the curvature at each point on a trajectory has an appropriate value. Calculation details are described in the following picture. First, we choose one point(green point in the picture) that are 1.0[m] behind the current point. Then we get a point(blue point in the picture) 1.0[m] ahead of the current point. Using these three points, we calculate the curvature by this method .","title":"Curvature Checker (onTrajectoryCurvatureChecker)"},{"location":"planning/planning_diagnostics/planning_error_monitor/#relative-angle-checker-ontrajectoryrelativeanglechecker","text":"This function checks if the relative angle at point1 generated from point2 and 3 on a trajectory has an appropriate value.","title":"Relative Angle Checker (onTrajectoryRelativeAngleChecker)"},{"location":"planning/planning_diagnostics/planning_error_monitor/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"planning/planning_diagnostics/planning_error_monitor/#input","text":"Name Type Description ~/input/trajectory autoware_planning_msgs/Trajectory Planned Trajectory by planning modules","title":"Input"},{"location":"planning/planning_diagnostics/planning_error_monitor/#output","text":"Name Type Description /diagnostics diagnostic_msgs/DiagnosticArray diagnostics outputs","title":"Output"},{"location":"planning/planning_diagnostics/planning_error_monitor/#parameters","text":"Name Type Description Default value error_interval double Error Interval Distance Threshold [m] 100.0 error_curvature double Error Curvature Threshold 1.0 error_sharp_angle double Error Sharp Angle Threshold \\pi \\pi /4 ignore_too_close_points double Ignore Too Close Distance Threshold 0.005","title":"Parameters"},{"location":"planning/planning_diagnostics/planning_error_monitor/#assumptions-known-limits","text":"It cannot compute curvature values at start and end points of the trajectory. If trajectory points are too close, curvature calculation might output incorrect values.","title":"Assumptions / Known limits"},{"location":"planning/planning_diagnostics/planning_error_monitor/#future-extensions-unimplemented-parts","text":"Collision checker with obstacles may be implemented in the future.","title":"Future extensions / Unimplemented parts"},{"location":"planning/planning_diagnostics/planning_error_monitor/#error-detection-and-handling","text":"For the onsite validation, you can use the invalid_trajectory_publisher node. Please launch the node with the following command when the target trajectory is being published. ros2 launch planning_error_monitor invalid_trajectory_publisher.launch.xml This node subscribes the target trajectory, inserts the invalid point, and publishes it with the same name. The invalid trajectory is supposed to be detected by the planning_error_monitor . Limitation: Once the invalid_trajectory_publisher receives the trajectory, it will turn off the subscriber. This is to prevent the trajectory from looping in the same node, therefore, only the one pattern of invalid trajectory is generated.","title":"Error detection and handling"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/","text":"Role # Smoothens the reference path velocity with velocity and acceleration limit constraint. Flowchart # The overall flowchart of the motion_velocity_optimizer is described below. Feature details # Node # Topic # Subscribed Topic # ~input/trajectory [autoware_planning_msgs::Trajectory] reference trajectory with max velocity trigger for computation /localization/twist [geometry_msgs::TwistStamped] ego-vehicle velocity source /planning/scenario_planning/max_velocity [std_msgs::Float32] external command for max velocity Published Topic # ~output/trajectory [autoware_planning_msgs::Trajectory] trajectory with optimized velocity TF # Published TF # None Subscribed TF # /map to /base_link used to get the closest trajectory point Parameter description # The parameters are described on config/motion_velocity_optimizer.param.yaml Constraint parameters # Name Type Description Default value max_velocity double Max velocity limit [m/s] 20.0 max_accel double Max acceleration limit [m/ss] 1.0 min_decel double Min deceleration limit [m/ss] -1.0 Curve parameters # Name Type Description Default value max_lateral_accel double Max lateral acceleration limit [m/ss] 0.5 min_curve_velocity double Min velocity at lateral acceleration limit [m/ss] 2.74 decel_distance_before_curve double Slow speed distance before a curve for lateral acceleration limit 3.5 decel_distance_after_curve double Slow speed distance after a curve for lateral acceleration limit 2.0 Engage & replan parameters # Name Type Description Default value replan_vel_deviation double Velocity deviation to replan initial velocity [m/s] 5.53 engage_velocity double Engage velocity threshold [m/s] (if the trajectory velocity is higher than this value, use this velocity for engage vehicle speed) 0.25 engage_acceleration double Engage acceleration [m/ss] (use this acceleration when engagement) 0.1 engage_exit_ratio double Exit engage sequence to normal velocity planning when the velocity exceeds engage_exit_ratio x engage_velocity. 0.5 stop_dist_to_prohibit_engage double If the stop point is in this distance, the speed is set to 0 not to move the vehicle [m] 0.5 For trajectory clipping & resampling # Name Type Description Default value extract_ahead_dist double Forward trajectory distance used for planning [m] 200.0 extract_behind_dist double backward trajectory distance used for planning [m] 5.0 delta_yaw_threshold double Allowed delta yaw between ego pose and trajectory pose [radian] 1.0472 max_trajectory_length double Max trajectory length for resampling [m] 200.0 min_trajectory_length double Min trajectory length for resampling [m] 30.0 resample_time double Resample total time [s] 10.0 resample_dt double Resample time interval [s] 0.1 min_trajectory_interval_distance double Resample points-interval length [m] 0.1 Weights for optimization # Name Type Description Default value pseudo_jerk_weight double Weight for \"smoothness\" cost 100.0 over_v_weight double Weight for \"overspeed limit\" cost 100000.0 over_a_weight double Weight for \"overaccel limit\" cost 1000.0 Others # Name Type Description Default value publish_debug_trajs bool publish trajectories on each computation false Results # Trajectories of No.4-1~4-5 shows the output of each functions in this node. 4-5 is the output of this motion_velocity_optimizer . Debug # The debug plot like above will be shown with the following script. rosrun motion_velocity_optimizer trajectory_visualizer.py Reference # [1] Zhang Yu, et al. (2018). Toward a More Complete, Flexible, and Safer Speed Planning for Autonomous Driving via Convex Optimization. Sensors. 18. 2185. 10.3390/s18072185. [2] Stellato, et al. (2020). OSQP: an operator splitting solver for quadratic programs. Mathematical Programming Computation. 10.1007/s12532-020-00179-2. https://link.springer.com/article/10.1007%2Fs12532-020-00179-2","title":"Role"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#role","text":"Smoothens the reference path velocity with velocity and acceleration limit constraint.","title":"Role"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#flowchart","text":"The overall flowchart of the motion_velocity_optimizer is described below.","title":"Flowchart"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#feature-details","text":"","title":"Feature details"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#node","text":"","title":"Node"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#topic","text":"","title":"Topic"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#subscribed-topic","text":"~input/trajectory [autoware_planning_msgs::Trajectory] reference trajectory with max velocity trigger for computation /localization/twist [geometry_msgs::TwistStamped] ego-vehicle velocity source /planning/scenario_planning/max_velocity [std_msgs::Float32] external command for max velocity","title":"Subscribed Topic"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#published-topic","text":"~output/trajectory [autoware_planning_msgs::Trajectory] trajectory with optimized velocity","title":"Published Topic"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#tf","text":"","title":"TF"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#published-tf","text":"None","title":"Published TF"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#subscribed-tf","text":"/map to /base_link used to get the closest trajectory point","title":"Subscribed TF"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#parameter-description","text":"The parameters are described on config/motion_velocity_optimizer.param.yaml","title":"Parameter description"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#constraint-parameters","text":"Name Type Description Default value max_velocity double Max velocity limit [m/s] 20.0 max_accel double Max acceleration limit [m/ss] 1.0 min_decel double Min deceleration limit [m/ss] -1.0","title":"Constraint parameters"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#curve-parameters","text":"Name Type Description Default value max_lateral_accel double Max lateral acceleration limit [m/ss] 0.5 min_curve_velocity double Min velocity at lateral acceleration limit [m/ss] 2.74 decel_distance_before_curve double Slow speed distance before a curve for lateral acceleration limit 3.5 decel_distance_after_curve double Slow speed distance after a curve for lateral acceleration limit 2.0","title":"Curve parameters"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#engage-replan-parameters","text":"Name Type Description Default value replan_vel_deviation double Velocity deviation to replan initial velocity [m/s] 5.53 engage_velocity double Engage velocity threshold [m/s] (if the trajectory velocity is higher than this value, use this velocity for engage vehicle speed) 0.25 engage_acceleration double Engage acceleration [m/ss] (use this acceleration when engagement) 0.1 engage_exit_ratio double Exit engage sequence to normal velocity planning when the velocity exceeds engage_exit_ratio x engage_velocity. 0.5 stop_dist_to_prohibit_engage double If the stop point is in this distance, the speed is set to 0 not to move the vehicle [m] 0.5","title":"Engage &amp; replan parameters"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#for-trajectory-clipping-resampling","text":"Name Type Description Default value extract_ahead_dist double Forward trajectory distance used for planning [m] 200.0 extract_behind_dist double backward trajectory distance used for planning [m] 5.0 delta_yaw_threshold double Allowed delta yaw between ego pose and trajectory pose [radian] 1.0472 max_trajectory_length double Max trajectory length for resampling [m] 200.0 min_trajectory_length double Min trajectory length for resampling [m] 30.0 resample_time double Resample total time [s] 10.0 resample_dt double Resample time interval [s] 0.1 min_trajectory_interval_distance double Resample points-interval length [m] 0.1","title":"For trajectory clipping &amp; resampling"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#weights-for-optimization","text":"Name Type Description Default value pseudo_jerk_weight double Weight for \"smoothness\" cost 100.0 over_v_weight double Weight for \"overspeed limit\" cost 100000.0 over_a_weight double Weight for \"overaccel limit\" cost 1000.0","title":"Weights for optimization"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#others","text":"Name Type Description Default value publish_debug_trajs bool publish trajectories on each computation false","title":"Others"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#results","text":"Trajectories of No.4-1~4-5 shows the output of each functions in this node. 4-5 is the output of this motion_velocity_optimizer .","title":"Results"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#debug","text":"The debug plot like above will be shown with the following script. rosrun motion_velocity_optimizer trajectory_visualizer.py","title":"Debug"},{"location":"planning/scenario_planning/common/motion_velocity_optimizer/#reference","text":"[1] Zhang Yu, et al. (2018). Toward a More Complete, Flexible, and Safer Speed Planning for Autonomous Driving via Convex Optimization. Sensors. 18. 2185. 10.3390/s18072185. [2] Stellato, et al. (2020). OSQP: an operator splitting solver for quadratic programs. Mathematical Programming Computation. 10.1007/s12532-020-00179-2. https://link.springer.com/article/10.1007%2Fs12532-020-00179-2","title":"Reference"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/","text":"The behavior_velocity_planner Package # Overview # behavior_velocity_planner is a planner that adjust velocity based on the traffic rules. It consists of several modules. Blind Spot Crosswalk Detection Area Intersection Stop Line Traffic Light When each module plans velocity, it considers based on base_link (center of rear-wheel axis) pose. So for example, in order to stop at a stop line with the vehicles' front on the stop line, it calculates base_link position from the distance between base_link to front and modifies path velocity from the base_link position. Input topics # Name Type Description ~input/path_with_lane_id autoware_planning_msgs::PathWithLaneId path with lane_id ~input/vector_map autoware_lanelet2_msgs::MapBin vector map ~input/vehicle_velocity geometry_msgs::TwistStamped vehicle velocity ~input/dynamic_objects autoware_perception_msgs::DynamicObjectArray dynamic objects ~input/no_ground_pointcloud sensor_msgs::PointCloud2 obstacle pointcloud ~input/traffic_light_states autoware_perception_msgs::TrafficLightStateArray traffic light states Output topics # Name Type Description ~output/path autoware_planning_msgs::Path path to be followed ~output/stop_reasons autoware_planning_msgs::StopReasonArray reasons that cause the vehicle to stop Node parameters # Parameter Type Description launch_blind_spot bool whether to launch blind_spot module launch_crosswalk bool whether to launch crosswalk module launch_detection_area bool whether to launch detection_area module launch_intersection bool whether to launch intersection module launch_traffic_light bool whether to launch traffic light module launch_stop_line bool whether to launch stop_line module forward_path_length double forward path length backward_path_length double backward path length max_accel double (to be a global parameter) max acceleration of the vehicle delay_response_time double (to be a global parameter) delay time of the vehicle's response to control commands Modules # Stop Line # Role # This module plans velocity so that the vehicle can stop right before stop lines and restart driving after stopped. Module Parameters # Parameter Type Description stop_margin double a margin that the vehicle tries to stop before stop_line stop_check_dist double when the vehicle is within stop_check_dist from stop_line and stopped, move to STOPPED state Flowchart # This algorithm is based on segment . segment consists of two node points. It's useful for removing boundary conditions because if segment(i) exists we can assume node(i) and node(i+1) exist. First, this algorithm finds a collision between reference path and stop line. Then, we can get collision segment and collision point . Next, based on collision point , it finds offset segment by iterating backward points up to a specific offset length. The offset length is stop_margin (parameter) + base_link to front (to adjust head pose to stop line). Then, we can get offset segment and offset from segment start . After that, we can calculate a offset point from offset segment and offset . This will be stop_pose .","title":"The `behavior_velocity_planner` Package"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#the-behavior_velocity_planner-package","text":"","title":"The behavior_velocity_planner Package"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#overview","text":"behavior_velocity_planner is a planner that adjust velocity based on the traffic rules. It consists of several modules. Blind Spot Crosswalk Detection Area Intersection Stop Line Traffic Light When each module plans velocity, it considers based on base_link (center of rear-wheel axis) pose. So for example, in order to stop at a stop line with the vehicles' front on the stop line, it calculates base_link position from the distance between base_link to front and modifies path velocity from the base_link position.","title":"Overview"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#input-topics","text":"Name Type Description ~input/path_with_lane_id autoware_planning_msgs::PathWithLaneId path with lane_id ~input/vector_map autoware_lanelet2_msgs::MapBin vector map ~input/vehicle_velocity geometry_msgs::TwistStamped vehicle velocity ~input/dynamic_objects autoware_perception_msgs::DynamicObjectArray dynamic objects ~input/no_ground_pointcloud sensor_msgs::PointCloud2 obstacle pointcloud ~input/traffic_light_states autoware_perception_msgs::TrafficLightStateArray traffic light states","title":"Input topics"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#output-topics","text":"Name Type Description ~output/path autoware_planning_msgs::Path path to be followed ~output/stop_reasons autoware_planning_msgs::StopReasonArray reasons that cause the vehicle to stop","title":"Output topics"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#node-parameters","text":"Parameter Type Description launch_blind_spot bool whether to launch blind_spot module launch_crosswalk bool whether to launch crosswalk module launch_detection_area bool whether to launch detection_area module launch_intersection bool whether to launch intersection module launch_traffic_light bool whether to launch traffic light module launch_stop_line bool whether to launch stop_line module forward_path_length double forward path length backward_path_length double backward path length max_accel double (to be a global parameter) max acceleration of the vehicle delay_response_time double (to be a global parameter) delay time of the vehicle's response to control commands","title":"Node parameters"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#modules","text":"","title":"Modules"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#stop-line","text":"","title":"Stop Line"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#role","text":"This module plans velocity so that the vehicle can stop right before stop lines and restart driving after stopped.","title":"Role"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#module-parameters","text":"Parameter Type Description stop_margin double a margin that the vehicle tries to stop before stop_line stop_check_dist double when the vehicle is within stop_check_dist from stop_line and stopped, move to STOPPED state","title":"Module Parameters"},{"location":"planning/scenario_planning/lane_driving/behavior_planning/behavior_velocity_planner/#flowchart","text":"This algorithm is based on segment . segment consists of two node points. It's useful for removing boundary conditions because if segment(i) exists we can assume node(i) and node(i+1) exist. First, this algorithm finds a collision between reference path and stop line. Then, we can get collision segment and collision point . Next, based on collision point , it finds offset segment by iterating backward points up to a specific offset length. The offset length is stop_margin (parameter) + base_link to front (to adjust head pose to stop line). Then, we can get offset segment and offset from segment start . After that, we can calculate a offset point from offset segment and offset . This will be stop_pose .","title":"Flowchart"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/","text":"Obstacle Avoidance Planner # Purpose # obstacle_avoidance_planner \u306f\u5165\u529b\u3055\u308c\u305f path \u3068 drivable area\u3001\u304a\u3088\u3073\u52d5\u7269\u4f53\u60c5\u5831\u3092\u3082\u3068\u306b\u3001\u8eca\u4e21\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u30e2\u30c7\u30eb\u3092\u8003\u616e\u3057\u3066\u8eca\u304c\u8d70\u884c\u53ef\u80fd\u306a\u8ecc\u9053\u3092\u751f\u6210\u3059\u308b\u3002trajectory \u5185\u306e\u5404\u7d4c\u8def\u70b9\u306e\u4f4d\u7f6e\u59ff\u52e2\u306e\u307f\u8a08\u753b\u3057\u3066\u304a\u308a\u3001\u901f\u5ea6\u3084\u52a0\u901f\u5ea6\u306e\u8a08\u7b97\u306f\u5f8c\u6bb5\u306e\u5225\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u884c\u308f\u308c\u308b\u3002 Inputs / Outputs # input # reference_path [ autoware_planning_msgs/Path ] : Reference path and the corresponding drivable area. objects [ autoware_perception_msgs/DynamicObjectArray ] : Recognized objects around the vehicle output # optimized_trajectory [ autoware_planning_msgs/Trajectory ] : Optimized trajectory that is feasible to drive and collision-free. Flowchart # \u30d5\u30ed\u30fc\u30c1\u30e3\u30fc\u30c8\u3068\u3068\u3082\u306b\u3001\u5404\u6a5f\u80fd\u306e\u6982\u8981\u3092\u304a\u304a\u307e\u304b\u306b\u8aac\u660e\u3059\u308b\u3002 Manage trajectory generation # \u4ee5\u4e0b\u306e\u6761\u4ef6\u306e\u3044\u305a\u308c\u304b\u304c\u6e80\u305f\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u7d4c\u8def\u751f\u6210\u306e\u95a2\u6570\u3092\u547c\u3076\u3002\u305d\u308c\u4ee5\u5916\u306e\u6642\u306f\u524d\u56de\u751f\u6210\u3055\u308c\u305f\u7d4c\u8def\u3092\u51fa\u529b\u3059\u308b\u3002 \u524d\u56de\u7d4c\u8def\u751f\u6210\u6642\u304b\u3089\u4e00\u5b9a\u8ddd\u96e2\u8d70\u884c (default: 10.0 [m]) \u4e00\u5b9a\u6642\u9593\u7d4c\u904e (default: 1.0 [s]) \u30ec\u30fc\u30f3\u30c1\u30a7\u30f3\u30b8\u306a\u3069\u3067\u5165\u529b\u306e path \u306e\u5f62\u72b6\u304c\u5909\u308f\u3063\u305f\u6642 \u81ea\u8eca\u4f4d\u7f6e\u304c\u524d\u56de\u7d4c\u8def\u304b\u3089\u5927\u304d\u304f\u5916\u308c\u305f\u6642 \u5165\u529b\u306e path \u306e\u5f62\u72b6\u304c\u5909\u308f\u3063\u305f\u6642\u3068\u81ea\u8eca\u304c\u524d\u56de\u7d4c\u8def\u304b\u3089\u5927\u304d\u304f\u5916\u308c\u305f\u6642\u306f\u3001\u4fdd\u6301\u3057\u3066\u3044\u308b\u524d\u56de\u7d4c\u8def\u3092\u7834\u68c4\u3059\u308b\u30ea\u30bb\u30c3\u30c8\u6a5f\u80fd\u3082\u3042\u308b\u3002 Select objects to avoid # \u9759\u7684\u3067\u8def\u80a9\u306b\u3042\u308b\u969c\u5bb3\u7269\u306e\u307f\u56de\u907f\u5bfe\u8c61\u3068\u3059\u308b\u3002 \u5177\u4f53\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e 3 \u3064\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3082\u306e\u3067\u3042\u308a\u3001\u56f3\u3067\u793a\u3059\u3068\u8d64\u3044 id: 3, 4, 5 \u306e\u7269\u4f53\u3067\u3042\u308b\u3002 \u6307\u5b9a\u3055\u308c\u305f\u901f\u5ea6\u4ee5\u4e0b (default: 0.1 [m/s]) \u7269\u4f53\u91cd\u5fc3\u304c center line \u4e0a\u306b\u5b58\u5728\u3057\u306a\u3044\uff08\u524d\u8eca\u8ffd\u5f93\u306e\u8eca\u3092\u907f\u3051\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\uff09 \u5c11\u306a\u304f\u3068\u3082 1 \u3064\u4ee5\u4e0a\u306e\u7269\u4f53\u5f62\u72b6\u30dd\u30ea\u30b4\u30f3\u70b9\u304c drivable area \u306b\u5b58\u5728\u3059\u308b\u3002 Generate object costmap # \u56de\u907f\u5bfe\u8c61\u3067\u3042\u308b\u969c\u5bb3\u7269\u304b\u3089\u306e\u8ddd\u96e2\u306b\u5fdc\u3058\u305f\u30b3\u30b9\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\u3002 Generate road boundary costmap # \u9053\u8def\u304b\u3089\u306e\u8ddd\u96e2\u306b\u5fdc\u3058\u305f\u30b3\u30b9\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\u3002 \u3053\u308c\u3089\u306e\u30b3\u30b9\u30c8\u30de\u30c3\u30d7\u306f\u5f8c\u6bb5\u306e Optimize trajectory \u306e\u624b\u6cd5\u3067\u3042\u308b Model predictive trajectory \u306e\u969c\u5bb3\u7269\u30fb\u9053\u8def\u5883\u754c\u306b\u885d\u7a81\u3057\u306a\u3044\u5236\u7d04\u6761\u4ef6\u3092\u5b9a\u5f0f\u5316\u3059\u308b\u969b\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002 Smooth path # \u5f8c\u6bb5\u306e\u6700\u9069\u5316\u51e6\u7406\u3067\u66f2\u7387\u306e\u306a\u3081\u3089\u304b\u306a\u53c2\u7167\u7d4c\u8def\u304c\u5fc5\u8981\u3067\u3042\u308b\u305f\u3081\u3001\u6700\u9069\u5316\u524d\u306b path \u3092\u306a\u3081\u3089\u304b\u306b\u3057\u3066 trajectory \u306e\u5f62\u5f0f\u3067\u51fa\u529b\u3059\u308b\u3002 \u3053\u306e\u5e73\u6ed1\u5316\u306f\u969c\u5bb3\u7269\u3092\u8003\u616e\u3057\u306a\u3044\u3002 Optimize trajectory # \u53c2\u7167\u7d4c\u8def\u306b\u57fa\u3065\u3044\u305f\u30d5\u30ec\u30cd\u5ea7\u6a19\u7cfb\u3067\u8eca\u4e21\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u3001\u53ca\u3073\u8ffd\u5f93\u8aa4\u5dee\u3092\u5b9a\u7fa9\u3057\u3001\u4e8c\u6b21\u8a08\u753b\u6cd5\u3092\u7528\u3044\u3066\u8eca\u4e21\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u3084\u969c\u5bb3\u7269\u56de\u907f\u3092\u8003\u616e\u3057\u306a\u304c\u3089\u8ffd\u5f93\u8aa4\u5dee\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306b\u7d4c\u8def\u751f\u6210\u3059\u308b\u3002 \u81ea\u8eca\u8fd1\u508d\u306e\u7d4c\u8def\u306e\u6025\u306a\u5909\u5316\u3092\u9632\u3050\u305f\u3081\u3001\u76f4\u8fd1\u306e\u7d4c\u8def\u306f\u524d\u56de\u306e\u7d4c\u8def\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3059\u308b\u3002 \u8a08\u7b97\u30b3\u30b9\u30c8\u3092\u6291\u3048\u308b\u305f\u3081\u3001\u6700\u7d42\u7684\u306b\u51fa\u529b\u3059\u308b\u7d4c\u8def\u9577\u3088\u308a\u3082\u77ed\u3044\u8ddd\u96e2\u306b\u5bfe\u3057\u3066\u306e\u307f\u8a08\u7b97\u3092\u884c\u3046\u3002 Extend trajectory # \u7d4c\u8def\u3092\u898f\u5b9a\u306e\u9577\u3055\uff08default: 200m\uff09\u306b\u62e1\u5f35\u3059\u308b\u305f\u3081\u3001\u6700\u9069\u5316\u3057\u305f\u7d4c\u8def\u306e\u5148\u3092 Reference \u7d4c\u8def\u3068\u63a5\u7d9a\u3059\u308b\u3002 Check drivable area # \u751f\u6210\u3055\u308c\u305f\u7d4c\u8def\u304c\u8d70\u884c\u53ef\u80fd\u9818\u57df\u3092\u9038\u8131\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u524d\u56de\u751f\u6210\u3055\u308c\u305f\u8d70\u884c\u53ef\u80fd\u9818\u57df\u5185\u306b\u3042\u308b\u7d4c\u8def\u3092\u51fa\u529b\u3059\u308b\u3002 Rationale \u73fe\u5728\u306e\u8a2d\u8a08\u306b\u304a\u3044\u3066\u3001\u6570\u5024\u8aa4\u5dee\u306b\u3088\u308b\u7834\u7dbb\u3092\u9632\u3050\u305f\u3081\u306b\u969c\u5bb3\u7269\u56de\u907f\u306f\u5168\u3066\u30bd\u30d5\u30c8\u5236\u7d04\u3068\u3057\u3066\u8003\u616e\u3055\u308c\u3066\u304a\u308a\u3001\u751f\u6210\u3055\u308c\u305f\u7d4c\u8def\u306b\u7f6e\u3044\u3066\u8eca\u4e21\u304c\u8d70\u884c\u53ef\u80fd\u9818\u57df\u5185\u306b\u5165\u3063\u3066\u3044\u308b\u304b\u306e\u5224\u5b9a\u304c\u5fc5\u8981\u3002 Apply path velocity # \u5165\u529b\u306e path \u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u901f\u5ea6\u3092\u51fa\u529b\u3055\u308c\u308b trajectory \u306b\u57cb\u3081\u8fbc\u3080\u3002\u7d4c\u8def\u9593\u9694\u304c\u7570\u306a\u308b\u305f\u3081\u7dda\u5f62\u88dc\u9593\u3092\u7528\u3044\u308b\u3002 Algorithms # Smooth path \u3067\u4f7f\u308f\u308c\u3066\u3044\u308b Elastic band \u3068\u3001Optimized trajectory \u3067\u4f7f\u308f\u308c\u3066\u3044\u308b Model predictive trajectory \u306e\u8a73\u7d30\u306a\u8aac\u660e\u3092\u3059\u308b\u3002 Elastic band # \u6982\u8981 # behavior_path_planner \u3067\u8a08\u7b97\u3055\u308c\u305f path \u306f\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u306a\u3081\u3089\u304b\u3067\u306f\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u306e path \u306e\u5e73\u6ed1\u5316\u3092\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3042\u308b\u3002 \u6b21\u306e Model predictive trajectory \u3067\u3082\u5e73\u6ed1\u5316\u9805\u306f\u5165\u3063\u3066\u3044\u308b\u304c\u3001\u76ee\u6a19\u7d4c\u8def\u306b\u306a\u308b\u3079\u304f\u8ffd\u5f93\u3057\u3088\u3046\u3068\u3059\u308b\u9805\u3082\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u76ee\u6a19\u7d4c\u8def\u304c\u306a\u3081\u3089\u304b\u3067\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3053\u306e 2 \u3064\u306e\u9805\u304c\u53cd\u767a\u3059\u308b\u3002 \u305d\u308c\u3092\u9632\u3050\u305f\u3081\u306b\u3053\u3053\u3067\u5e73\u6ed1\u5316\u306e\u307f\u3092\u884c\u3063\u3066\u3044\u308b\u3002 \u307e\u305f Model predictive trajectory \u3067\u306f\u5404\u70b9\u306b\u304a\u3051\u308b\u66f2\u7387\u3068\u6cd5\u7dda\u3092\u5143\u306b\u6700\u9069\u5316\u3057\u3066\u304a\u308a\u3001\u5e73\u6ed1\u5316\u3055\u308c\u305f\u76ee\u6a19\u7d4c\u8def\u3092\u6e21\u3059\u3053\u3068\u3067\u6700\u9069\u5316\u306e\u7d50\u679c\u3092\u5b89\u5b9a\u3055\u305b\u308b\u72d9\u3044\u3082\u3042\u308b\u3002 \u5e73\u6ed1\u5316\u306e\u969b\u3001\u969c\u5bb3\u7269\u3084\u9053\u8def\u58c1\u3092\u8003\u616e\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u969c\u5bb3\u7269\u3084\u9053\u8def\u58c1\u306b\u885d\u7a81\u3057\u305f trajectory \u304c\u8a08\u7b97\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u3002 \u3053\u306e Elastic band \u3068\u6b21\u306e Model predictive trajectory \u306f\u3001\u8a08\u7b97\u8ca0\u8377\u3092\u6291\u3048\u308b\u305f\u3081\u306b\u3042\u308b\u7a0b\u5ea6\u306e\u9577\u3055\u3067\u30af\u30ea\u30c3\u30d7\u3057\u305f trajectory \u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002 \u6570\u5f0f # \u524d\u5f8c\u306e\u70b9\u304b\u3089\u306e\u8ddd\u96e2\u306e\u5dee\u306e\u4e8c\u4e57\u3092\u76ee\u7684\u95a2\u6570\u3068\u3059\u308b\u4e8c\u6b21\u8a08\u753b\u3002 \u5404\u70b9\u306f\u4e00\u5b9a\u306e\u7bc4\u56f2\u4ee5\u5185\u3057\u304b\u52d5\u304b\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u3092\u8a2d\u3051\u308b\u3053\u3068\u3067\u3001\u5165\u529b\u306e\u8ecc\u9053\u3092\u3088\u308a\u306a\u3081\u3089\u304b\u306b\u3057\u305f\u8ecc\u9053\u3092\u5f97\u308b\u3002 \\boldsymbol{p}_k \\boldsymbol{p}_k \u3092 k k \u756a\u76ee\u306e\u7d4c\u8def\u70b9\u306e\u5ea7\u6a19\u3068\u3068\u3057\u305f\u3068\u304d\u4ee5\u4e0b\u306e\u30b3\u30b9\u30c8\u95a2\u6570\u3092\u6700\u5c0f\u5316\u3059\u308b\u4e8c\u6b21\u8a08\u753b\u3092\u89e3\u304f\u3002\u3053\u3053\u3067\u306f\u59cb\u70b9\u3068\u7d42\u70b9\u3067\u3042\u308b \\boldsymbol{p}_0 \\boldsymbol{p}_0 \u3068 \\boldsymbol{p}_n \\boldsymbol{p}_n \u306f\u56fa\u5b9a\u3067\u3042\u308b\u3002 \\min \\sum_{k=1}^{n-1} |\\boldsymbol{p}_{k+1} - \\boldsymbol{p}_{k}| - |\\boldsymbol{p}_{k} - \\boldsymbol{p}_{k-1}| \\min \\sum_{k=1}^{n-1} |\\boldsymbol{p}_{k+1} - \\boldsymbol{p}_{k}| - |\\boldsymbol{p}_{k} - \\boldsymbol{p}_{k-1}| Model predictive trajectory # \u6982\u8981 # Elastic band \u3067\u5e73\u6ed1\u5316\u3055\u308c\u305f trajectory \u306b\u5bfe\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u4fee\u6b63\u3092\u884c\u3046\u3053\u3068\u304c\u76ee\u7684\u3067\u3042\u308b\u3002 \u7dda\u5f62\u5316\u3055\u308c\u305f\u8eca\u4e21\u306e\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u30e2\u30c7\u30eb\u306b\u57fa\u3065\u304d\u8d70\u884c\u53ef\u80fd\u3067\u3042\u308b \u969c\u5bb3\u7269\u3084\u9053\u8def\u58c1\u9762\u306b\u885d\u7a81\u3057\u306a\u3044 \u969c\u5bb3\u7269\u3084\u9053\u8def\u58c1\u9762\u306b\u885d\u7a81\u3057\u306a\u3044\u6761\u4ef6\u306f\u30cf\u30fc\u30c9\u3067\u306f\u306a\u304f\u30bd\u30d5\u30c8\u5236\u7d04\u3068\u3057\u3066\u542b\u307e\u308c\u3066\u3044\u308b\u3002\u8eca\u4e21\u306e\u5f8c\u8f2a\u4f4d\u7f6e\u3001\u524d\u8f2a\u4f4d\u7f6e\u3001\u305d\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306b\u304a\u3044\u3066\u969c\u5bb3\u7269\u30fb\u9053\u8def\u5883\u754c\u3068\u306e\u8ddd\u96e2\u304b\u3089\u5236\u7d04\u6761\u4ef6\u304c\u8a08\u7b97\u3055\u308c\u3066\u3044\u308b\u3002 \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u89e3\u304c\u51fa\u529b\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u5f8c\u6bb5\u306e\u5f8c\u51e6\u7406\u3067\u5f3e\u304b\u308c\u3001\u524d\u306e\u5468\u671f\u3067\u8a08\u753b\u3055\u308c\u305f trajectory \u3092\u51fa\u529b\u3059\u308b\u3002 \u81ea\u8eca\u4ed8\u8fd1\u306e\u7d4c\u8def\u304c\u632f\u52d5\u3057\u306a\u3044\u3088\u3046\u306b\u3001\u81ea\u8eca\u8fd1\u508d\u306e\u7d4c\u8def\u70b9\u3092\u524d\u56de\u306e\u7d4c\u8def\u70b9\u3068\u4e00\u81f4\u3055\u305b\u308b\u5236\u7d04\u6761\u4ef6\u3082\u542b\u307e\u308c\u3066\u304a\u308a\u3001\u3053\u308c\u304c\u552f\u4e00\u306e\u4e8c\u6b21\u8a08\u753b\u6cd5\u306e\u30cf\u30fc\u30c9\u5236\u7d04\u3067\u3042\u308b\u3002 \u6570\u5f0f # \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u7d4c\u8def\u306b\u5bfe\u3057\u3066\u8eca\u4e21\u304c\u8ffd\u5f93\u3059\u308b\u3068\u304d\u306e bicycle kinematics model \u3092\u8003\u3048\u308b\u3002 \u6642\u523b k k \u306b\u304a\u3051\u308b\u3001\u7d4c\u8def\u4e0a\u306e\u8eca\u4e21\u306e\u6700\u8fd1\u508d\u70b9\u306e\u5ea7\u6a19( x x \u5ea7\u6a19\u306f\u7d4c\u8def\u306e\u63a5\u7dda\u306b\u5e73\u884c)\u304b\u3089\u898b\u305f\u8ffd\u5f93\u8aa4\u5dee\u306b\u95a2\u3057\u3066\u3001\u6a2a\u504f\u5dee y_k y_k \u3001\u5411\u304d\u306e\u504f\u5dee \\theta_k \\theta_k \u3001\u30b9\u30c6\u30a2\u89d2 \\delta_k \\delta_k \u3068\u5b9a\u3081\u308b\u3002 \u6307\u4ee4\u30b9\u30c6\u30a2\u89d2\u5ea6\u3092 \\delta_{des, k} \\delta_{des, k} \u3068\u3059\u308b\u3068\u3001\u30b9\u30c6\u30a2\u89d2\u306e\u9045\u5ef6\u3092\u8003\u616e\u3057\u305f\u8eca\u4e21\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u30e2\u30c7\u30eb\u306f\u4ee5\u4e0b\u3067\u8868\u3055\u308c\u308b\u3002\u3053\u306e\u6642\u3001\u30b9\u30c6\u30a2\u89d2 \\delta_k \\delta_k \u306f\u4e00\u6b21\u9045\u308c\u7cfb\u3068\u3057\u3066\u6307\u4ee4\u30b9\u30c6\u30a2\u89d2\u306b\u8ffd\u5f93\u3059\u308b\u3068\u4eee\u5b9a\u3059\u308b\u3002 \\begin{align} y_{k+1} & = y_{k} + v \\sin \\theta_k dt \\\\ \\theta_{k+1} & = \\theta_k + \\frac{v \\tan \\delta_k}{L}dt - \\kappa_k v \\cos \\theta_k dt \\\\ \\delta_{k+1} & = \\delta_k - \\frac{\\delta_k - \\delta_{des,k}}{\\tau}dt \\end{align} \\begin{align} y_{k+1} & = y_{k} + v \\sin \\theta_k dt \\\\ \\theta_{k+1} & = \\theta_k + \\frac{v \\tan \\delta_k}{L}dt - \\kappa_k v \\cos \\theta_k dt \\\\ \\delta_{k+1} & = \\delta_k - \\frac{\\delta_k - \\delta_{des,k}}{\\tau}dt \\end{align} \u6b21\u306b\u3053\u308c\u3089\u306e\u5f0f\u3092\u7dda\u5f62\u5316\u3059\u308b\u3002 y_k y_k , \\theta_k \\theta_k \u306f\u8ffd\u5f93\u8aa4\u5dee\u3067\u3042\u308b\u305f\u3081\u5fae\u5c0f\u8fd1\u4f3c\u3067\u304d\u3001 \\sin \\theta_k \\approx \\theta_k \\sin \\theta_k \\approx \\theta_k \u3068\u306a\u308b\u3002 \\delta_k \\delta_k \u306b\u95a2\u3057\u3066\u306f\u30b9\u30c6\u30a2\u89d2\u3067\u3042\u308b\u305f\u3081\u5fae\u5c0f\u3068\u307f\u306a\u305b\u306a\u3044\u3002\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u53c2\u7167\u7d4c\u8def\u306e\u66f2\u7387 \\kappa_k \\kappa_k \u304b\u3089\u8a08\u7b97\u3055\u308c\u308b\u30b9\u30c6\u30a2\u89d2 \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u308a\u3001 \\delta_k \\delta_k \u3092\u5fae\u5c0f\u306a\u5024 \\Delta \\delta_k \\Delta \\delta_k \u3067\u8868\u3059\u3002 \u3053\u3053\u3067\u6ce8\u610f\u3059\u3079\u304d\u3053\u3068\u3068\u3057\u3066\u306f\u3001 \\delta_k \\delta_k \u306f\u6700\u5927\u30b9\u30c6\u30a2\u89d2\u5ea6 \\delta_{\\max} \\delta_{\\max} \u4ee5\u5185\u306e\u5024\u3092\u53d6\u308b\u3002\u66f2\u7387 \\kappa_k \\kappa_k \u304b\u3089\u8a08\u7b97\u3055\u308c\u305f \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u304c\u6700\u5927\u30b9\u30c6\u30a2\u89d2\u5ea6 \\delta_{\\max} \\delta_{\\max} \u3088\u308a\u5927\u304d\u3044\u3068\u304d\u306b \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3057\u3066\u7dda\u5f62\u5316\u3059\u308b\u3068\u3001 \\Delta \\delta_k = \\delta - \\delta_{\\mathrm{ref}, k} = \\delta_{\\max} - \\delta_{\\mathrm{ref}, k} \\Delta \\delta_k = \\delta - \\delta_{\\mathrm{ref}, k} = \\delta_{\\max} - \\delta_{\\mathrm{ref}, k} \u3068\u306a\u308a\u3001 \\Delta \\delta_k \\Delta \\delta_k \u306e\u7d76\u5bfe\u5024\u304c\u5927\u304d\u304f\u306a\u308b\u3002\u3059\u306a\u308f\u3061\u3001 \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u306b\u3082\u6700\u5927\u30b9\u30c6\u30a2\u89d2\u5ea6\u5236\u9650\u3092\u9069\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \\begin{align} \\delta_{\\mathrm{ref}, k} & = \\mathrm{clamp}(\\arctan(L \\kappa_k), -\\delta_{\\max}, \\delta_{\\max}) \\\\ \\delta_k & = \\delta_{\\mathrm{ref}, k} + \\Delta \\delta_k, \\ \\Delta \\delta_k \\ll 1 \\\\ \\end{align} \\begin{align} \\delta_{\\mathrm{ref}, k} & = \\mathrm{clamp}(\\arctan(L \\kappa_k), -\\delta_{\\max}, \\delta_{\\max}) \\\\ \\delta_k & = \\delta_{\\mathrm{ref}, k} + \\Delta \\delta_k, \\ \\Delta \\delta_k \\ll 1 \\\\ \\end{align} \\mathrm{clamp}(v, v_{\\min}, v_{\\max}) \\mathrm{clamp}(v, v_{\\min}, v_{\\max}) \u306f v v \u3092 v_{\\min} v_{\\min} \u304b\u3089 v_{\\max} v_{\\max} \u306e\u7bc4\u56f2\u5185\u306b\u4e38\u3081\u308b\u95a2\u6570\u3067\u3042\u308b\u3002 \u3053\u306e \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u3092\u4ecb\u3057\u3066 \\tan \\delta_k \\tan \\delta_k \u3092\u7dda\u5f62\u306a\u5f0f\u3067\u8fd1\u4f3c\u3059\u308b\u3002 \\begin{align} \\tan \\delta_k & \\approx \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} \\Delta \\delta_k \\\\ & = \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} (\\delta_{\\mathrm{ref}, k} - \\delta_k) \\\\ & = \\tan \\delta_{\\mathrm{ref}, k} - \\frac{\\delta_{\\mathrm{ref}, k}}{\\cos^2 \\delta_{\\mathrm{ref}, k}} + \\frac{1}{\\cos^2 \\delta_{\\mathrm{ref}, k}} \\delta_k \\end{align} \\begin{align} \\tan \\delta_k & \\approx \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} \\Delta \\delta_k \\\\ & = \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} (\\delta_{\\mathrm{ref}, k} - \\delta_k) \\\\ & = \\tan \\delta_{\\mathrm{ref}, k} - \\frac{\\delta_{\\mathrm{ref}, k}}{\\cos^2 \\delta_{\\mathrm{ref}, k}} + \\frac{1}{\\cos^2 \\delta_{\\mathrm{ref}, k}} \\delta_k \\end{align} \u4ee5\u4e0a\u306e\u7dda\u5f62\u5316\u3092\u8e0f\u307e\u3048\u3001\u8aa4\u5dee\u30c0\u30a4\u30ca\u30df\u30af\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7dda\u5f62\u306a\u884c\u5217\u6f14\u7b97\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3002 \\begin{align} \\begin{pmatrix} y_{k+1} \\\\ \\theta_{k+1} \\\\ \\delta_{k+1} \\end{pmatrix} = \\begin{pmatrix} 1 & v dt & 0 \\\\ 0 & 1 & \\frac{v dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} \\\\ 0 & 0 & 1 - \\frac{dt}{\\tau} \\end{pmatrix} \\begin{pmatrix} y_k \\\\ \\theta_k \\\\ \\delta_k \\end{pmatrix} + \\begin{pmatrix} 0 \\\\ 0 \\\\ \\frac{dt}{\\tau} \\end{pmatrix} \\delta_{des} + \\begin{pmatrix} 0 \\\\ \\frac{v \\tan(\\delta_{\\mathrm{ref}, k}) dt}{L} - \\frac{v \\delta_{\\mathrm{ref}, k} dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} - \\kappa_k v dt\\\\ 0 \\end{pmatrix} \\end{align} \\begin{align} \\begin{pmatrix} y_{k+1} \\\\ \\theta_{k+1} \\\\ \\delta_{k+1} \\end{pmatrix} = \\begin{pmatrix} 1 & v dt & 0 \\\\ 0 & 1 & \\frac{v dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} \\\\ 0 & 0 & 1 - \\frac{dt}{\\tau} \\end{pmatrix} \\begin{pmatrix} y_k \\\\ \\theta_k \\\\ \\delta_k \\end{pmatrix} + \\begin{pmatrix} 0 \\\\ 0 \\\\ \\frac{dt}{\\tau} \\end{pmatrix} \\delta_{des} + \\begin{pmatrix} 0 \\\\ \\frac{v \\tan(\\delta_{\\mathrm{ref}, k}) dt}{L} - \\frac{v \\delta_{\\mathrm{ref}, k} dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} - \\kappa_k v dt\\\\ 0 \\end{pmatrix} \\end{align} \u5e73\u6ed1\u5316\u3068\u7d4c\u8def\u8ffd\u5f93\u306e\u305f\u3081\u306e\u76ee\u7684\u95a2\u6570\u306f\u4ee5\u4e0b\u3067\u8868\u3055\u308c\u3001 \\begin{align} J_1 & (y_{0...N-1}, \\theta_{0...N-1}, \\delta_{0...N-1}) \\\\ & = w_y \\sum_{k} y_k^2 + w_{\\theta} \\sum_{k} \\theta_k^2 + w_{\\delta} \\sum_k \\delta_k^2 + w_{\\dot{\\delta}} \\sum_k \\dot{\\delta}_k^2 + w_{\\ddot{\\delta}} \\sum_k \\ddot{\\delta}_k^2 \\end{align} \\begin{align} J_1 & (y_{0...N-1}, \\theta_{0...N-1}, \\delta_{0...N-1}) \\\\ & = w_y \\sum_{k} y_k^2 + w_{\\theta} \\sum_{k} \\theta_k^2 + w_{\\delta} \\sum_k \\delta_k^2 + w_{\\dot{\\delta}} \\sum_k \\dot{\\delta}_k^2 + w_{\\ddot{\\delta}} \\sum_k \\ddot{\\delta}_k^2 \\end{align} \u524d\u8ff0\u306e\u901a\u308a\u3001\u8eca\u4e21\u304c\u969c\u5bb3\u7269\u30fb\u9053\u8def\u5883\u754c\u306b\u4fb5\u5165\u3057\u306a\u3044\u6761\u4ef6\u306f\u30b9\u30e9\u30c3\u30af\u5909\u6570\u3092\u7528\u3044\u3066\u30bd\u30d5\u30c8\u5236\u7d04\u3068\u3057\u3066\u8868\u3055\u308c\u3066\u3044\u308b\u3002 \u8eca\u4e21\u306e\u5f8c\u8f2a\u4f4d\u7f6e\u3001\u524d\u8f2a\u4f4d\u7f6e\u3001\u304a\u3088\u3073\u305d\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306b\u304a\u3051\u308b\u969c\u5bb3\u7269\u30fb\u9053\u8def\u5883\u754c\u307e\u3067\u306e\u8ddd\u96e2\u3092\u305d\u308c\u305e\u308c y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} \u3068\u3059\u308b\u3002 \u3053\u3053\u3067\u305d\u308c\u305e\u308c\u306b\u5bfe\u3059\u308b\u30b9\u30e9\u30c3\u30af\u5909\u6570 \\lambda_{\\mathrm{base}}, \\lambda_{\\mathrm{top}}, \\lambda_{\\mathrm{mid}} \\lambda_{\\mathrm{base}}, \\lambda_{\\mathrm{top}}, \\lambda_{\\mathrm{mid}} \u3092\u5b9a\u7fa9\u3057\u3001 y_{\\mathrm{base}, k, \\min} - \\lambda_{\\mathrm{base}, k} \\leq y_{\\mathrm{base}, k} (y_k) \\leq y_{\\mathrm{base}, k, \\max} + \\lambda_{\\mathrm{base}, k}\\\\ y_{\\mathrm{top}, k, \\min} - \\lambda_{\\mathrm{top}, k} \\leq y_{\\mathrm{top}, k} (y_k) \\leq y_{\\mathrm{top}, k, \\max} + \\lambda_{\\mathrm{top}, k}\\\\ y_{\\mathrm{mid}, k, \\min} - \\lambda_{\\mathrm{mid}, k} \\leq y_{\\mathrm{mid}, k} (y_k) \\leq y_{\\mathrm{mid}, k, \\max} + \\lambda_{\\mathrm{mid}, k} y_{\\mathrm{base}, k, \\min} - \\lambda_{\\mathrm{base}, k} \\leq y_{\\mathrm{base}, k} (y_k) \\leq y_{\\mathrm{base}, k, \\max} + \\lambda_{\\mathrm{base}, k}\\\\ y_{\\mathrm{top}, k, \\min} - \\lambda_{\\mathrm{top}, k} \\leq y_{\\mathrm{top}, k} (y_k) \\leq y_{\\mathrm{top}, k, \\max} + \\lambda_{\\mathrm{top}, k}\\\\ y_{\\mathrm{mid}, k, \\min} - \\lambda_{\\mathrm{mid}, k} \\leq y_{\\mathrm{mid}, k} (y_k) \\leq y_{\\mathrm{mid}, k, \\max} + \\lambda_{\\mathrm{mid}, k} y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} \u306f y_k y_k \u306e 1 \u6b21\u5f0f\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u306e\u30bd\u30d5\u30c8\u5236\u7d04\u306e\u76ee\u7684\u95a2\u6570\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3002 \\begin{align} J_2 & (\\lambda_{\\mathrm{base}, 0...N-1}, \\lambda_{\\mathrm{mid}, 0...N-1}, \\lambda_{\\mathrm{top}, 0...N-1}) \\\\ & = w_{\\mathrm{base}} \\sum_{k} \\lambda_{\\mathrm{base}, k}^2 + w_{\\mathrm{mid}} \\sum_k \\lambda_{\\mathrm{mid}, k}^2 + w_{\\mathrm{top}} \\sum_k \\lambda_{\\mathrm{top}, k}^2 \\end{align} \\begin{align} J_2 & (\\lambda_{\\mathrm{base}, 0...N-1}, \\lambda_{\\mathrm{mid}, 0...N-1}, \\lambda_{\\mathrm{top}, 0...N-1}) \\\\ & = w_{\\mathrm{base}} \\sum_{k} \\lambda_{\\mathrm{base}, k}^2 + w_{\\mathrm{mid}} \\sum_k \\lambda_{\\mathrm{mid}, k}^2 + w_{\\mathrm{top}} \\sum_k \\lambda_{\\mathrm{top}, k}^2 \\end{align} \u30b9\u30e9\u30c3\u30af\u5909\u6570\u3082\u4e8c\u6b21\u8a08\u753b\u6cd5\u306e\u8a2d\u8a08\u5909\u6570\u3068\u306a\u308a\u3001\u5168\u3066\u306e\u8a2d\u8a08\u5909\u6570\u3092\u307e\u3068\u3081\u305f\u30d9\u30af\u30c8\u30eb \\boldsymbol{x} \\boldsymbol{x} \u3092\u5b9a\u7fa9\u3059\u308b\u3002 \\begin{align} \\boldsymbol{x} = \\begin{pmatrix} ... & y_k & \\lambda_{\\mathrm{base}, k} & \\lambda_{\\mathrm{top}, k} & \\lambda_{\\mathrm{mid}, k} & ... \\end{pmatrix}^T \\end{align} \\begin{align} \\boldsymbol{x} = \\begin{pmatrix} ... & y_k & \\lambda_{\\mathrm{base}, k} & \\lambda_{\\mathrm{top}, k} & \\lambda_{\\mathrm{mid}, k} & ... \\end{pmatrix}^T \\end{align} \u3053\u308c\u3089\u306e 2 \u3064\u306e\u76ee\u7684\u95a2\u6570\u306e\u548c\u3092\u76ee\u7684\u95a2\u6570\u3068\u3059\u308b\u3002 \\begin{align} \\min_{\\boldsymbol{x}} J (\\boldsymbol{x}) = \\min_{\\boldsymbol{x}} J_1 & (y_{0...N-1}, \\theta_{0...N-1}, \\delta_{0...N-1}) + J_2 (\\lambda_{\\mathrm{base}, 0...N-1}, \\lambda_{\\mathrm{mid}, 0...N-1}, \\lambda_{\\mathrm{top}, 0...N-1}) \\end{align} \\begin{align} \\min_{\\boldsymbol{x}} J (\\boldsymbol{x}) = \\min_{\\boldsymbol{x}} J_1 & (y_{0...N-1}, \\theta_{0...N-1}, \\delta_{0...N-1}) + J_2 (\\lambda_{\\mathrm{base}, 0...N-1}, \\lambda_{\\mathrm{mid}, 0...N-1}, \\lambda_{\\mathrm{top}, 0...N-1}) \\end{align} \u524d\u8ff0\u306e\u901a\u308a\u3001\u771f\u306b\u30cf\u30fc\u30c9\u306a\u5236\u7d04\u6761\u4ef6\u306f\u8eca\u4e21\u524d\u65b9\u3042\u308b\u7a0b\u5ea6\u306e\u8ddd\u96e2 N_{fix} N_{fix} \u307e\u3067\u306e\u7d4c\u8def\u70b9\u306e\u72b6\u614b\u306f\u524d\u56de\u5024\u306b\u306a\u308b\u3088\u3046\u306a\u6761\u4ef6\u3067\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3002 \\begin{align} \\delta_k = \\delta_{k}^{\\mathrm{prev}} (0 \\leq i \\leq N_{\\mathrm{fix}}) \\end{align} \\begin{align} \\delta_k = \\delta_{k}^{\\mathrm{prev}} (0 \\leq i \\leq N_{\\mathrm{fix}}) \\end{align} \u3067\u3042\u308a\u3001\u3053\u308c\u3089\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e8c\u6b21\u8a08\u753b\u6cd5\u306e\u4fc2\u6570\u884c\u5217\u306b\u5909\u63db\u3057\u3066\u4e8c\u6b21\u8a08\u753b\u6cd5\u3092\u89e3\u304f \\begin{align} \\min_{\\boldsymbol{x}} \\ & \\frac{1}{2} \\boldsymbol{x}^T \\boldsymbol{P} \\boldsymbol{x} + \\boldsymbol{q} \\boldsymbol{x} \\\\ \\mathrm{s.t.} \\ & \\boldsymbol{b}_l \\leq \\boldsymbol{A} \\boldsymbol{x} \\leq \\boldsymbol{b}_u \\end{align} \\begin{align} \\min_{\\boldsymbol{x}} \\ & \\frac{1}{2} \\boldsymbol{x}^T \\boldsymbol{P} \\boldsymbol{x} + \\boldsymbol{q} \\boldsymbol{x} \\\\ \\mathrm{s.t.} \\ & \\boldsymbol{b}_l \\leq \\boldsymbol{A} \\boldsymbol{x} \\leq \\boldsymbol{b}_u \\end{align} Limitation # \u30ab\u30fc\u30d6\u6642\u306b\u5916\u5074\u306b\u81a8\u3089\u3093\u3060\u7d4c\u8def\u3092\u8fd4\u3059 behavior_path_planner \u3068 obstacle_avoidance_planner \u306e\u7d4c\u8def\u8a08\u753b\u306e\u5f79\u5272\u5206\u62c5\u304c\u306f\u3063\u304d\u308a\u3068\u6c7a\u307e\u3063\u3066\u3044\u306a\u3044 behavior_path_planner \u5074\u3067\u56de\u907f\u3059\u308b\u5834\u5408\u3068\u3001obstacle_avoidance_planner \u3067\u56de\u907f\u3059\u308b\u5834\u5408\u304c\u3042\u308b behavior_path_planner \u304b\u3089\u6765\u308b path \u304c\u9053\u8def\u58c1\u306b\u885d\u7a81\u3057\u3066\u3044\u308b\u3068\u3001\u5927\u304d\u304f\u5916\u5074\u306b\u81a8\u308c\u305f trajectory \u3092\u8a08\u753b\u3059\u308b (\u67cf\u306e\u8449\u306e\u30ab\u30fc\u30d6\u3067\u9855\u8457) \u8a08\u7b97\u8ca0\u8377\u304c\u9ad8\u3044 How to debug # obstacle_avoidance_planner` \u304b\u3089\u51fa\u529b\u3055\u308c\u308b debug \u7528\u306e topic \u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002 interpolated_points_marker obstacle avoidance planner \u3078\u306e\u5165\u529b\u7d4c\u8def\u3092\u30ea\u30b5\u30f3\u30d7\u30eb\u3057\u305f\u3082\u306e\u3002\u3053\u306e\u7d4c\u8def\u304c\u9053\u8def\u5185\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u304b\uff08\u9053\u8def\u5185\u306b\u3042\u308b\u3053\u3068\u304c\u5fc5\u9808\u3067\u306f\u306a\u3044\uff09\u3001\u5341\u5206\u306b\u306a\u3081\u3089\u304b\u304b\uff08\u3042\u308b\u7a0b\u5ea6\u6ed1\u3089\u304b\u3067\u306a\u3044\u3068\u30ed\u30b8\u30c3\u30af\u304c\u7834\u7dbb\u3059\u308b\uff09\u3001\u306a\u3069\u3092\u78ba\u8a8d\u3059\u308b\u3002 smoothed_points_text Elastic Band \u306e\u8a08\u7b97\u7d50\u679c\u3002\u70b9\u7fa4\u3067\u306f\u306a\u304f\u5c0f\u3055\u3044\u6570\u5b57\u304c\u63cf\u753b\u3055\u308c\u308b\u3002\u5e73\u6ed1\u5316\u3055\u308c\u305f\u3053\u306e\u7d4c\u8def\u304c\u9053\u8def\u5185\u304b\u3089\u306f\u307f\u51fa\u3066\u3044\u306a\u3044\u304b\u3001\u6b6a\u3093\u3067\u3044\u306a\u3044\u304b\u306a\u3069\u3092\u78ba\u8a8d\u3002 (base/top/mid)_bounds_line \u58c1\u3068\u306e\u885d\u7a81\u5224\u5b9a\u306b\u304a\u3051\u308b\u6a2a\u65b9\u5411\u306e\u9053\u8def\u5883\u754c\u307e\u3067\u306e\u8ddd\u96e2\uff08\u6b63\u78ba\u306b\u306f - vehicle_width / 2.0\uff09\u3002 \u8eca\u4e21\u306e 3 \u7b87\u6240\uff08base, top, mid\uff09\u3067\u885d\u7a81\u5224\u5b9a\u3092\u884c\u3063\u3066\u304a\u308a\u30013 \u3064\u306e\u30de\u30fc\u30ab\u30fc\u304c\u5b58\u5728\u3059\u308b\u3002 \u9ec4\u8272\u3044\u7dda\u306e\u5404\u7aef\u70b9\u304b\u3089\u9053\u8def\u5883\u754c\u307e\u3067\u306e\u8ddd\u96e2\u304c\u8eca\u5e45\u306e\u534a\u5206\u304f\u3089\u3044\u3067\u3042\u308c\u3070\u7570\u5e38\u306a\u3057\uff08\u3053\u3053\u304c\u304a\u304b\u3057\u3044\u5834\u5408\u306f\u30ed\u30b8\u30c3\u30af\u7570\u5e38\uff09\u3002 optimized_points_marker MPT \u306e\u8a08\u7b97\u7d50\u679c\u3002\u9053\u8def\u304b\u3089\u306f\u307f\u51fa\u3066\u3044\u306a\u3044\u304b\u3001\u632f\u52d5\u3057\u3066\u3044\u306a\u3044\u304b\u306a\u3069\u3092\u78ba\u8a8d Trajectory with footprint TrajectoryFootprint \u306e rviz_plugin \u3092\u7528\u3044\u3066\u7d4c\u8def\u4e0a\u306e footprint \u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\u3053\u308c\u3092\u7528\u3044\u3066 obstacle_avoidance_planner \u3078\u306e\u5165\u51fa\u529b\u306e footprint\u3001\u7d4c\u8def\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u7b49\u3092\u78ba\u8a8d\u3059\u308b\u3002 Drivable Area obstacle avoidance \u3078\u306e\u5165\u529b\u306e\u8d70\u884c\u53ef\u80fd\u9818\u57df\u3092\u8868\u793a\u3059\u308b\u3002Drivable Area \u306e\u751f\u6210\u306b\u4e0d\u5177\u5408\u304c\u3042\u308b\u3068\u751f\u6210\u7d4c\u8def\u304c\u6b6a\u3080\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 topic \u540d\uff1a /planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/debug/drivable_area nav_msgs/msg/OccupancyGrid \u578b\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b area_with_objects \u5165\u529b\u3055\u308c\u305f\u8d70\u884c\u53ef\u80fd\u9818\u57df\u304b\u3089\u969c\u5bb3\u7269\u3092\u53d6\u308a\u9664\u3044\u305f\u5f8c\u306e\u3001\u8d70\u884c\u53ef\u80fd\u9818\u57df nav_msgs/msg/OccupancyGrid \u578b\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b object_clearance_map \u56de\u907f\u5bfe\u8c61\u306e\u969c\u5bb3\u7269\u304b\u3089\u306e\u8ddd\u96e2\u3092\u53ef\u8996\u5316\u3057\u305f\u3082\u306e\u3002 nav_msgs/msg/OccupancyGrid \u578b\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b clearance_map \u5165\u529b\u3055\u308c\u305f\u8d70\u884c\u53ef\u80fd\u9818\u57df\u304b\u3089\u306e\u8ddd\u96e2\u3092\u53ef\u8996\u5316\u3057\u305f\u3082\u306e\u3002 nav_msgs/msg/OccupancyGrid \u578b\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b","title":"Obstacle Avoidance Planner"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#obstacle-avoidance-planner","text":"","title":"Obstacle Avoidance Planner"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#purpose","text":"obstacle_avoidance_planner \u306f\u5165\u529b\u3055\u308c\u305f path \u3068 drivable area\u3001\u304a\u3088\u3073\u52d5\u7269\u4f53\u60c5\u5831\u3092\u3082\u3068\u306b\u3001\u8eca\u4e21\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u30e2\u30c7\u30eb\u3092\u8003\u616e\u3057\u3066\u8eca\u304c\u8d70\u884c\u53ef\u80fd\u306a\u8ecc\u9053\u3092\u751f\u6210\u3059\u308b\u3002trajectory \u5185\u306e\u5404\u7d4c\u8def\u70b9\u306e\u4f4d\u7f6e\u59ff\u52e2\u306e\u307f\u8a08\u753b\u3057\u3066\u304a\u308a\u3001\u901f\u5ea6\u3084\u52a0\u901f\u5ea6\u306e\u8a08\u7b97\u306f\u5f8c\u6bb5\u306e\u5225\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u884c\u308f\u308c\u308b\u3002","title":"Purpose"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#input","text":"reference_path [ autoware_planning_msgs/Path ] : Reference path and the corresponding drivable area. objects [ autoware_perception_msgs/DynamicObjectArray ] : Recognized objects around the vehicle","title":"input"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#output","text":"optimized_trajectory [ autoware_planning_msgs/Trajectory ] : Optimized trajectory that is feasible to drive and collision-free.","title":"output"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#flowchart","text":"\u30d5\u30ed\u30fc\u30c1\u30e3\u30fc\u30c8\u3068\u3068\u3082\u306b\u3001\u5404\u6a5f\u80fd\u306e\u6982\u8981\u3092\u304a\u304a\u307e\u304b\u306b\u8aac\u660e\u3059\u308b\u3002","title":"Flowchart"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#manage-trajectory-generation","text":"\u4ee5\u4e0b\u306e\u6761\u4ef6\u306e\u3044\u305a\u308c\u304b\u304c\u6e80\u305f\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u7d4c\u8def\u751f\u6210\u306e\u95a2\u6570\u3092\u547c\u3076\u3002\u305d\u308c\u4ee5\u5916\u306e\u6642\u306f\u524d\u56de\u751f\u6210\u3055\u308c\u305f\u7d4c\u8def\u3092\u51fa\u529b\u3059\u308b\u3002 \u524d\u56de\u7d4c\u8def\u751f\u6210\u6642\u304b\u3089\u4e00\u5b9a\u8ddd\u96e2\u8d70\u884c (default: 10.0 [m]) \u4e00\u5b9a\u6642\u9593\u7d4c\u904e (default: 1.0 [s]) \u30ec\u30fc\u30f3\u30c1\u30a7\u30f3\u30b8\u306a\u3069\u3067\u5165\u529b\u306e path \u306e\u5f62\u72b6\u304c\u5909\u308f\u3063\u305f\u6642 \u81ea\u8eca\u4f4d\u7f6e\u304c\u524d\u56de\u7d4c\u8def\u304b\u3089\u5927\u304d\u304f\u5916\u308c\u305f\u6642 \u5165\u529b\u306e path \u306e\u5f62\u72b6\u304c\u5909\u308f\u3063\u305f\u6642\u3068\u81ea\u8eca\u304c\u524d\u56de\u7d4c\u8def\u304b\u3089\u5927\u304d\u304f\u5916\u308c\u305f\u6642\u306f\u3001\u4fdd\u6301\u3057\u3066\u3044\u308b\u524d\u56de\u7d4c\u8def\u3092\u7834\u68c4\u3059\u308b\u30ea\u30bb\u30c3\u30c8\u6a5f\u80fd\u3082\u3042\u308b\u3002","title":"Manage trajectory generation"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#select-objects-to-avoid","text":"\u9759\u7684\u3067\u8def\u80a9\u306b\u3042\u308b\u969c\u5bb3\u7269\u306e\u307f\u56de\u907f\u5bfe\u8c61\u3068\u3059\u308b\u3002 \u5177\u4f53\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e 3 \u3064\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3082\u306e\u3067\u3042\u308a\u3001\u56f3\u3067\u793a\u3059\u3068\u8d64\u3044 id: 3, 4, 5 \u306e\u7269\u4f53\u3067\u3042\u308b\u3002 \u6307\u5b9a\u3055\u308c\u305f\u901f\u5ea6\u4ee5\u4e0b (default: 0.1 [m/s]) \u7269\u4f53\u91cd\u5fc3\u304c center line \u4e0a\u306b\u5b58\u5728\u3057\u306a\u3044\uff08\u524d\u8eca\u8ffd\u5f93\u306e\u8eca\u3092\u907f\u3051\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\uff09 \u5c11\u306a\u304f\u3068\u3082 1 \u3064\u4ee5\u4e0a\u306e\u7269\u4f53\u5f62\u72b6\u30dd\u30ea\u30b4\u30f3\u70b9\u304c drivable area \u306b\u5b58\u5728\u3059\u308b\u3002","title":"Select objects to avoid"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#generate-object-costmap","text":"\u56de\u907f\u5bfe\u8c61\u3067\u3042\u308b\u969c\u5bb3\u7269\u304b\u3089\u306e\u8ddd\u96e2\u306b\u5fdc\u3058\u305f\u30b3\u30b9\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\u3002","title":"Generate object costmap"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#generate-road-boundary-costmap","text":"\u9053\u8def\u304b\u3089\u306e\u8ddd\u96e2\u306b\u5fdc\u3058\u305f\u30b3\u30b9\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\u3002 \u3053\u308c\u3089\u306e\u30b3\u30b9\u30c8\u30de\u30c3\u30d7\u306f\u5f8c\u6bb5\u306e Optimize trajectory \u306e\u624b\u6cd5\u3067\u3042\u308b Model predictive trajectory \u306e\u969c\u5bb3\u7269\u30fb\u9053\u8def\u5883\u754c\u306b\u885d\u7a81\u3057\u306a\u3044\u5236\u7d04\u6761\u4ef6\u3092\u5b9a\u5f0f\u5316\u3059\u308b\u969b\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002","title":"Generate road boundary costmap"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#smooth-path","text":"\u5f8c\u6bb5\u306e\u6700\u9069\u5316\u51e6\u7406\u3067\u66f2\u7387\u306e\u306a\u3081\u3089\u304b\u306a\u53c2\u7167\u7d4c\u8def\u304c\u5fc5\u8981\u3067\u3042\u308b\u305f\u3081\u3001\u6700\u9069\u5316\u524d\u306b path \u3092\u306a\u3081\u3089\u304b\u306b\u3057\u3066 trajectory \u306e\u5f62\u5f0f\u3067\u51fa\u529b\u3059\u308b\u3002 \u3053\u306e\u5e73\u6ed1\u5316\u306f\u969c\u5bb3\u7269\u3092\u8003\u616e\u3057\u306a\u3044\u3002","title":"Smooth path"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#optimize-trajectory","text":"\u53c2\u7167\u7d4c\u8def\u306b\u57fa\u3065\u3044\u305f\u30d5\u30ec\u30cd\u5ea7\u6a19\u7cfb\u3067\u8eca\u4e21\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u3001\u53ca\u3073\u8ffd\u5f93\u8aa4\u5dee\u3092\u5b9a\u7fa9\u3057\u3001\u4e8c\u6b21\u8a08\u753b\u6cd5\u3092\u7528\u3044\u3066\u8eca\u4e21\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u3084\u969c\u5bb3\u7269\u56de\u907f\u3092\u8003\u616e\u3057\u306a\u304c\u3089\u8ffd\u5f93\u8aa4\u5dee\u304c\u5c0f\u3055\u304f\u306a\u308b\u3088\u3046\u306b\u7d4c\u8def\u751f\u6210\u3059\u308b\u3002 \u81ea\u8eca\u8fd1\u508d\u306e\u7d4c\u8def\u306e\u6025\u306a\u5909\u5316\u3092\u9632\u3050\u305f\u3081\u3001\u76f4\u8fd1\u306e\u7d4c\u8def\u306f\u524d\u56de\u306e\u7d4c\u8def\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3059\u308b\u3002 \u8a08\u7b97\u30b3\u30b9\u30c8\u3092\u6291\u3048\u308b\u305f\u3081\u3001\u6700\u7d42\u7684\u306b\u51fa\u529b\u3059\u308b\u7d4c\u8def\u9577\u3088\u308a\u3082\u77ed\u3044\u8ddd\u96e2\u306b\u5bfe\u3057\u3066\u306e\u307f\u8a08\u7b97\u3092\u884c\u3046\u3002","title":"Optimize trajectory"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#extend-trajectory","text":"\u7d4c\u8def\u3092\u898f\u5b9a\u306e\u9577\u3055\uff08default: 200m\uff09\u306b\u62e1\u5f35\u3059\u308b\u305f\u3081\u3001\u6700\u9069\u5316\u3057\u305f\u7d4c\u8def\u306e\u5148\u3092 Reference \u7d4c\u8def\u3068\u63a5\u7d9a\u3059\u308b\u3002","title":"Extend trajectory"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#check-drivable-area","text":"\u751f\u6210\u3055\u308c\u305f\u7d4c\u8def\u304c\u8d70\u884c\u53ef\u80fd\u9818\u57df\u3092\u9038\u8131\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u524d\u56de\u751f\u6210\u3055\u308c\u305f\u8d70\u884c\u53ef\u80fd\u9818\u57df\u5185\u306b\u3042\u308b\u7d4c\u8def\u3092\u51fa\u529b\u3059\u308b\u3002 Rationale \u73fe\u5728\u306e\u8a2d\u8a08\u306b\u304a\u3044\u3066\u3001\u6570\u5024\u8aa4\u5dee\u306b\u3088\u308b\u7834\u7dbb\u3092\u9632\u3050\u305f\u3081\u306b\u969c\u5bb3\u7269\u56de\u907f\u306f\u5168\u3066\u30bd\u30d5\u30c8\u5236\u7d04\u3068\u3057\u3066\u8003\u616e\u3055\u308c\u3066\u304a\u308a\u3001\u751f\u6210\u3055\u308c\u305f\u7d4c\u8def\u306b\u7f6e\u3044\u3066\u8eca\u4e21\u304c\u8d70\u884c\u53ef\u80fd\u9818\u57df\u5185\u306b\u5165\u3063\u3066\u3044\u308b\u304b\u306e\u5224\u5b9a\u304c\u5fc5\u8981\u3002","title":"Check drivable area"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#apply-path-velocity","text":"\u5165\u529b\u306e path \u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u901f\u5ea6\u3092\u51fa\u529b\u3055\u308c\u308b trajectory \u306b\u57cb\u3081\u8fbc\u3080\u3002\u7d4c\u8def\u9593\u9694\u304c\u7570\u306a\u308b\u305f\u3081\u7dda\u5f62\u88dc\u9593\u3092\u7528\u3044\u308b\u3002","title":"Apply path velocity"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#algorithms","text":"Smooth path \u3067\u4f7f\u308f\u308c\u3066\u3044\u308b Elastic band \u3068\u3001Optimized trajectory \u3067\u4f7f\u308f\u308c\u3066\u3044\u308b Model predictive trajectory \u306e\u8a73\u7d30\u306a\u8aac\u660e\u3092\u3059\u308b\u3002","title":"Algorithms"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#elastic-band","text":"","title":"Elastic band"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#_1","text":"behavior_path_planner \u3067\u8a08\u7b97\u3055\u308c\u305f path \u306f\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u306a\u3081\u3089\u304b\u3067\u306f\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u306e path \u306e\u5e73\u6ed1\u5316\u3092\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3042\u308b\u3002 \u6b21\u306e Model predictive trajectory \u3067\u3082\u5e73\u6ed1\u5316\u9805\u306f\u5165\u3063\u3066\u3044\u308b\u304c\u3001\u76ee\u6a19\u7d4c\u8def\u306b\u306a\u308b\u3079\u304f\u8ffd\u5f93\u3057\u3088\u3046\u3068\u3059\u308b\u9805\u3082\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u76ee\u6a19\u7d4c\u8def\u304c\u306a\u3081\u3089\u304b\u3067\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3053\u306e 2 \u3064\u306e\u9805\u304c\u53cd\u767a\u3059\u308b\u3002 \u305d\u308c\u3092\u9632\u3050\u305f\u3081\u306b\u3053\u3053\u3067\u5e73\u6ed1\u5316\u306e\u307f\u3092\u884c\u3063\u3066\u3044\u308b\u3002 \u307e\u305f Model predictive trajectory \u3067\u306f\u5404\u70b9\u306b\u304a\u3051\u308b\u66f2\u7387\u3068\u6cd5\u7dda\u3092\u5143\u306b\u6700\u9069\u5316\u3057\u3066\u304a\u308a\u3001\u5e73\u6ed1\u5316\u3055\u308c\u305f\u76ee\u6a19\u7d4c\u8def\u3092\u6e21\u3059\u3053\u3068\u3067\u6700\u9069\u5316\u306e\u7d50\u679c\u3092\u5b89\u5b9a\u3055\u305b\u308b\u72d9\u3044\u3082\u3042\u308b\u3002 \u5e73\u6ed1\u5316\u306e\u969b\u3001\u969c\u5bb3\u7269\u3084\u9053\u8def\u58c1\u3092\u8003\u616e\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u969c\u5bb3\u7269\u3084\u9053\u8def\u58c1\u306b\u885d\u7a81\u3057\u305f trajectory \u304c\u8a08\u7b97\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u3002 \u3053\u306e Elastic band \u3068\u6b21\u306e Model predictive trajectory \u306f\u3001\u8a08\u7b97\u8ca0\u8377\u3092\u6291\u3048\u308b\u305f\u3081\u306b\u3042\u308b\u7a0b\u5ea6\u306e\u9577\u3055\u3067\u30af\u30ea\u30c3\u30d7\u3057\u305f trajectory \u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002","title":"\u6982\u8981"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#_2","text":"\u524d\u5f8c\u306e\u70b9\u304b\u3089\u306e\u8ddd\u96e2\u306e\u5dee\u306e\u4e8c\u4e57\u3092\u76ee\u7684\u95a2\u6570\u3068\u3059\u308b\u4e8c\u6b21\u8a08\u753b\u3002 \u5404\u70b9\u306f\u4e00\u5b9a\u306e\u7bc4\u56f2\u4ee5\u5185\u3057\u304b\u52d5\u304b\u306a\u3044\u3068\u3044\u3046\u5236\u7d04\u3092\u8a2d\u3051\u308b\u3053\u3068\u3067\u3001\u5165\u529b\u306e\u8ecc\u9053\u3092\u3088\u308a\u306a\u3081\u3089\u304b\u306b\u3057\u305f\u8ecc\u9053\u3092\u5f97\u308b\u3002 \\boldsymbol{p}_k \\boldsymbol{p}_k \u3092 k k \u756a\u76ee\u306e\u7d4c\u8def\u70b9\u306e\u5ea7\u6a19\u3068\u3068\u3057\u305f\u3068\u304d\u4ee5\u4e0b\u306e\u30b3\u30b9\u30c8\u95a2\u6570\u3092\u6700\u5c0f\u5316\u3059\u308b\u4e8c\u6b21\u8a08\u753b\u3092\u89e3\u304f\u3002\u3053\u3053\u3067\u306f\u59cb\u70b9\u3068\u7d42\u70b9\u3067\u3042\u308b \\boldsymbol{p}_0 \\boldsymbol{p}_0 \u3068 \\boldsymbol{p}_n \\boldsymbol{p}_n \u306f\u56fa\u5b9a\u3067\u3042\u308b\u3002 \\min \\sum_{k=1}^{n-1} |\\boldsymbol{p}_{k+1} - \\boldsymbol{p}_{k}| - |\\boldsymbol{p}_{k} - \\boldsymbol{p}_{k-1}| \\min \\sum_{k=1}^{n-1} |\\boldsymbol{p}_{k+1} - \\boldsymbol{p}_{k}| - |\\boldsymbol{p}_{k} - \\boldsymbol{p}_{k-1}|","title":"\u6570\u5f0f"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#model-predictive-trajectory","text":"","title":"Model predictive trajectory"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#_3","text":"Elastic band \u3067\u5e73\u6ed1\u5316\u3055\u308c\u305f trajectory \u306b\u5bfe\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u4fee\u6b63\u3092\u884c\u3046\u3053\u3068\u304c\u76ee\u7684\u3067\u3042\u308b\u3002 \u7dda\u5f62\u5316\u3055\u308c\u305f\u8eca\u4e21\u306e\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u30e2\u30c7\u30eb\u306b\u57fa\u3065\u304d\u8d70\u884c\u53ef\u80fd\u3067\u3042\u308b \u969c\u5bb3\u7269\u3084\u9053\u8def\u58c1\u9762\u306b\u885d\u7a81\u3057\u306a\u3044 \u969c\u5bb3\u7269\u3084\u9053\u8def\u58c1\u9762\u306b\u885d\u7a81\u3057\u306a\u3044\u6761\u4ef6\u306f\u30cf\u30fc\u30c9\u3067\u306f\u306a\u304f\u30bd\u30d5\u30c8\u5236\u7d04\u3068\u3057\u3066\u542b\u307e\u308c\u3066\u3044\u308b\u3002\u8eca\u4e21\u306e\u5f8c\u8f2a\u4f4d\u7f6e\u3001\u524d\u8f2a\u4f4d\u7f6e\u3001\u305d\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306b\u304a\u3044\u3066\u969c\u5bb3\u7269\u30fb\u9053\u8def\u5883\u754c\u3068\u306e\u8ddd\u96e2\u304b\u3089\u5236\u7d04\u6761\u4ef6\u304c\u8a08\u7b97\u3055\u308c\u3066\u3044\u308b\u3002 \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u89e3\u304c\u51fa\u529b\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u5f8c\u6bb5\u306e\u5f8c\u51e6\u7406\u3067\u5f3e\u304b\u308c\u3001\u524d\u306e\u5468\u671f\u3067\u8a08\u753b\u3055\u308c\u305f trajectory \u3092\u51fa\u529b\u3059\u308b\u3002 \u81ea\u8eca\u4ed8\u8fd1\u306e\u7d4c\u8def\u304c\u632f\u52d5\u3057\u306a\u3044\u3088\u3046\u306b\u3001\u81ea\u8eca\u8fd1\u508d\u306e\u7d4c\u8def\u70b9\u3092\u524d\u56de\u306e\u7d4c\u8def\u70b9\u3068\u4e00\u81f4\u3055\u305b\u308b\u5236\u7d04\u6761\u4ef6\u3082\u542b\u307e\u308c\u3066\u304a\u308a\u3001\u3053\u308c\u304c\u552f\u4e00\u306e\u4e8c\u6b21\u8a08\u753b\u6cd5\u306e\u30cf\u30fc\u30c9\u5236\u7d04\u3067\u3042\u308b\u3002","title":"\u6982\u8981"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#_4","text":"\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u7d4c\u8def\u306b\u5bfe\u3057\u3066\u8eca\u4e21\u304c\u8ffd\u5f93\u3059\u308b\u3068\u304d\u306e bicycle kinematics model \u3092\u8003\u3048\u308b\u3002 \u6642\u523b k k \u306b\u304a\u3051\u308b\u3001\u7d4c\u8def\u4e0a\u306e\u8eca\u4e21\u306e\u6700\u8fd1\u508d\u70b9\u306e\u5ea7\u6a19( x x \u5ea7\u6a19\u306f\u7d4c\u8def\u306e\u63a5\u7dda\u306b\u5e73\u884c)\u304b\u3089\u898b\u305f\u8ffd\u5f93\u8aa4\u5dee\u306b\u95a2\u3057\u3066\u3001\u6a2a\u504f\u5dee y_k y_k \u3001\u5411\u304d\u306e\u504f\u5dee \\theta_k \\theta_k \u3001\u30b9\u30c6\u30a2\u89d2 \\delta_k \\delta_k \u3068\u5b9a\u3081\u308b\u3002 \u6307\u4ee4\u30b9\u30c6\u30a2\u89d2\u5ea6\u3092 \\delta_{des, k} \\delta_{des, k} \u3068\u3059\u308b\u3068\u3001\u30b9\u30c6\u30a2\u89d2\u306e\u9045\u5ef6\u3092\u8003\u616e\u3057\u305f\u8eca\u4e21\u30ad\u30cd\u30de\u30c6\u30a3\u30af\u30b9\u30e2\u30c7\u30eb\u306f\u4ee5\u4e0b\u3067\u8868\u3055\u308c\u308b\u3002\u3053\u306e\u6642\u3001\u30b9\u30c6\u30a2\u89d2 \\delta_k \\delta_k \u306f\u4e00\u6b21\u9045\u308c\u7cfb\u3068\u3057\u3066\u6307\u4ee4\u30b9\u30c6\u30a2\u89d2\u306b\u8ffd\u5f93\u3059\u308b\u3068\u4eee\u5b9a\u3059\u308b\u3002 \\begin{align} y_{k+1} & = y_{k} + v \\sin \\theta_k dt \\\\ \\theta_{k+1} & = \\theta_k + \\frac{v \\tan \\delta_k}{L}dt - \\kappa_k v \\cos \\theta_k dt \\\\ \\delta_{k+1} & = \\delta_k - \\frac{\\delta_k - \\delta_{des,k}}{\\tau}dt \\end{align} \\begin{align} y_{k+1} & = y_{k} + v \\sin \\theta_k dt \\\\ \\theta_{k+1} & = \\theta_k + \\frac{v \\tan \\delta_k}{L}dt - \\kappa_k v \\cos \\theta_k dt \\\\ \\delta_{k+1} & = \\delta_k - \\frac{\\delta_k - \\delta_{des,k}}{\\tau}dt \\end{align} \u6b21\u306b\u3053\u308c\u3089\u306e\u5f0f\u3092\u7dda\u5f62\u5316\u3059\u308b\u3002 y_k y_k , \\theta_k \\theta_k \u306f\u8ffd\u5f93\u8aa4\u5dee\u3067\u3042\u308b\u305f\u3081\u5fae\u5c0f\u8fd1\u4f3c\u3067\u304d\u3001 \\sin \\theta_k \\approx \\theta_k \\sin \\theta_k \\approx \\theta_k \u3068\u306a\u308b\u3002 \\delta_k \\delta_k \u306b\u95a2\u3057\u3066\u306f\u30b9\u30c6\u30a2\u89d2\u3067\u3042\u308b\u305f\u3081\u5fae\u5c0f\u3068\u307f\u306a\u305b\u306a\u3044\u3002\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u53c2\u7167\u7d4c\u8def\u306e\u66f2\u7387 \\kappa_k \\kappa_k \u304b\u3089\u8a08\u7b97\u3055\u308c\u308b\u30b9\u30c6\u30a2\u89d2 \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u308a\u3001 \\delta_k \\delta_k \u3092\u5fae\u5c0f\u306a\u5024 \\Delta \\delta_k \\Delta \\delta_k \u3067\u8868\u3059\u3002 \u3053\u3053\u3067\u6ce8\u610f\u3059\u3079\u304d\u3053\u3068\u3068\u3057\u3066\u306f\u3001 \\delta_k \\delta_k \u306f\u6700\u5927\u30b9\u30c6\u30a2\u89d2\u5ea6 \\delta_{\\max} \\delta_{\\max} \u4ee5\u5185\u306e\u5024\u3092\u53d6\u308b\u3002\u66f2\u7387 \\kappa_k \\kappa_k \u304b\u3089\u8a08\u7b97\u3055\u308c\u305f \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u304c\u6700\u5927\u30b9\u30c6\u30a2\u89d2\u5ea6 \\delta_{\\max} \\delta_{\\max} \u3088\u308a\u5927\u304d\u3044\u3068\u304d\u306b \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3057\u3066\u7dda\u5f62\u5316\u3059\u308b\u3068\u3001 \\Delta \\delta_k = \\delta - \\delta_{\\mathrm{ref}, k} = \\delta_{\\max} - \\delta_{\\mathrm{ref}, k} \\Delta \\delta_k = \\delta - \\delta_{\\mathrm{ref}, k} = \\delta_{\\max} - \\delta_{\\mathrm{ref}, k} \u3068\u306a\u308a\u3001 \\Delta \\delta_k \\Delta \\delta_k \u306e\u7d76\u5bfe\u5024\u304c\u5927\u304d\u304f\u306a\u308b\u3002\u3059\u306a\u308f\u3061\u3001 \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u306b\u3082\u6700\u5927\u30b9\u30c6\u30a2\u89d2\u5ea6\u5236\u9650\u3092\u9069\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \\begin{align} \\delta_{\\mathrm{ref}, k} & = \\mathrm{clamp}(\\arctan(L \\kappa_k), -\\delta_{\\max}, \\delta_{\\max}) \\\\ \\delta_k & = \\delta_{\\mathrm{ref}, k} + \\Delta \\delta_k, \\ \\Delta \\delta_k \\ll 1 \\\\ \\end{align} \\begin{align} \\delta_{\\mathrm{ref}, k} & = \\mathrm{clamp}(\\arctan(L \\kappa_k), -\\delta_{\\max}, \\delta_{\\max}) \\\\ \\delta_k & = \\delta_{\\mathrm{ref}, k} + \\Delta \\delta_k, \\ \\Delta \\delta_k \\ll 1 \\\\ \\end{align} \\mathrm{clamp}(v, v_{\\min}, v_{\\max}) \\mathrm{clamp}(v, v_{\\min}, v_{\\max}) \u306f v v \u3092 v_{\\min} v_{\\min} \u304b\u3089 v_{\\max} v_{\\max} \u306e\u7bc4\u56f2\u5185\u306b\u4e38\u3081\u308b\u95a2\u6570\u3067\u3042\u308b\u3002 \u3053\u306e \\delta_{\\mathrm{ref}, k} \\delta_{\\mathrm{ref}, k} \u3092\u4ecb\u3057\u3066 \\tan \\delta_k \\tan \\delta_k \u3092\u7dda\u5f62\u306a\u5f0f\u3067\u8fd1\u4f3c\u3059\u308b\u3002 \\begin{align} \\tan \\delta_k & \\approx \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} \\Delta \\delta_k \\\\ & = \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} (\\delta_{\\mathrm{ref}, k} - \\delta_k) \\\\ & = \\tan \\delta_{\\mathrm{ref}, k} - \\frac{\\delta_{\\mathrm{ref}, k}}{\\cos^2 \\delta_{\\mathrm{ref}, k}} + \\frac{1}{\\cos^2 \\delta_{\\mathrm{ref}, k}} \\delta_k \\end{align} \\begin{align} \\tan \\delta_k & \\approx \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} \\Delta \\delta_k \\\\ & = \\tan \\delta_{\\mathrm{ref}, k} + \\left.\\frac{d \\tan \\delta}{d \\delta}\\right|_{\\delta = \\delta_{\\mathrm{ref}, k}} (\\delta_{\\mathrm{ref}, k} - \\delta_k) \\\\ & = \\tan \\delta_{\\mathrm{ref}, k} - \\frac{\\delta_{\\mathrm{ref}, k}}{\\cos^2 \\delta_{\\mathrm{ref}, k}} + \\frac{1}{\\cos^2 \\delta_{\\mathrm{ref}, k}} \\delta_k \\end{align} \u4ee5\u4e0a\u306e\u7dda\u5f62\u5316\u3092\u8e0f\u307e\u3048\u3001\u8aa4\u5dee\u30c0\u30a4\u30ca\u30df\u30af\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7dda\u5f62\u306a\u884c\u5217\u6f14\u7b97\u3067\u8a18\u8ff0\u3067\u304d\u308b\u3002 \\begin{align} \\begin{pmatrix} y_{k+1} \\\\ \\theta_{k+1} \\\\ \\delta_{k+1} \\end{pmatrix} = \\begin{pmatrix} 1 & v dt & 0 \\\\ 0 & 1 & \\frac{v dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} \\\\ 0 & 0 & 1 - \\frac{dt}{\\tau} \\end{pmatrix} \\begin{pmatrix} y_k \\\\ \\theta_k \\\\ \\delta_k \\end{pmatrix} + \\begin{pmatrix} 0 \\\\ 0 \\\\ \\frac{dt}{\\tau} \\end{pmatrix} \\delta_{des} + \\begin{pmatrix} 0 \\\\ \\frac{v \\tan(\\delta_{\\mathrm{ref}, k}) dt}{L} - \\frac{v \\delta_{\\mathrm{ref}, k} dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} - \\kappa_k v dt\\\\ 0 \\end{pmatrix} \\end{align} \\begin{align} \\begin{pmatrix} y_{k+1} \\\\ \\theta_{k+1} \\\\ \\delta_{k+1} \\end{pmatrix} = \\begin{pmatrix} 1 & v dt & 0 \\\\ 0 & 1 & \\frac{v dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} \\\\ 0 & 0 & 1 - \\frac{dt}{\\tau} \\end{pmatrix} \\begin{pmatrix} y_k \\\\ \\theta_k \\\\ \\delta_k \\end{pmatrix} + \\begin{pmatrix} 0 \\\\ 0 \\\\ \\frac{dt}{\\tau} \\end{pmatrix} \\delta_{des} + \\begin{pmatrix} 0 \\\\ \\frac{v \\tan(\\delta_{\\mathrm{ref}, k}) dt}{L} - \\frac{v \\delta_{\\mathrm{ref}, k} dt}{L \\cos^{2} \\delta_{\\mathrm{ref}, k}} - \\kappa_k v dt\\\\ 0 \\end{pmatrix} \\end{align} \u5e73\u6ed1\u5316\u3068\u7d4c\u8def\u8ffd\u5f93\u306e\u305f\u3081\u306e\u76ee\u7684\u95a2\u6570\u306f\u4ee5\u4e0b\u3067\u8868\u3055\u308c\u3001 \\begin{align} J_1 & (y_{0...N-1}, \\theta_{0...N-1}, \\delta_{0...N-1}) \\\\ & = w_y \\sum_{k} y_k^2 + w_{\\theta} \\sum_{k} \\theta_k^2 + w_{\\delta} \\sum_k \\delta_k^2 + w_{\\dot{\\delta}} \\sum_k \\dot{\\delta}_k^2 + w_{\\ddot{\\delta}} \\sum_k \\ddot{\\delta}_k^2 \\end{align} \\begin{align} J_1 & (y_{0...N-1}, \\theta_{0...N-1}, \\delta_{0...N-1}) \\\\ & = w_y \\sum_{k} y_k^2 + w_{\\theta} \\sum_{k} \\theta_k^2 + w_{\\delta} \\sum_k \\delta_k^2 + w_{\\dot{\\delta}} \\sum_k \\dot{\\delta}_k^2 + w_{\\ddot{\\delta}} \\sum_k \\ddot{\\delta}_k^2 \\end{align} \u524d\u8ff0\u306e\u901a\u308a\u3001\u8eca\u4e21\u304c\u969c\u5bb3\u7269\u30fb\u9053\u8def\u5883\u754c\u306b\u4fb5\u5165\u3057\u306a\u3044\u6761\u4ef6\u306f\u30b9\u30e9\u30c3\u30af\u5909\u6570\u3092\u7528\u3044\u3066\u30bd\u30d5\u30c8\u5236\u7d04\u3068\u3057\u3066\u8868\u3055\u308c\u3066\u3044\u308b\u3002 \u8eca\u4e21\u306e\u5f8c\u8f2a\u4f4d\u7f6e\u3001\u524d\u8f2a\u4f4d\u7f6e\u3001\u304a\u3088\u3073\u305d\u306e\u4e2d\u5fc3\u4f4d\u7f6e\u306b\u304a\u3051\u308b\u969c\u5bb3\u7269\u30fb\u9053\u8def\u5883\u754c\u307e\u3067\u306e\u8ddd\u96e2\u3092\u305d\u308c\u305e\u308c y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} \u3068\u3059\u308b\u3002 \u3053\u3053\u3067\u305d\u308c\u305e\u308c\u306b\u5bfe\u3059\u308b\u30b9\u30e9\u30c3\u30af\u5909\u6570 \\lambda_{\\mathrm{base}}, \\lambda_{\\mathrm{top}}, \\lambda_{\\mathrm{mid}} \\lambda_{\\mathrm{base}}, \\lambda_{\\mathrm{top}}, \\lambda_{\\mathrm{mid}} \u3092\u5b9a\u7fa9\u3057\u3001 y_{\\mathrm{base}, k, \\min} - \\lambda_{\\mathrm{base}, k} \\leq y_{\\mathrm{base}, k} (y_k) \\leq y_{\\mathrm{base}, k, \\max} + \\lambda_{\\mathrm{base}, k}\\\\ y_{\\mathrm{top}, k, \\min} - \\lambda_{\\mathrm{top}, k} \\leq y_{\\mathrm{top}, k} (y_k) \\leq y_{\\mathrm{top}, k, \\max} + \\lambda_{\\mathrm{top}, k}\\\\ y_{\\mathrm{mid}, k, \\min} - \\lambda_{\\mathrm{mid}, k} \\leq y_{\\mathrm{mid}, k} (y_k) \\leq y_{\\mathrm{mid}, k, \\max} + \\lambda_{\\mathrm{mid}, k} y_{\\mathrm{base}, k, \\min} - \\lambda_{\\mathrm{base}, k} \\leq y_{\\mathrm{base}, k} (y_k) \\leq y_{\\mathrm{base}, k, \\max} + \\lambda_{\\mathrm{base}, k}\\\\ y_{\\mathrm{top}, k, \\min} - \\lambda_{\\mathrm{top}, k} \\leq y_{\\mathrm{top}, k} (y_k) \\leq y_{\\mathrm{top}, k, \\max} + \\lambda_{\\mathrm{top}, k}\\\\ y_{\\mathrm{mid}, k, \\min} - \\lambda_{\\mathrm{mid}, k} \\leq y_{\\mathrm{mid}, k} (y_k) \\leq y_{\\mathrm{mid}, k, \\max} + \\lambda_{\\mathrm{mid}, k} y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} y_{\\mathrm{base}, k}, y_{\\mathrm{top}, k}, y_{\\mathrm{mid}, k} \u306f y_k y_k \u306e 1 \u6b21\u5f0f\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u306e\u30bd\u30d5\u30c8\u5236\u7d04\u306e\u76ee\u7684\u95a2\u6570\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3002 \\begin{align} J_2 & (\\lambda_{\\mathrm{base}, 0...N-1}, \\lambda_{\\mathrm{mid}, 0...N-1}, \\lambda_{\\mathrm{top}, 0...N-1}) \\\\ & = w_{\\mathrm{base}} \\sum_{k} \\lambda_{\\mathrm{base}, k}^2 + w_{\\mathrm{mid}} \\sum_k \\lambda_{\\mathrm{mid}, k}^2 + w_{\\mathrm{top}} \\sum_k \\lambda_{\\mathrm{top}, k}^2 \\end{align} \\begin{align} J_2 & (\\lambda_{\\mathrm{base}, 0...N-1}, \\lambda_{\\mathrm{mid}, 0...N-1}, \\lambda_{\\mathrm{top}, 0...N-1}) \\\\ & = w_{\\mathrm{base}} \\sum_{k} \\lambda_{\\mathrm{base}, k}^2 + w_{\\mathrm{mid}} \\sum_k \\lambda_{\\mathrm{mid}, k}^2 + w_{\\mathrm{top}} \\sum_k \\lambda_{\\mathrm{top}, k}^2 \\end{align} \u30b9\u30e9\u30c3\u30af\u5909\u6570\u3082\u4e8c\u6b21\u8a08\u753b\u6cd5\u306e\u8a2d\u8a08\u5909\u6570\u3068\u306a\u308a\u3001\u5168\u3066\u306e\u8a2d\u8a08\u5909\u6570\u3092\u307e\u3068\u3081\u305f\u30d9\u30af\u30c8\u30eb \\boldsymbol{x} \\boldsymbol{x} \u3092\u5b9a\u7fa9\u3059\u308b\u3002 \\begin{align} \\boldsymbol{x} = \\begin{pmatrix} ... & y_k & \\lambda_{\\mathrm{base}, k} & \\lambda_{\\mathrm{top}, k} & \\lambda_{\\mathrm{mid}, k} & ... \\end{pmatrix}^T \\end{align} \\begin{align} \\boldsymbol{x} = \\begin{pmatrix} ... & y_k & \\lambda_{\\mathrm{base}, k} & \\lambda_{\\mathrm{top}, k} & \\lambda_{\\mathrm{mid}, k} & ... \\end{pmatrix}^T \\end{align} \u3053\u308c\u3089\u306e 2 \u3064\u306e\u76ee\u7684\u95a2\u6570\u306e\u548c\u3092\u76ee\u7684\u95a2\u6570\u3068\u3059\u308b\u3002 \\begin{align} \\min_{\\boldsymbol{x}} J (\\boldsymbol{x}) = \\min_{\\boldsymbol{x}} J_1 & (y_{0...N-1}, \\theta_{0...N-1}, \\delta_{0...N-1}) + J_2 (\\lambda_{\\mathrm{base}, 0...N-1}, \\lambda_{\\mathrm{mid}, 0...N-1}, \\lambda_{\\mathrm{top}, 0...N-1}) \\end{align} \\begin{align} \\min_{\\boldsymbol{x}} J (\\boldsymbol{x}) = \\min_{\\boldsymbol{x}} J_1 & (y_{0...N-1}, \\theta_{0...N-1}, \\delta_{0...N-1}) + J_2 (\\lambda_{\\mathrm{base}, 0...N-1}, \\lambda_{\\mathrm{mid}, 0...N-1}, \\lambda_{\\mathrm{top}, 0...N-1}) \\end{align} \u524d\u8ff0\u306e\u901a\u308a\u3001\u771f\u306b\u30cf\u30fc\u30c9\u306a\u5236\u7d04\u6761\u4ef6\u306f\u8eca\u4e21\u524d\u65b9\u3042\u308b\u7a0b\u5ea6\u306e\u8ddd\u96e2 N_{fix} N_{fix} \u307e\u3067\u306e\u7d4c\u8def\u70b9\u306e\u72b6\u614b\u306f\u524d\u56de\u5024\u306b\u306a\u308b\u3088\u3046\u306a\u6761\u4ef6\u3067\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3002 \\begin{align} \\delta_k = \\delta_{k}^{\\mathrm{prev}} (0 \\leq i \\leq N_{\\mathrm{fix}}) \\end{align} \\begin{align} \\delta_k = \\delta_{k}^{\\mathrm{prev}} (0 \\leq i \\leq N_{\\mathrm{fix}}) \\end{align} \u3067\u3042\u308a\u3001\u3053\u308c\u3089\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4e8c\u6b21\u8a08\u753b\u6cd5\u306e\u4fc2\u6570\u884c\u5217\u306b\u5909\u63db\u3057\u3066\u4e8c\u6b21\u8a08\u753b\u6cd5\u3092\u89e3\u304f \\begin{align} \\min_{\\boldsymbol{x}} \\ & \\frac{1}{2} \\boldsymbol{x}^T \\boldsymbol{P} \\boldsymbol{x} + \\boldsymbol{q} \\boldsymbol{x} \\\\ \\mathrm{s.t.} \\ & \\boldsymbol{b}_l \\leq \\boldsymbol{A} \\boldsymbol{x} \\leq \\boldsymbol{b}_u \\end{align} \\begin{align} \\min_{\\boldsymbol{x}} \\ & \\frac{1}{2} \\boldsymbol{x}^T \\boldsymbol{P} \\boldsymbol{x} + \\boldsymbol{q} \\boldsymbol{x} \\\\ \\mathrm{s.t.} \\ & \\boldsymbol{b}_l \\leq \\boldsymbol{A} \\boldsymbol{x} \\leq \\boldsymbol{b}_u \\end{align}","title":"\u6570\u5f0f"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#limitation","text":"\u30ab\u30fc\u30d6\u6642\u306b\u5916\u5074\u306b\u81a8\u3089\u3093\u3060\u7d4c\u8def\u3092\u8fd4\u3059 behavior_path_planner \u3068 obstacle_avoidance_planner \u306e\u7d4c\u8def\u8a08\u753b\u306e\u5f79\u5272\u5206\u62c5\u304c\u306f\u3063\u304d\u308a\u3068\u6c7a\u307e\u3063\u3066\u3044\u306a\u3044 behavior_path_planner \u5074\u3067\u56de\u907f\u3059\u308b\u5834\u5408\u3068\u3001obstacle_avoidance_planner \u3067\u56de\u907f\u3059\u308b\u5834\u5408\u304c\u3042\u308b behavior_path_planner \u304b\u3089\u6765\u308b path \u304c\u9053\u8def\u58c1\u306b\u885d\u7a81\u3057\u3066\u3044\u308b\u3068\u3001\u5927\u304d\u304f\u5916\u5074\u306b\u81a8\u308c\u305f trajectory \u3092\u8a08\u753b\u3059\u308b (\u67cf\u306e\u8449\u306e\u30ab\u30fc\u30d6\u3067\u9855\u8457) \u8a08\u7b97\u8ca0\u8377\u304c\u9ad8\u3044","title":"Limitation"},{"location":"planning/scenario_planning/lane_driving/motion_planning/obstacle_avoidance_planner/obstacle_avoidance_planner-design.ja/#how-to-debug","text":"obstacle_avoidance_planner` \u304b\u3089\u51fa\u529b\u3055\u308c\u308b debug \u7528\u306e topic \u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002 interpolated_points_marker obstacle avoidance planner \u3078\u306e\u5165\u529b\u7d4c\u8def\u3092\u30ea\u30b5\u30f3\u30d7\u30eb\u3057\u305f\u3082\u306e\u3002\u3053\u306e\u7d4c\u8def\u304c\u9053\u8def\u5185\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u304b\uff08\u9053\u8def\u5185\u306b\u3042\u308b\u3053\u3068\u304c\u5fc5\u9808\u3067\u306f\u306a\u3044\uff09\u3001\u5341\u5206\u306b\u306a\u3081\u3089\u304b\u304b\uff08\u3042\u308b\u7a0b\u5ea6\u6ed1\u3089\u304b\u3067\u306a\u3044\u3068\u30ed\u30b8\u30c3\u30af\u304c\u7834\u7dbb\u3059\u308b\uff09\u3001\u306a\u3069\u3092\u78ba\u8a8d\u3059\u308b\u3002 smoothed_points_text Elastic Band \u306e\u8a08\u7b97\u7d50\u679c\u3002\u70b9\u7fa4\u3067\u306f\u306a\u304f\u5c0f\u3055\u3044\u6570\u5b57\u304c\u63cf\u753b\u3055\u308c\u308b\u3002\u5e73\u6ed1\u5316\u3055\u308c\u305f\u3053\u306e\u7d4c\u8def\u304c\u9053\u8def\u5185\u304b\u3089\u306f\u307f\u51fa\u3066\u3044\u306a\u3044\u304b\u3001\u6b6a\u3093\u3067\u3044\u306a\u3044\u304b\u306a\u3069\u3092\u78ba\u8a8d\u3002 (base/top/mid)_bounds_line \u58c1\u3068\u306e\u885d\u7a81\u5224\u5b9a\u306b\u304a\u3051\u308b\u6a2a\u65b9\u5411\u306e\u9053\u8def\u5883\u754c\u307e\u3067\u306e\u8ddd\u96e2\uff08\u6b63\u78ba\u306b\u306f - vehicle_width / 2.0\uff09\u3002 \u8eca\u4e21\u306e 3 \u7b87\u6240\uff08base, top, mid\uff09\u3067\u885d\u7a81\u5224\u5b9a\u3092\u884c\u3063\u3066\u304a\u308a\u30013 \u3064\u306e\u30de\u30fc\u30ab\u30fc\u304c\u5b58\u5728\u3059\u308b\u3002 \u9ec4\u8272\u3044\u7dda\u306e\u5404\u7aef\u70b9\u304b\u3089\u9053\u8def\u5883\u754c\u307e\u3067\u306e\u8ddd\u96e2\u304c\u8eca\u5e45\u306e\u534a\u5206\u304f\u3089\u3044\u3067\u3042\u308c\u3070\u7570\u5e38\u306a\u3057\uff08\u3053\u3053\u304c\u304a\u304b\u3057\u3044\u5834\u5408\u306f\u30ed\u30b8\u30c3\u30af\u7570\u5e38\uff09\u3002 optimized_points_marker MPT \u306e\u8a08\u7b97\u7d50\u679c\u3002\u9053\u8def\u304b\u3089\u306f\u307f\u51fa\u3066\u3044\u306a\u3044\u304b\u3001\u632f\u52d5\u3057\u3066\u3044\u306a\u3044\u304b\u306a\u3069\u3092\u78ba\u8a8d Trajectory with footprint TrajectoryFootprint \u306e rviz_plugin \u3092\u7528\u3044\u3066\u7d4c\u8def\u4e0a\u306e footprint \u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3002\u3053\u308c\u3092\u7528\u3044\u3066 obstacle_avoidance_planner \u3078\u306e\u5165\u51fa\u529b\u306e footprint\u3001\u7d4c\u8def\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u7b49\u3092\u78ba\u8a8d\u3059\u308b\u3002 Drivable Area obstacle avoidance \u3078\u306e\u5165\u529b\u306e\u8d70\u884c\u53ef\u80fd\u9818\u57df\u3092\u8868\u793a\u3059\u308b\u3002Drivable Area \u306e\u751f\u6210\u306b\u4e0d\u5177\u5408\u304c\u3042\u308b\u3068\u751f\u6210\u7d4c\u8def\u304c\u6b6a\u3080\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 topic \u540d\uff1a /planning/scenario_planning/lane_driving/behavior_planning/behavior_path_planner/debug/drivable_area nav_msgs/msg/OccupancyGrid \u578b\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b area_with_objects \u5165\u529b\u3055\u308c\u305f\u8d70\u884c\u53ef\u80fd\u9818\u57df\u304b\u3089\u969c\u5bb3\u7269\u3092\u53d6\u308a\u9664\u3044\u305f\u5f8c\u306e\u3001\u8d70\u884c\u53ef\u80fd\u9818\u57df nav_msgs/msg/OccupancyGrid \u578b\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b object_clearance_map \u56de\u907f\u5bfe\u8c61\u306e\u969c\u5bb3\u7269\u304b\u3089\u306e\u8ddd\u96e2\u3092\u53ef\u8996\u5316\u3057\u305f\u3082\u306e\u3002 nav_msgs/msg/OccupancyGrid \u578b\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b clearance_map \u5165\u529b\u3055\u308c\u305f\u8d70\u884c\u53ef\u80fd\u9818\u57df\u304b\u3089\u306e\u8ddd\u96e2\u3092\u53ef\u8996\u5316\u3057\u305f\u3082\u306e\u3002 nav_msgs/msg/OccupancyGrid \u578b\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b","title":"How to debug"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/","text":"Surround Obstacle Checker # Purpose # surround_obstacle_checker \u306f\u3001\u81ea\u8eca\u304c\u505c\u8eca\u4e2d\u3001\u81ea\u8eca\u306e\u5468\u56f2\u306b\u969c\u5bb3\u7269\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306b\u767a\u9032\u3057\u306a\u3044\u3088\u3046\u306b\u505c\u6b62\u8a08\u753b\u3092\u884c\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308b\u3002 Inner-workings / Algorithms # Flow chart # Algorithms # Check data # \u70b9\u7fa4\u3001\u52d5\u7684\u7269\u4f53\u3001\u81ea\u8eca\u901f\u5ea6\u306e\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002 Get distance to nearest object # \u81ea\u8eca\u3068\u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u81ea\u8eca\u306e\u30dd\u30ea\u30b4\u30f3\u3092\u8a08\u7b97\u3057\u3001\u70b9\u7fa4\u306e\u5404\u70b9\u304a\u3088\u3073\u5404\u52d5\u7684\u7269\u4f53\u306e\u30dd\u30ea\u30b4\u30f3\u3068\u306e\u8ddd\u96e2\u3092\u305d\u308c\u305e\u308c\u8a08\u7b97\u3059\u308b\u3053\u3068\u3067\u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u3002 Stop condition # \u6b21\u306e\u6761\u4ef6\u3092\u3059\u3079\u3066\u6e80\u305f\u3059\u3068\u304d\u3001\u81ea\u8eca\u306f\u505c\u6b62\u8a08\u753b\u3092\u884c\u3046\u3002 \u81ea\u8eca\u304c\u505c\u8eca\u3057\u3066\u3044\u308b\u3053\u3068 \u6b21\u306e\u3046\u3061\u3044\u305a\u308c\u304b\u3092\u6e80\u305f\u3059\u3053\u3068 \u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u304c\u6b21\u306e\u6761\u4ef6\u3092\u307f\u305f\u3059\u3053\u3068 State::PASS \u306e\u3068\u304d\u3001 surround_check_distance \u672a\u6e80\u3067\u3042\u308b State::STOP \u306e\u3068\u304d\u3001 surround_check_recover_distance \u4ee5\u4e0b\u3067\u3042\u308b 1 \u3092\u6e80\u305f\u3057\u3066\u3044\u306a\u3044\u3068\u304d\u30011 \u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u6642\u523b\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u304c state_clear_time \u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068 States # \u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u9632\u6b62\u306e\u305f\u3081\u3001 surround_obstacle_checker \u3067\u306f\u72b6\u614b\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u3002 Stop condition \u306e\u9805\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u3001\u72b6\u614b\u306b\u3088\u3063\u3066\u969c\u5bb3\u7269\u5224\u5b9a\u306e\u3057\u304d\u3044\u5024\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u3092\u9632\u6b62\u3057\u3066\u3044\u308b\u3002 State::PASS \uff1a\u505c\u6b62\u8a08\u753b\u89e3\u9664\u4e2d State::STOP \uff1a\u505c\u6b62\u8a08\u753b\u4e2d Inputs / Outputs # Input # Name Type Description ~/input/trajectory autoware_planning_msgs::msg::Trajectory Reference trajectory /sensing/lidar/no_ground/pointcloud sensor_msgs::msg::PointCloud2 No ground pointcloud /perception/object_recognition/objects autoware_perception_msgs::msg::DynamicObjectArray Dynamic objects /localization/twist geometry_msgs::msg::TwistStamped Current twist /tf tf2_msgs::msg::TFMessage TF /tf_static tf2_msgs::msg::TFMessage TF static Output # Name Type Description ~/output/trajectory autoware_planning_msgs/Trajectory Modified trajectory ~/output/no_start_reason diagnostic_msgs::msg::DiagnosticStatus No start reason ~/output/stop_reasons autoware_planning_msgs::msg::StopReasonArray Stop reasons ~/debug/marker visualization_msgs::msg::MarkerArray Marker for visualization Parameters # Name Type Description Default value use_pointcloud bool Use pointcloud as obstacle check true use_dynamic_object bool Use dynamic object as obstacle check true surround_check_distance double If objects exist in this distance, transit to \"exist-surrounding-obstacle\" status [m] 0.5 surround_check_recover_distance double If no object exists in this distance, transit to \"non-surrounding-obstacle\" status [m] 0.8 state_clear_time double Threshold to clear stop state [s] 2.0 stop_state_ego_speed double Threshold to check ego vehicle stopped [m/s] 0.1 Assumptions / Known limits # \u3053\u306e\u6a5f\u80fd\u304c\u52d5\u4f5c\u3059\u308b\u305f\u3081\u306b\u306f\u969c\u5bb3\u7269\u70b9\u7fa4\u306e\u89b3\u6e2c\u304c\u5fc5\u8981\u306a\u305f\u3081\u3001\u969c\u5bb3\u7269\u304c\u6b7b\u89d2\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u505c\u6b62\u8a08\u753b\u3092\u884c\u308f\u306a\u3044\u3002","title":"Surround Obstacle Checker"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#surround-obstacle-checker","text":"","title":"Surround Obstacle Checker"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#purpose","text":"surround_obstacle_checker \u306f\u3001\u81ea\u8eca\u304c\u505c\u8eca\u4e2d\u3001\u81ea\u8eca\u306e\u5468\u56f2\u306b\u969c\u5bb3\u7269\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306b\u767a\u9032\u3057\u306a\u3044\u3088\u3046\u306b\u505c\u6b62\u8a08\u753b\u3092\u884c\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308b\u3002","title":"Purpose"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#inner-workings-algorithms","text":"","title":"Inner-workings / Algorithms"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#flow-chart","text":"","title":"Flow chart"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#algorithms","text":"","title":"Algorithms"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#check-data","text":"\u70b9\u7fa4\u3001\u52d5\u7684\u7269\u4f53\u3001\u81ea\u8eca\u901f\u5ea6\u306e\u30c7\u30fc\u30bf\u304c\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002","title":"Check data"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#get-distance-to-nearest-object","text":"\u81ea\u8eca\u3068\u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u3092\u8a08\u7b97\u3059\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u81ea\u8eca\u306e\u30dd\u30ea\u30b4\u30f3\u3092\u8a08\u7b97\u3057\u3001\u70b9\u7fa4\u306e\u5404\u70b9\u304a\u3088\u3073\u5404\u52d5\u7684\u7269\u4f53\u306e\u30dd\u30ea\u30b4\u30f3\u3068\u306e\u8ddd\u96e2\u3092\u305d\u308c\u305e\u308c\u8a08\u7b97\u3059\u308b\u3053\u3068\u3067\u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u3002","title":"Get distance to nearest object"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#stop-condition","text":"\u6b21\u306e\u6761\u4ef6\u3092\u3059\u3079\u3066\u6e80\u305f\u3059\u3068\u304d\u3001\u81ea\u8eca\u306f\u505c\u6b62\u8a08\u753b\u3092\u884c\u3046\u3002 \u81ea\u8eca\u304c\u505c\u8eca\u3057\u3066\u3044\u308b\u3053\u3068 \u6b21\u306e\u3046\u3061\u3044\u305a\u308c\u304b\u3092\u6e80\u305f\u3059\u3053\u3068 \u6700\u8fd1\u508d\u306e\u969c\u5bb3\u7269\u3068\u306e\u8ddd\u96e2\u304c\u6b21\u306e\u6761\u4ef6\u3092\u307f\u305f\u3059\u3053\u3068 State::PASS \u306e\u3068\u304d\u3001 surround_check_distance \u672a\u6e80\u3067\u3042\u308b State::STOP \u306e\u3068\u304d\u3001 surround_check_recover_distance \u4ee5\u4e0b\u3067\u3042\u308b 1 \u3092\u6e80\u305f\u3057\u3066\u3044\u306a\u3044\u3068\u304d\u30011 \u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u6642\u523b\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\u304c state_clear_time \u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068","title":"Stop condition"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#states","text":"\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u9632\u6b62\u306e\u305f\u3081\u3001 surround_obstacle_checker \u3067\u306f\u72b6\u614b\u3092\u7ba1\u7406\u3057\u3066\u3044\u308b\u3002 Stop condition \u306e\u9805\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u3001\u72b6\u614b\u306b\u3088\u3063\u3066\u969c\u5bb3\u7269\u5224\u5b9a\u306e\u3057\u304d\u3044\u5024\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u30c1\u30e3\u30bf\u30ea\u30f3\u30b0\u3092\u9632\u6b62\u3057\u3066\u3044\u308b\u3002 State::PASS \uff1a\u505c\u6b62\u8a08\u753b\u89e3\u9664\u4e2d State::STOP \uff1a\u505c\u6b62\u8a08\u753b\u4e2d","title":"States"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#input","text":"Name Type Description ~/input/trajectory autoware_planning_msgs::msg::Trajectory Reference trajectory /sensing/lidar/no_ground/pointcloud sensor_msgs::msg::PointCloud2 No ground pointcloud /perception/object_recognition/objects autoware_perception_msgs::msg::DynamicObjectArray Dynamic objects /localization/twist geometry_msgs::msg::TwistStamped Current twist /tf tf2_msgs::msg::TFMessage TF /tf_static tf2_msgs::msg::TFMessage TF static","title":"Input"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#output","text":"Name Type Description ~/output/trajectory autoware_planning_msgs/Trajectory Modified trajectory ~/output/no_start_reason diagnostic_msgs::msg::DiagnosticStatus No start reason ~/output/stop_reasons autoware_planning_msgs::msg::StopReasonArray Stop reasons ~/debug/marker visualization_msgs::msg::MarkerArray Marker for visualization","title":"Output"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#parameters","text":"Name Type Description Default value use_pointcloud bool Use pointcloud as obstacle check true use_dynamic_object bool Use dynamic object as obstacle check true surround_check_distance double If objects exist in this distance, transit to \"exist-surrounding-obstacle\" status [m] 0.5 surround_check_recover_distance double If no object exists in this distance, transit to \"non-surrounding-obstacle\" status [m] 0.8 state_clear_time double Threshold to clear stop state [s] 2.0 stop_state_ego_speed double Threshold to check ego vehicle stopped [m/s] 0.1","title":"Parameters"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design.ja/#assumptions-known-limits","text":"\u3053\u306e\u6a5f\u80fd\u304c\u52d5\u4f5c\u3059\u308b\u305f\u3081\u306b\u306f\u969c\u5bb3\u7269\u70b9\u7fa4\u306e\u89b3\u6e2c\u304c\u5fc5\u8981\u306a\u305f\u3081\u3001\u969c\u5bb3\u7269\u304c\u6b7b\u89d2\u306b\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u505c\u6b62\u8a08\u753b\u3092\u884c\u308f\u306a\u3044\u3002","title":"Assumptions / Known limits"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/","text":"Surround Obstacle Checker # Purpose # surround_obstacle_checker is a module to prevent moving if any obstacles is near stopping ego vehicle. This module runs only when ego vehicle is stopping. Inner-workings / Algorithms # Flow chart # Algorithms # Check data # Check that surround_obstacle_checker receives no ground pointcloud, dynamic objects and current velocity data. Get distance to nearest object # Calculate distance between ego vehicle and the nearest object. In this function, it calculates the minimum distance between the polygon of ego vehicle and all points in pointclouds and the polygons of dynamic objects. Stop requirement # If it satisfies all following conditions, it plans stopping. Ego vehicle is stopped It satisfies any following conditions The distance to nearest obstacle satisfies following conditions If state is State::PASS , the distance is less than surround_check_distance If state is State::STOP , the distance is less than surround_check_recover_distance If it does not satisfies the condition in 1, elapsed time from the time it satisfies the condition in 1 is less than state_clear_time States # To prevent chattering, surround_obstacle_checker manages two states. As mentioned in stop condition section, it prevents chattering by changing threshold to find surround obstacle depending on the states. State::PASS : Stop planning is released State::STOP \uff1aWhile stop planning Inputs / Outputs # Input # Name Type Description ~/input/trajectory autoware_planning_msgs::msg::Trajectory Reference trajectory /sensing/lidar/no_ground/pointcloud sensor_msgs::msg::PointCloud2 No ground pointcloud /perception/object_recognition/objects autoware_perception_msgs::msg::DynamicObjectArray Dynamic objects /localization/twist geometry_msgs::msg::TwistStamped Current twist /tf tf2_msgs::msg::TFMessage TF /tf_static tf2_msgs::msg::TFMessage TF static Output # Name Type Description ~/output/trajectory autoware_planning_msgs/Trajectory Modified trajectory ~/output/no_start_reason diagnostic_msgs::msg::DiagnosticStatus No start reason ~/output/stop_reasons autoware_planning_msgs::msg::StopReasonArray Stop reasons ~/debug/marker visualization_msgs::msg::MarkerArray Marker for visualization Parameters # Name Type Description Default value use_pointcloud bool Use pointcloud as obstacle check true use_dynamic_object bool Use dynamic object as obstacle check true surround_check_distance double If objects exist in this distance, transit to \"exist-surrounding-obstacle\" status [m] 0.5 surround_check_recover_distance double If no object exists in this distance, transit to \"non-surrounding-obstacle\" status [m] 0.8 state_clear_time double Threshold to clear stop state [s] 2.0 stop_state_ego_speed double Threshold to check ego vehicle stopped [m/s] 0.1 Assumptions / Known limits # To perform stop planning, it is necessary to get obstacle pointclouds data. Hence, it does not plan stopping if the obstacle is in blind spot.","title":"Surround Obstacle Checker"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#surround-obstacle-checker","text":"","title":"Surround Obstacle Checker"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#purpose","text":"surround_obstacle_checker is a module to prevent moving if any obstacles is near stopping ego vehicle. This module runs only when ego vehicle is stopping.","title":"Purpose"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#inner-workings-algorithms","text":"","title":"Inner-workings / Algorithms"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#flow-chart","text":"","title":"Flow chart"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#algorithms","text":"","title":"Algorithms"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#check-data","text":"Check that surround_obstacle_checker receives no ground pointcloud, dynamic objects and current velocity data.","title":"Check data"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#get-distance-to-nearest-object","text":"Calculate distance between ego vehicle and the nearest object. In this function, it calculates the minimum distance between the polygon of ego vehicle and all points in pointclouds and the polygons of dynamic objects.","title":"Get distance to nearest object"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#stop-requirement","text":"If it satisfies all following conditions, it plans stopping. Ego vehicle is stopped It satisfies any following conditions The distance to nearest obstacle satisfies following conditions If state is State::PASS , the distance is less than surround_check_distance If state is State::STOP , the distance is less than surround_check_recover_distance If it does not satisfies the condition in 1, elapsed time from the time it satisfies the condition in 1 is less than state_clear_time","title":"Stop requirement"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#states","text":"To prevent chattering, surround_obstacle_checker manages two states. As mentioned in stop condition section, it prevents chattering by changing threshold to find surround obstacle depending on the states. State::PASS : Stop planning is released State::STOP \uff1aWhile stop planning","title":"States"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#input","text":"Name Type Description ~/input/trajectory autoware_planning_msgs::msg::Trajectory Reference trajectory /sensing/lidar/no_ground/pointcloud sensor_msgs::msg::PointCloud2 No ground pointcloud /perception/object_recognition/objects autoware_perception_msgs::msg::DynamicObjectArray Dynamic objects /localization/twist geometry_msgs::msg::TwistStamped Current twist /tf tf2_msgs::msg::TFMessage TF /tf_static tf2_msgs::msg::TFMessage TF static","title":"Input"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#output","text":"Name Type Description ~/output/trajectory autoware_planning_msgs/Trajectory Modified trajectory ~/output/no_start_reason diagnostic_msgs::msg::DiagnosticStatus No start reason ~/output/stop_reasons autoware_planning_msgs::msg::StopReasonArray Stop reasons ~/debug/marker visualization_msgs::msg::MarkerArray Marker for visualization","title":"Output"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#parameters","text":"Name Type Description Default value use_pointcloud bool Use pointcloud as obstacle check true use_dynamic_object bool Use dynamic object as obstacle check true surround_check_distance double If objects exist in this distance, transit to \"exist-surrounding-obstacle\" status [m] 0.5 surround_check_recover_distance double If no object exists in this distance, transit to \"non-surrounding-obstacle\" status [m] 0.8 state_clear_time double Threshold to clear stop state [s] 2.0 stop_state_ego_speed double Threshold to check ego vehicle stopped [m/s] 0.1","title":"Parameters"},{"location":"planning/scenario_planning/lane_driving/motion_planning/surround_obstacle_checker/surround_obstacle_checker-design/#assumptions-known-limits","text":"To perform stop planning, it is necessary to get obstacle pointclouds data. Hence, it does not plan stopping if the obstacle is in blind spot.","title":"Assumptions / Known limits"},{"location":"planning/scenario_planning/parking/costmap_generator/","text":"The costmap_generator Package # costmap_generator_node # This node reads PointCloud and/or DynamicObjectArray and creates an OccupancyGrid and GridMap . VectorMap(Lanelet2) is optional. Input topics # Name Type Description ~input/objects autoware_perception_msgs::DynamicObjectArray predicted objects, for obstacles areas ~input/points_no_ground sensor_msgs::PointCloud2 ground-removed points, for obstacle areas which can't be detected as objects ~input/vector_map autoware_lanelet2_msgs::MapBin vector map, for drivable areas ~input/scenario autoware_planning_msgs::Scenario scenarios to be activated, for node activation Output topics # Name Type Description ~output/grid_map grid_map_msgs::GridMap - costmap as GridMap, values are from 0.0 to 1.0 ~output/occupancy_grid nav_msgs::OccupancyGrid - costmap as OccupancyGrid, values are from 0 to 100 Output TFs # None How to launch # Write your remapping info in costmap_generator.launch or add args when executing roslaunch Run roslaunch costmap_generator costmap_generator.launch Parameters # Name Type Description update_rate double timer's update rate use_objects bool whether using ~input/objects or not use_points bool whether using ~input/points_no_ground or not use_wayarea bool whether using wayarea from ~input/vector_map or not costmap_frame string created costmap's coordinate vehicle_frame string vehicle's coordinate map_frame string map's coordinate grid_min_value double minimum cost for gridmap grid_max_value double maximum cost for gridmap grid_resolution double resolution for gridmap grid_length_x int size of gridmap for x direction grid_length_y int size of gridmap for y direction grid_position_x int offset from coordinate in x direction grid_position_y int offset from coordinate in y direction maximum_lidar_height_thres double maximum height threshold for pointcloud data minimum_lidar_height_thres double minimum height threshold for pointcloud data expand_rectangle_size double expand object's rectangle with this value size_of_expansion_kernel int kernel size for blurring effect on object's costmap Flowchart #","title":"The `costmap_generator` Package"},{"location":"planning/scenario_planning/parking/costmap_generator/#the-costmap_generator-package","text":"","title":"The costmap_generator Package"},{"location":"planning/scenario_planning/parking/costmap_generator/#costmap_generator_node","text":"This node reads PointCloud and/or DynamicObjectArray and creates an OccupancyGrid and GridMap . VectorMap(Lanelet2) is optional.","title":"costmap_generator_node"},{"location":"planning/scenario_planning/parking/costmap_generator/#input-topics","text":"Name Type Description ~input/objects autoware_perception_msgs::DynamicObjectArray predicted objects, for obstacles areas ~input/points_no_ground sensor_msgs::PointCloud2 ground-removed points, for obstacle areas which can't be detected as objects ~input/vector_map autoware_lanelet2_msgs::MapBin vector map, for drivable areas ~input/scenario autoware_planning_msgs::Scenario scenarios to be activated, for node activation","title":"Input topics"},{"location":"planning/scenario_planning/parking/costmap_generator/#output-topics","text":"Name Type Description ~output/grid_map grid_map_msgs::GridMap - costmap as GridMap, values are from 0.0 to 1.0 ~output/occupancy_grid nav_msgs::OccupancyGrid - costmap as OccupancyGrid, values are from 0 to 100","title":"Output topics"},{"location":"planning/scenario_planning/parking/costmap_generator/#output-tfs","text":"None","title":"Output TFs"},{"location":"planning/scenario_planning/parking/costmap_generator/#how-to-launch","text":"Write your remapping info in costmap_generator.launch or add args when executing roslaunch Run roslaunch costmap_generator costmap_generator.launch","title":"How to launch"},{"location":"planning/scenario_planning/parking/costmap_generator/#parameters","text":"Name Type Description update_rate double timer's update rate use_objects bool whether using ~input/objects or not use_points bool whether using ~input/points_no_ground or not use_wayarea bool whether using wayarea from ~input/vector_map or not costmap_frame string created costmap's coordinate vehicle_frame string vehicle's coordinate map_frame string map's coordinate grid_min_value double minimum cost for gridmap grid_max_value double maximum cost for gridmap grid_resolution double resolution for gridmap grid_length_x int size of gridmap for x direction grid_length_y int size of gridmap for y direction grid_position_x int offset from coordinate in x direction grid_position_y int offset from coordinate in y direction maximum_lidar_height_thres double maximum height threshold for pointcloud data minimum_lidar_height_thres double minimum height threshold for pointcloud data expand_rectangle_size double expand object's rectangle with this value size_of_expansion_kernel int kernel size for blurring effect on object's costmap","title":"Parameters"},{"location":"planning/scenario_planning/parking/costmap_generator/#flowchart","text":"","title":"Flowchart"},{"location":"planning/scenario_planning/parking/freespace_planner/","text":"The freespace_planner Package # freespace_planner_node # freespace_planner_node is a global path planner node that plans trajectory in the space having static/dynamic obstacles. This node is based on Hybrid A* search algorithm in astar_search package. Note Due to the constraint of trajectory following, the output trajectory will be split to include only the single direction path. In other words, the output trajectory doesn't include both forward and backward trajectories at once. Input topics # Name Type Description ~input/route autoware_planning_msgs::Route route and goal pose ~input/occupancy_grid nav_msgs::OccupancyGrid costmap, for drivable areas ~input/twist geometry_msgs::TwistStamped vehicle velocity, for checking whether vehicle is stopped ~input/scenario autoware_planning_msgs::Scenario scenarios to be activated, for node activation Output topics # Name Type Description ~output/trajectory autoware_planning_msgs::Trajectory trajectory to be followed is_completed bool (implemented as rosparam) whether all split trajectory are published Output TFs # None How to launch # Write your remapping info in freespace_planner.launch or add args when executing roslaunch roslaunch freespace_planner freespace_planner.launch Parameters # Node parameters # Parameter Type Description update_rate double timer's update rate waypoints_velocity double velocity in output trajectory (currently, only constant velocity is supported) th_arrived_distance_m double threshold distance to check if vehicle has arrived at the trajectory's endpoint th_stopped_time_sec double threshold time to check if vehicle is stopped th_stopped_velocity_mps double threshold velocity to check if vehicle is stopped th_course_out_distance_m double threshold distance to check if vehicle is out of course replan_when_obstacle_found bool whether replanning when obstacle has found on the trajectory replan_when_course_out bool whether replanning when vehicle is out of course A* search parameters # Parameter Type Description use_back bool whether using backward trajectory only_behind_solutions bool whether restricting the solutions to be behind the goal time_limit double time limit of planning robot_length double robot length robot_width double robot width robot_base2back double distance from robot's back to robot's base_link minimum_turning_radius double minimum turning radius of robot theta_size double the number of angle's discretization lateral_goal_range double goal range of lateral position longitudinal_goal_range double goal range of longitudinal position angle_goal_range double goal range of angle curve_weight double additional cost factor for curve actions reverse_weight double additional cost factor for reverse actions obstacle_threshold double threshold for regarding a certain grid as obstacle distance_heuristic_weight double heuristic weight for estimating node's cost Flowchart #","title":"The `freespace_planner` Package"},{"location":"planning/scenario_planning/parking/freespace_planner/#the-freespace_planner-package","text":"","title":"The freespace_planner Package"},{"location":"planning/scenario_planning/parking/freespace_planner/#freespace_planner_node","text":"freespace_planner_node is a global path planner node that plans trajectory in the space having static/dynamic obstacles. This node is based on Hybrid A* search algorithm in astar_search package. Note Due to the constraint of trajectory following, the output trajectory will be split to include only the single direction path. In other words, the output trajectory doesn't include both forward and backward trajectories at once.","title":"freespace_planner_node"},{"location":"planning/scenario_planning/parking/freespace_planner/#input-topics","text":"Name Type Description ~input/route autoware_planning_msgs::Route route and goal pose ~input/occupancy_grid nav_msgs::OccupancyGrid costmap, for drivable areas ~input/twist geometry_msgs::TwistStamped vehicle velocity, for checking whether vehicle is stopped ~input/scenario autoware_planning_msgs::Scenario scenarios to be activated, for node activation","title":"Input topics"},{"location":"planning/scenario_planning/parking/freespace_planner/#output-topics","text":"Name Type Description ~output/trajectory autoware_planning_msgs::Trajectory trajectory to be followed is_completed bool (implemented as rosparam) whether all split trajectory are published","title":"Output topics"},{"location":"planning/scenario_planning/parking/freespace_planner/#output-tfs","text":"None","title":"Output TFs"},{"location":"planning/scenario_planning/parking/freespace_planner/#how-to-launch","text":"Write your remapping info in freespace_planner.launch or add args when executing roslaunch roslaunch freespace_planner freespace_planner.launch","title":"How to launch"},{"location":"planning/scenario_planning/parking/freespace_planner/#parameters","text":"","title":"Parameters"},{"location":"planning/scenario_planning/parking/freespace_planner/#node-parameters","text":"Parameter Type Description update_rate double timer's update rate waypoints_velocity double velocity in output trajectory (currently, only constant velocity is supported) th_arrived_distance_m double threshold distance to check if vehicle has arrived at the trajectory's endpoint th_stopped_time_sec double threshold time to check if vehicle is stopped th_stopped_velocity_mps double threshold velocity to check if vehicle is stopped th_course_out_distance_m double threshold distance to check if vehicle is out of course replan_when_obstacle_found bool whether replanning when obstacle has found on the trajectory replan_when_course_out bool whether replanning when vehicle is out of course","title":"Node parameters"},{"location":"planning/scenario_planning/parking/freespace_planner/#a-search-parameters","text":"Parameter Type Description use_back bool whether using backward trajectory only_behind_solutions bool whether restricting the solutions to be behind the goal time_limit double time limit of planning robot_length double robot length robot_width double robot width robot_base2back double distance from robot's back to robot's base_link minimum_turning_radius double minimum turning radius of robot theta_size double the number of angle's discretization lateral_goal_range double goal range of lateral position longitudinal_goal_range double goal range of longitudinal position angle_goal_range double goal range of angle curve_weight double additional cost factor for curve actions reverse_weight double additional cost factor for reverse actions obstacle_threshold double threshold for regarding a certain grid as obstacle distance_heuristic_weight double heuristic weight for estimating node's cost","title":"A* search parameters"},{"location":"planning/scenario_planning/parking/freespace_planner/#flowchart","text":"","title":"Flowchart"},{"location":"planning/scenario_planning/scenario_selector/","text":"The scenario_selector Package # scenario_selector_node # scenario_selector_node is a node that switches trajectories from each scenario. Input topics # Name Type Description ~input/lane_driving/trajectory autoware_planning_msgs::Trajectory trajectory of LaneDriving scenario ~input/parking/trajectory autoware_planning_msgs::Trajectory trajectory of Parking scenario ~input/lanelet_map autoware_lanelet2_msgs::MapBin ~input/route autoware_planning_msgs::Route route and goal pose ~input/twist geometry_msgs::TwistStamped for checking whether vehicle is stopped is_parking_completed bool (implemented as rosparam) whether all split trajectory of Parking are published Output topics # Name Type Description ~output/scenario autoware_planning_msgs::Scenario current scenario and scenarios to be activated ~output/trajectory autoware_planning_msgs::Trajectory trajectory to be followed Output TFs # None How to launch # Write your remapping info in scenario_selector.launch or add args when executing roslaunch roslaunch scenario_selector scenario_selector.launch If you would like to use only a single scenario, roslaunch scenario_selector dummy_scenario_selector_{scenario_name}.launch Parameters # Parameter Type Description update_rate double timer's update rate th_max_message_delay_sec double threshold time of input messages' maximum delay th_arrived_distance_m double threshold distance to check if vehicle has arrived at the trajectory's endpoint th_stopped_time_sec double threshold time to check if vehicle is stopped th_stopped_velocity_mps double threshold velocity to check if vehicle is stopped Flowchart #","title":"The `scenario_selector` Package"},{"location":"planning/scenario_planning/scenario_selector/#the-scenario_selector-package","text":"","title":"The scenario_selector Package"},{"location":"planning/scenario_planning/scenario_selector/#scenario_selector_node","text":"scenario_selector_node is a node that switches trajectories from each scenario.","title":"scenario_selector_node"},{"location":"planning/scenario_planning/scenario_selector/#input-topics","text":"Name Type Description ~input/lane_driving/trajectory autoware_planning_msgs::Trajectory trajectory of LaneDriving scenario ~input/parking/trajectory autoware_planning_msgs::Trajectory trajectory of Parking scenario ~input/lanelet_map autoware_lanelet2_msgs::MapBin ~input/route autoware_planning_msgs::Route route and goal pose ~input/twist geometry_msgs::TwistStamped for checking whether vehicle is stopped is_parking_completed bool (implemented as rosparam) whether all split trajectory of Parking are published","title":"Input topics"},{"location":"planning/scenario_planning/scenario_selector/#output-topics","text":"Name Type Description ~output/scenario autoware_planning_msgs::Scenario current scenario and scenarios to be activated ~output/trajectory autoware_planning_msgs::Trajectory trajectory to be followed","title":"Output topics"},{"location":"planning/scenario_planning/scenario_selector/#output-tfs","text":"None","title":"Output TFs"},{"location":"planning/scenario_planning/scenario_selector/#how-to-launch","text":"Write your remapping info in scenario_selector.launch or add args when executing roslaunch roslaunch scenario_selector scenario_selector.launch If you would like to use only a single scenario, roslaunch scenario_selector dummy_scenario_selector_{scenario_name}.launch","title":"How to launch"},{"location":"planning/scenario_planning/scenario_selector/#parameters","text":"Parameter Type Description update_rate double timer's update rate th_max_message_delay_sec double threshold time of input messages' maximum delay th_arrived_distance_m double threshold distance to check if vehicle has arrived at the trajectory's endpoint th_stopped_time_sec double threshold time to check if vehicle is stopped th_stopped_velocity_mps double threshold velocity to check if vehicle is stopped","title":"Parameters"},{"location":"planning/scenario_planning/scenario_selector/#flowchart","text":"","title":"Flowchart"},{"location":"sensing/preprocessor/gnss/gnss_poser/","text":"gnss_poser # Overview # This is package to use GNSS with ROS messages. Install # GeographicLib # This package use GeographicLib to calculate coordinates. Download files from https://sourceforge.net/projects/geographiclib/files/distrib/ Build and install Geographiclib tar xfpz GeographicLib-1.50.1. cd GeographicLib-1.50.1 mkdir BUILD cd BUILD ../configure --prefix = /usr make sudo make install sudo cp /usr/share/cmake/GeographicLib/FindGeographicLib.cmake /usr/share/cmake-3.5/Modules install geoid datasets geographiclib-get-geoids best Ublox # If you use ublox GNSS receiver, install below package. This allows to obtain heading while vehicle is stopping. Download package https://github.com/KumarRobotics/ublox.git build package gnss_poser package # This package use gnss package in autoware. download and build Autoware download and build this package Usage # roslaunch gnss_poser gnss_poser.launch For ublox GNSS receiver roslaunch gnss_poser ubloxfix2mgrs.launch Configuration # This package use egm2008-1 for geoid datasets. Parameters can be set in Launch file.","title":"gnss_poser"},{"location":"sensing/preprocessor/gnss/gnss_poser/#gnss_poser","text":"","title":"gnss_poser"},{"location":"sensing/preprocessor/gnss/gnss_poser/#overview","text":"This is package to use GNSS with ROS messages.","title":"Overview"},{"location":"sensing/preprocessor/gnss/gnss_poser/#install","text":"","title":"Install"},{"location":"sensing/preprocessor/gnss/gnss_poser/#geographiclib","text":"This package use GeographicLib to calculate coordinates. Download files from https://sourceforge.net/projects/geographiclib/files/distrib/ Build and install Geographiclib tar xfpz GeographicLib-1.50.1. cd GeographicLib-1.50.1 mkdir BUILD cd BUILD ../configure --prefix = /usr make sudo make install sudo cp /usr/share/cmake/GeographicLib/FindGeographicLib.cmake /usr/share/cmake-3.5/Modules install geoid datasets geographiclib-get-geoids best","title":"GeographicLib"},{"location":"sensing/preprocessor/gnss/gnss_poser/#ublox","text":"If you use ublox GNSS receiver, install below package. This allows to obtain heading while vehicle is stopping. Download package https://github.com/KumarRobotics/ublox.git build package","title":"Ublox"},{"location":"sensing/preprocessor/gnss/gnss_poser/#gnss_poser-package","text":"This package use gnss package in autoware. download and build Autoware download and build this package","title":"gnss_poser package"},{"location":"sensing/preprocessor/gnss/gnss_poser/#usage","text":"roslaunch gnss_poser gnss_poser.launch For ublox GNSS receiver roslaunch gnss_poser ubloxfix2mgrs.launch","title":"Usage"},{"location":"sensing/preprocessor/gnss/gnss_poser/#configuration","text":"This package use egm2008-1 for geoid datasets. Parameters can be set in Launch file.","title":"Configuration"},{"location":"sensing/preprocessor/imu/imu_corrector/","text":"imu_corrector # Purpose # imu_corrector_node is a node that correct imu data. Correct yaw rate offset by reading the parameter. Correct yaw rate standard deviation by reading the parameter. Use the value estimated by deviation_estimator as the parameters for this node. Inputs / Outputs # Input # Name Type Description ~input sensor_msgs::msg::Imu raw imu data Output # Name Type Description ~output sensor_msgs::msg::Imu corrected imu data Parameters # Core Parameters # Name Type Description angular_velocity_offset_z double yaw rate offset [rad/s] angular_velocity_stddev_zz double yaw rate standard deviation [rad/s]","title":"imu_corrector"},{"location":"sensing/preprocessor/imu/imu_corrector/#imu_corrector","text":"","title":"imu_corrector"},{"location":"sensing/preprocessor/imu/imu_corrector/#purpose","text":"imu_corrector_node is a node that correct imu data. Correct yaw rate offset by reading the parameter. Correct yaw rate standard deviation by reading the parameter. Use the value estimated by deviation_estimator as the parameters for this node.","title":"Purpose"},{"location":"sensing/preprocessor/imu/imu_corrector/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"sensing/preprocessor/imu/imu_corrector/#input","text":"Name Type Description ~input sensor_msgs::msg::Imu raw imu data","title":"Input"},{"location":"sensing/preprocessor/imu/imu_corrector/#output","text":"Name Type Description ~output sensor_msgs::msg::Imu corrected imu data","title":"Output"},{"location":"sensing/preprocessor/imu/imu_corrector/#parameters","text":"","title":"Parameters"},{"location":"sensing/preprocessor/imu/imu_corrector/#core-parameters","text":"Name Type Description angular_velocity_offset_z double yaw rate offset [rad/s] angular_velocity_stddev_zz double yaw rate standard deviation [rad/s]","title":"Core Parameters"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/","text":"compare_elevation_map_filter # Role # Filter the ground points from the input pointcloud using an elevation map. Feature details # Compare the z of the input points with the value of elevation_map. The height difference is calculated by the binary integration of neighboring cells. Remove points whose height difference is below the height_diff_thresh . Node # Topic # Subscribed Topic # input [sensor_msgs::msg::PointCloud2] input sensor pointcloud input/elevation_map [grid_map_msgs::msg::GridMap] elevation map Published Topic # output [sensor_msgs::msg::PointCloud2] filtered point cloud TF # Published TF # None Subscribed TF # input point cloud frame to elevation map frame ex) /base_link to /map elevation map frame to input point cloud frame ex) /map to /base_link Parameter description # Name Type Description Default value map_layer_name std::string elevation map layer name elevation map_frame float frame_id of the map that is temporarily used before elevation_map is subscribed map height_diff_thresh float Remove points whose height difference is below this value [m] 0.15","title":"compare_elevation_map_filter"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#compare_elevation_map_filter","text":"","title":"compare_elevation_map_filter"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#role","text":"Filter the ground points from the input pointcloud using an elevation map.","title":"Role"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#feature-details","text":"Compare the z of the input points with the value of elevation_map. The height difference is calculated by the binary integration of neighboring cells. Remove points whose height difference is below the height_diff_thresh .","title":"Feature details"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#node","text":"","title":"Node"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#topic","text":"","title":"Topic"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#subscribed-topic","text":"input [sensor_msgs::msg::PointCloud2] input sensor pointcloud input/elevation_map [grid_map_msgs::msg::GridMap] elevation map","title":"Subscribed Topic"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#published-topic","text":"output [sensor_msgs::msg::PointCloud2] filtered point cloud","title":"Published Topic"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#tf","text":"","title":"TF"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#published-tf","text":"None","title":"Published TF"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#subscribed-tf","text":"input point cloud frame to elevation map frame ex) /base_link to /map elevation map frame to input point cloud frame ex) /map to /base_link","title":"Subscribed TF"},{"location":"sensing/preprocessor/pointcloud/pointcloud_preprocessor/src/compare_map_filter/#parameter-description","text":"Name Type Description Default value map_layer_name std::string elevation map layer name elevation map_frame float frame_id of the map that is temporarily used before elevation_map is subscribed map height_diff_thresh float Remove points whose height difference is below this value [m] 0.15","title":"Parameter description"},{"location":"sensing/preprocessor/pointcloud/tier4_pcl_extensions/","text":"","title":"Index"},{"location":"simulator/simple_planning_simulator/","text":"Simple Planning Simulator # This node simulates the vehicle motion for a vehicle command in 2D using a simple vehicle model. Interface # input # /control/vehicle_cmd [ autoware_vehicle_msgs/VehicleCommand ] : target command to drive a vehicle. /initialpose [ geometry_msgs/PoseWithCovarianceStamped ] : for initial pose /initialtwist [ geometry_msgs/TwistStamped ] : for initial velocity /planning/scenario_planning/trajectory [ autoware_planning_msgs/Trajectory ]: for z position /vehicle/engage : if true, the vehicle starts to move. if false, stops. output # /tf [ tf2_msgs/TFMessage ] : simulated vehicle pose (base_link) /vehicle/status/control_mode [ autoware_vehicle_msgs/ControlMode ] : current control mode (Auto/Manual). /vehicle/status/shift [ autoware_vehicle_msgs/ShiftStamped ] : current shift (Fwd/Rev) /vehicle/status/steering [ autoware_vehicle_msgs/Steering ] : Simulated steering angle /vehicle/status/turn_signal [ autoware_vehicle_msgs/TurnSignal ] : current turn signal (just published with NONE status.) /vehicle/status/twist [ geometry_msgs/TwistStamped ] : simulated velocity Parameter Description # Common Parameters # Name Type Description Default value add_measurement_noise bool If true, the Gaussian noise is added to the simulated results. true pos_noise_stddev double Standard deviation for position noise 0.01 rpy_noise_stddev double Standard deviation for Euler angle noise 0.0001 vel_noise_stddev double Standard deviation for longitudinal velocity noise 0.0 angvel_noise_stddev double Standard deviation for angular velocity noise 0.0 steer_noise_stddev double Standard deviation for steering angle noise 0.0001 initial_engage_state double If false, the engage command is needed to move the vehicle. true Vehicle Model Parameters # vehicle_model_type options # IDEAL_STEER : uses velocity command. The steering and velocity varies ideally as commanded. The pose is calculated by a bicycle kinematics model. DELAY_STEER : uses velocity command. The steering and velocity varies following a 1st-order delay model. The pose is calculated by a bicycle kinematics model. DELAY_STEER_ACC : uses acceleration command. The steering and acceleration varies following a 1st-order delay model. The pose is calculated by a bicycle kinematics model. Name Type Description IDEAL STEER DELAY STEER DELAY STEER \u3000 ACC Default value unit vel_time_delay double dead time for the velocity input x o x 0.25 [s] acc_time_delay double dead time for the acceleration input x x o 0.1 [s] steer_time_delay double dead time for the steering input x o o 0.24 [s] vel_time_constant double time constant of the 1st-order velocity dynamics x o x 0.61 [s] acc_time_constant double time constant of the 1st-order acceleration dynamics x x o 0.1 [s] steer_time_constant double time constant of the 1st-order steering dynamics x o o 0.27 [s] vel_lim double limit of velocity x o o 50.0 [m/s] accel_rate double limit of acceleration x o o 7.0 [m/ss] steer_lim double limit of steering angle x o o 1.0 [rad] steer_rate_lim double limit of steering angle change rate x o o 5.0 [rad/s] deadzone_delta_steer double dead zone for the steering dynamics x o o 0.0 [rad] Note : The steering/velocity/acceleration dynamics is modeled by a first order system with a deadtime in a delay model. The definition of the time constant is the time it takes for the step response to rise up to 63% of its final value. The deadtime is a delay in the response to a control input.","title":"Simple Planning Simulator"},{"location":"simulator/simple_planning_simulator/#simple-planning-simulator","text":"This node simulates the vehicle motion for a vehicle command in 2D using a simple vehicle model.","title":"Simple Planning Simulator"},{"location":"simulator/simple_planning_simulator/#interface","text":"","title":"Interface"},{"location":"simulator/simple_planning_simulator/#input","text":"/control/vehicle_cmd [ autoware_vehicle_msgs/VehicleCommand ] : target command to drive a vehicle. /initialpose [ geometry_msgs/PoseWithCovarianceStamped ] : for initial pose /initialtwist [ geometry_msgs/TwistStamped ] : for initial velocity /planning/scenario_planning/trajectory [ autoware_planning_msgs/Trajectory ]: for z position /vehicle/engage : if true, the vehicle starts to move. if false, stops.","title":"input"},{"location":"simulator/simple_planning_simulator/#output","text":"/tf [ tf2_msgs/TFMessage ] : simulated vehicle pose (base_link) /vehicle/status/control_mode [ autoware_vehicle_msgs/ControlMode ] : current control mode (Auto/Manual). /vehicle/status/shift [ autoware_vehicle_msgs/ShiftStamped ] : current shift (Fwd/Rev) /vehicle/status/steering [ autoware_vehicle_msgs/Steering ] : Simulated steering angle /vehicle/status/turn_signal [ autoware_vehicle_msgs/TurnSignal ] : current turn signal (just published with NONE status.) /vehicle/status/twist [ geometry_msgs/TwistStamped ] : simulated velocity","title":"output"},{"location":"simulator/simple_planning_simulator/#parameter-description","text":"","title":"Parameter Description"},{"location":"simulator/simple_planning_simulator/#common-parameters","text":"Name Type Description Default value add_measurement_noise bool If true, the Gaussian noise is added to the simulated results. true pos_noise_stddev double Standard deviation for position noise 0.01 rpy_noise_stddev double Standard deviation for Euler angle noise 0.0001 vel_noise_stddev double Standard deviation for longitudinal velocity noise 0.0 angvel_noise_stddev double Standard deviation for angular velocity noise 0.0 steer_noise_stddev double Standard deviation for steering angle noise 0.0001 initial_engage_state double If false, the engage command is needed to move the vehicle. true","title":"Common Parameters"},{"location":"simulator/simple_planning_simulator/#vehicle-model-parameters","text":"","title":"Vehicle Model Parameters"},{"location":"simulator/simple_planning_simulator/#vehicle_model_type-options","text":"IDEAL_STEER : uses velocity command. The steering and velocity varies ideally as commanded. The pose is calculated by a bicycle kinematics model. DELAY_STEER : uses velocity command. The steering and velocity varies following a 1st-order delay model. The pose is calculated by a bicycle kinematics model. DELAY_STEER_ACC : uses acceleration command. The steering and acceleration varies following a 1st-order delay model. The pose is calculated by a bicycle kinematics model. Name Type Description IDEAL STEER DELAY STEER DELAY STEER \u3000 ACC Default value unit vel_time_delay double dead time for the velocity input x o x 0.25 [s] acc_time_delay double dead time for the acceleration input x x o 0.1 [s] steer_time_delay double dead time for the steering input x o o 0.24 [s] vel_time_constant double time constant of the 1st-order velocity dynamics x o x 0.61 [s] acc_time_constant double time constant of the 1st-order acceleration dynamics x x o 0.1 [s] steer_time_constant double time constant of the 1st-order steering dynamics x o o 0.27 [s] vel_lim double limit of velocity x o o 50.0 [m/s] accel_rate double limit of acceleration x o o 7.0 [m/ss] steer_lim double limit of steering angle x o o 1.0 [rad] steer_rate_lim double limit of steering angle change rate x o o 5.0 [rad/s] deadzone_delta_steer double dead zone for the steering dynamics x o o 0.0 [rad] Note : The steering/velocity/acceleration dynamics is modeled by a first order system with a deadtime in a delay model. The definition of the time constant is the time it takes for the step response to rise up to 63% of its final value. The deadtime is a delay in the response to a control input.","title":"vehicle_model_type options"},{"location":"simulator/simple_planning_simulator/scripts/README_fitParamDelayInputModel/","text":"fitParamDelayInputModel.py scripts # How to use # python fitParamDelayInputModel.py --bag_file [ bagfile ] ( --cutoff_time [ cutoff_time ] --cutoff_freq [ cutoff_freq ] --min_delay [ min_delay ] --max_delay [ max_delay ] --delay_incr [ delay_incr ]) # in round brackets is optional arguments python fitParamDelayInputModel.py --help # for more information Requirements python packages # numpy pandas Required topics # autoware_msgs::VehicleCmd /vehicle_cmd: assuming vehicle_cmd/ctrl_cmd/steering_angle is the steering angle input [rad] vehicle_cmd/ctrl_cmd/linear_velocity is the vehicle velocity input [m/s] autoware_msgs::VehicleStatus /vehicle_status : assuming vehicle_status/angle is the measured steering angle [rad] vehicle_status/speed is the measured vehicle speed [km/h] Description # Parameter fitting for Input Delay Model (First Order System with Dead Time) with rosbag file input Arguments explaining: CUTOFF_TIME: Cutoff time[sec]. Rosbag file often was start recording before autoware was run. Time before autoware was run should be cut off. This script will only consider data from t=cutoff_time to the end of the bag file (default is 1.0) CUTOFF_FREQ: Cutoff freq for low-pass filter[Hz], negative value will disable low-pass filter (default is 0.1) MIN_DELAY: Min value for searching delay loop (default is 0.1) MAX_DELAY: Max value for searching delay loop (default is 1.0) DELAY_INCR: Step value for searching delay loop (default is 0.01)","title":"fitParamDelayInputModel.py scripts"},{"location":"simulator/simple_planning_simulator/scripts/README_fitParamDelayInputModel/#fitparamdelayinputmodelpy-scripts","text":"","title":"fitParamDelayInputModel.py scripts"},{"location":"simulator/simple_planning_simulator/scripts/README_fitParamDelayInputModel/#how-to-use","text":"python fitParamDelayInputModel.py --bag_file [ bagfile ] ( --cutoff_time [ cutoff_time ] --cutoff_freq [ cutoff_freq ] --min_delay [ min_delay ] --max_delay [ max_delay ] --delay_incr [ delay_incr ]) # in round brackets is optional arguments python fitParamDelayInputModel.py --help # for more information","title":"How to use"},{"location":"simulator/simple_planning_simulator/scripts/README_fitParamDelayInputModel/#requirements-python-packages","text":"numpy pandas","title":"Requirements python packages"},{"location":"simulator/simple_planning_simulator/scripts/README_fitParamDelayInputModel/#required-topics","text":"autoware_msgs::VehicleCmd /vehicle_cmd: assuming vehicle_cmd/ctrl_cmd/steering_angle is the steering angle input [rad] vehicle_cmd/ctrl_cmd/linear_velocity is the vehicle velocity input [m/s] autoware_msgs::VehicleStatus /vehicle_status : assuming vehicle_status/angle is the measured steering angle [rad] vehicle_status/speed is the measured vehicle speed [km/h]","title":"Required topics"},{"location":"simulator/simple_planning_simulator/scripts/README_fitParamDelayInputModel/#description","text":"Parameter fitting for Input Delay Model (First Order System with Dead Time) with rosbag file input Arguments explaining: CUTOFF_TIME: Cutoff time[sec]. Rosbag file often was start recording before autoware was run. Time before autoware was run should be cut off. This script will only consider data from t=cutoff_time to the end of the bag file (default is 1.0) CUTOFF_FREQ: Cutoff freq for low-pass filter[Hz], negative value will disable low-pass filter (default is 0.1) MIN_DELAY: Min value for searching delay loop (default is 0.1) MAX_DELAY: Max value for searching delay loop (default is 1.0) DELAY_INCR: Step value for searching delay loop (default is 0.01)","title":"Description"},{"location":"simulator/util/fault_injection/","text":"fault_injection # This package is used to convert pseudo system faults from PSim to Diagnostics and notify Autoware. The component diagram is as follows: Test # source install/setup.bash cd fault_injection launch_test test/test_fault_injection_node.test.py","title":"fault_injection"},{"location":"simulator/util/fault_injection/#fault_injection","text":"This package is used to convert pseudo system faults from PSim to Diagnostics and notify Autoware. The component diagram is as follows:","title":"fault_injection"},{"location":"simulator/util/fault_injection/#test","text":"source install/setup.bash cd fault_injection launch_test test/test_fault_injection_node.test.py","title":"Test"},{"location":"system/autoware_error_monitor/","text":"autoware_error_monitor # Purpose # Autoware Error Monitor has two main functions. It is to judge the system hazard level from the aggregated diagnostic information of each module of Autoware. It enables automatic recovery from the emergency state. Inner-workings / Algorithms # State Transition # updateEmergencyHoldingCondition Flow Chart # Inputs / Outputs # Input # Name Type Description /diagnostics_agg diagnostic_msgs::msg::DiagnosticArray Diagnostic information aggregated based diagnostic_aggregator setting is used to /autoware/state autoware_system_msgs::msg::AutowareState Required to ignore error during Route, Planning and Finalizing. /control/current_gate_mode autoware_control_msgs::msg::GateMode Required to select the appropriate module from autonomous_driving or remote_control /vehicle/status/control_mode autoware_vehicle_msgs::msg::ControlMode Required to not hold emergency during manual driving Output # Name Type Description /system/emergency/hazard_status autoware_system_msgs::msg::HazardStatusStamped HazardStatus contains system hazard level, emergency hold status and failure details /diagnostics_err diagnostic_msgs::msg::DiagnosticArray This has the same contents as HazardStatus. This is used for visualization Parameters # Node Parameters # Name Type Default Value Explanation ignore_missing_diagnostics bool false If this parameter is turned off, it will be ignored if required modules have not been received. add_leaf_diagnostics bool true Required to use children diagnostics. diag_timeout_sec double 1.0 (sec) If required diagnostic is not received for a diag_timeout_sec , the diagnostic state become STALE state. data_ready_timeout double 30.0 If input topics required for autoware_error_monitor are not available for data_ready_timeout seconds, autoware_state will translate to emergency state. Core Parameters # Name Type Default Value Explanation hazard_recovery_timeout double 5.0 The vehicle can recovery to normal driving if emergencies disappear during hazard_recovery_timeout . use_emergency_hold bool false If it is false, the vehicle will return to normal as soon as emergencies disappear. use_emergency_hold_in_manual_driving bool false If this parameter is turned off, emergencies will be ignored during manual driving. emergency_hazard_level int 2 If hazard_level is more than emergency_hazard_level, autoware state will translate to emergency state Assumptions / Known limits # TBD.","title":"autoware_error_monitor"},{"location":"system/autoware_error_monitor/#autoware_error_monitor","text":"","title":"autoware_error_monitor"},{"location":"system/autoware_error_monitor/#purpose","text":"Autoware Error Monitor has two main functions. It is to judge the system hazard level from the aggregated diagnostic information of each module of Autoware. It enables automatic recovery from the emergency state.","title":"Purpose"},{"location":"system/autoware_error_monitor/#inner-workings-algorithms","text":"","title":"Inner-workings / Algorithms"},{"location":"system/autoware_error_monitor/#state-transition","text":"","title":"State Transition"},{"location":"system/autoware_error_monitor/#updateemergencyholdingcondition-flow-chart","text":"","title":"updateEmergencyHoldingCondition Flow Chart"},{"location":"system/autoware_error_monitor/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"system/autoware_error_monitor/#input","text":"Name Type Description /diagnostics_agg diagnostic_msgs::msg::DiagnosticArray Diagnostic information aggregated based diagnostic_aggregator setting is used to /autoware/state autoware_system_msgs::msg::AutowareState Required to ignore error during Route, Planning and Finalizing. /control/current_gate_mode autoware_control_msgs::msg::GateMode Required to select the appropriate module from autonomous_driving or remote_control /vehicle/status/control_mode autoware_vehicle_msgs::msg::ControlMode Required to not hold emergency during manual driving","title":"Input"},{"location":"system/autoware_error_monitor/#output","text":"Name Type Description /system/emergency/hazard_status autoware_system_msgs::msg::HazardStatusStamped HazardStatus contains system hazard level, emergency hold status and failure details /diagnostics_err diagnostic_msgs::msg::DiagnosticArray This has the same contents as HazardStatus. This is used for visualization","title":"Output"},{"location":"system/autoware_error_monitor/#parameters","text":"","title":"Parameters"},{"location":"system/autoware_error_monitor/#node-parameters","text":"Name Type Default Value Explanation ignore_missing_diagnostics bool false If this parameter is turned off, it will be ignored if required modules have not been received. add_leaf_diagnostics bool true Required to use children diagnostics. diag_timeout_sec double 1.0 (sec) If required diagnostic is not received for a diag_timeout_sec , the diagnostic state become STALE state. data_ready_timeout double 30.0 If input topics required for autoware_error_monitor are not available for data_ready_timeout seconds, autoware_state will translate to emergency state.","title":"Node Parameters"},{"location":"system/autoware_error_monitor/#core-parameters","text":"Name Type Default Value Explanation hazard_recovery_timeout double 5.0 The vehicle can recovery to normal driving if emergencies disappear during hazard_recovery_timeout . use_emergency_hold bool false If it is false, the vehicle will return to normal as soon as emergencies disappear. use_emergency_hold_in_manual_driving bool false If this parameter is turned off, emergencies will be ignored during manual driving. emergency_hazard_level int 2 If hazard_level is more than emergency_hazard_level, autoware state will translate to emergency state","title":"Core Parameters"},{"location":"system/autoware_error_monitor/#assumptions-known-limits","text":"TBD.","title":"Assumptions / Known limits"},{"location":"system/emergency_handler/","text":"emergency_handler # Purpose # Emergency Handler is a node to select proper MRM from from system failure state contained in HazardStatus. Inner-workings / Algorithms # TBD. Inputs / Outputs # Input # Name Type Description /system/emergency/hazard_status autoware_system_msgs::msg::HazardStatusStamped Used to select proper MRM from system failure state contained in HazardStatus /control/vehicle_cmd autoware_vehicle_msgs::msg::VehicleCommand Used as reference when generate Emergency Control Command /localization/twist geometry_msgs::msg::TwistStamped Used to decide whether vehicle is stopped or not Output # Name Type Description /system/emergency/control_cmd autoware_control_msgs::msg::ControlCommandStamped Required to execute proper MRM \"/system/emergency/shift_cmd\" autoware_vehicle_msgs::msg::ShiftStamped Required to execute proper MRM \"/system/emergency/turn_signal_cmd\" autoware_vehicle_msgs::msg::TurnSignal Required to execute proper MRM \"/system/emergency/emergency_state\" autoware_system_msgs::msg::EmergencyStateStamped Used to inform the emergency situation of the vehicle Parameters # Node Parameters # Name Type Default Value Explanation update_rate int 10 Timer callback period. Core Parameters # Name Type Default Value Explanation timeout_hazard_status double 0.5 If the input hazard_status topic cannot be received for more than timeout_hazard_status , vehicle will make an emergency stop. use_parking_after_stopped bool false If this parameter is true, it will publish PARKING shift command. turning_hazard_on.emergency bool true If this parameter is true, hazard lamps will be turned on during emergency state. Assumptions / Known limits # TBD.","title":"emergency_handler"},{"location":"system/emergency_handler/#emergency_handler","text":"","title":"emergency_handler"},{"location":"system/emergency_handler/#purpose","text":"Emergency Handler is a node to select proper MRM from from system failure state contained in HazardStatus.","title":"Purpose"},{"location":"system/emergency_handler/#inner-workings-algorithms","text":"TBD.","title":"Inner-workings / Algorithms"},{"location":"system/emergency_handler/#inputs-outputs","text":"","title":"Inputs / Outputs"},{"location":"system/emergency_handler/#input","text":"Name Type Description /system/emergency/hazard_status autoware_system_msgs::msg::HazardStatusStamped Used to select proper MRM from system failure state contained in HazardStatus /control/vehicle_cmd autoware_vehicle_msgs::msg::VehicleCommand Used as reference when generate Emergency Control Command /localization/twist geometry_msgs::msg::TwistStamped Used to decide whether vehicle is stopped or not","title":"Input"},{"location":"system/emergency_handler/#output","text":"Name Type Description /system/emergency/control_cmd autoware_control_msgs::msg::ControlCommandStamped Required to execute proper MRM \"/system/emergency/shift_cmd\" autoware_vehicle_msgs::msg::ShiftStamped Required to execute proper MRM \"/system/emergency/turn_signal_cmd\" autoware_vehicle_msgs::msg::TurnSignal Required to execute proper MRM \"/system/emergency/emergency_state\" autoware_system_msgs::msg::EmergencyStateStamped Used to inform the emergency situation of the vehicle","title":"Output"},{"location":"system/emergency_handler/#parameters","text":"","title":"Parameters"},{"location":"system/emergency_handler/#node-parameters","text":"Name Type Default Value Explanation update_rate int 10 Timer callback period.","title":"Node Parameters"},{"location":"system/emergency_handler/#core-parameters","text":"Name Type Default Value Explanation timeout_hazard_status double 0.5 If the input hazard_status topic cannot be received for more than timeout_hazard_status , vehicle will make an emergency stop. use_parking_after_stopped bool false If this parameter is true, it will publish PARKING shift command. turning_hazard_on.emergency bool true If this parameter is true, hazard lamps will be turned on during emergency state.","title":"Core Parameters"},{"location":"system/emergency_handler/#assumptions-known-limits","text":"TBD.","title":"Assumptions / Known limits"},{"location":"system/system_monitor/","text":"System Monitor for Autoware # Further improvement of system monitor functionality for Autoware. Description # This package provides the following nodes for monitoring system: CPU Monitor HDD Monitor Memory Monitor Network Monitor NTP Monitor Process Monitor GPU Monitor Supported architecture # x86_64 arm64v8/aarch64 Operation confirmed platform # PC system intel core i7 NVIDIA Jetson AGX Xavier Raspberry Pi4 Model B How to use # Use colcon build and launch in the same way as other packages. colcon build source install/setup.bash ros2 launch system_monitor system_monitor.launch.xml CPU and GPU monitoring method differs depending on platform. CMake automatically chooses source to be built according to build environment. If you build this package on intel platform, CPU monitor and GPU monitor which run on intel platform are built. ROS topics published by system monitor # Every topic is published in 1 minute interval. CPU Monitor HDD Monitor Mem Monitor Net Monitor NTP Monitor Process Monitor GPU Monitor [Usage] \u2713\uff1aSupported, -\uff1aNot supported Node Message Intel arm64(tegra) arm64(raspi) Notes CPU Monitor CPU Temperature \u2713 \u2713 \u2713 CPU Usage \u2713 \u2713 \u2713 CPU Load Average \u2713 \u2713 \u2713 CPU Thermal Throttling \u2713 - \u2713 CPU Frequency \u2713 \u2713 \u2713 Notification of frequency only, normally error not generated. HDD Monitor HDD Temperature \u2713 \u2713 \u2713 HDD Usage \u2713 \u2713 \u2713 Memory Monitor Memory Usage \u2713 \u2713 \u2713 Net Monitor Network Usage \u2713 \u2713 \u2713 NTP Monitor NTP Offset \u2713 \u2713 \u2713 Process Monitor Tasks Summary \u2713 \u2713 \u2713 High-load Proc[0-9] \u2713 \u2713 \u2713 High-mem Proc[0-9] \u2713 \u2713 \u2713 GPU Monitor GPU Temperature \u2713 \u2713 - GPU Usage \u2713 \u2713 - GPU Memory Usage \u2713 - - GPU Thermal Throttling \u2713 - - GPU Frequency - \u2713 - ROS parameters # See ROS parameters . Notes # CPU monitor for intel platform # Thermal throttling event can be monitored by reading contents of MSR(Model Specific Register), and accessing MSR is only allowed for root by default, so this package provides the following approach to minimize security risks as much as possible: Provide a small program named 'msr_reader' which accesses MSR and sends thermal throttling status to CPU monitor by using socket programming. Run 'msr_reader' as a specific user instead of root. CPU monitor is able to know the status as an unprivileged user since thermal throttling status is sent by socket communication. Instructions before starting # Create a user to run 'msr_reader'. sudo adduser <username> Load kernel module 'msr' into your target system. The path '/dev/cpu/CPUNUM/msr' appears. sudo modprobe msr Allow user to access MSR with read-only privilege using the Access Control List (ACL). sudo setfacl -m u:<username>:r /dev/cpu/*/msr Assign capability to 'msr_reader' since msr kernel module requires rawio capability. sudo setcap cap_sys_rawio = ep install/system_monitor/lib/system_monitor/msr_reader Run 'msr_reader' as the user you created, and run system_monitor as a generic user. su <username> install/system_monitor/lib/system_monitor/msr_reader See also # msr_reader HDD Monitor # Generally, S.M.A.R.T. information is used to monitor HDD temperature, and normally accessing disk device node is allowed for root user or disk group. As with the CPU monitor, this package provides an approach to minimize security risks as much as possible: Provide a small program named 'hdd_reader' which accesses S.M.A.R.T. information and sends HDD temperature to HDD monitor by using socket programming. Run 'hdd_reader' as a specific user. HDD monitor is able to know HDD temperature as an unprivileged user since HDD temperature is sent by socket communication. Instructions before starting # Create a user to run 'hdd_reader'. sudo adduser <username> Add user to the disk group. sudo usermod -a -G disk <username> Assign capabilities to 'hdd_reader' since SCSI kernel module requires rawio capability to send ATA PASS-THROUGH (12) command and NVMe kernel module requires admin capability to send Admin Command. sudo setcap 'cap_sys_rawio=ep cap_sys_admin=ep' install/system_monitor/lib/system_monitor/hdd_reader Run 'hdd_reader' as the user you created, and run system_monitor as a generic user. su <username> install/system_monitor/lib/system_monitor/hdd_reader See also # hdd_reader GPU Monitor for intel platform # Currently GPU monitor for intel platform only supports NVIDIA GPU whose information can be accessed by NVML API. Also you need to install CUDA libraries. For installation instructions for CUDA 10.0, see NVIDIA CUDA Installation Guide for Linux . UML diagrams # See Class diagrams . See Sequence diagrams .","title":"System Monitor for Autoware"},{"location":"system/system_monitor/#system-monitor-for-autoware","text":"Further improvement of system monitor functionality for Autoware.","title":"System Monitor for Autoware"},{"location":"system/system_monitor/#description","text":"This package provides the following nodes for monitoring system: CPU Monitor HDD Monitor Memory Monitor Network Monitor NTP Monitor Process Monitor GPU Monitor","title":"Description"},{"location":"system/system_monitor/#supported-architecture","text":"x86_64 arm64v8/aarch64","title":"Supported architecture"},{"location":"system/system_monitor/#operation-confirmed-platform","text":"PC system intel core i7 NVIDIA Jetson AGX Xavier Raspberry Pi4 Model B","title":"Operation confirmed platform"},{"location":"system/system_monitor/#how-to-use","text":"Use colcon build and launch in the same way as other packages. colcon build source install/setup.bash ros2 launch system_monitor system_monitor.launch.xml CPU and GPU monitoring method differs depending on platform. CMake automatically chooses source to be built according to build environment. If you build this package on intel platform, CPU monitor and GPU monitor which run on intel platform are built.","title":"How to use"},{"location":"system/system_monitor/#ros-topics-published-by-system-monitor","text":"Every topic is published in 1 minute interval. CPU Monitor HDD Monitor Mem Monitor Net Monitor NTP Monitor Process Monitor GPU Monitor [Usage] \u2713\uff1aSupported, -\uff1aNot supported Node Message Intel arm64(tegra) arm64(raspi) Notes CPU Monitor CPU Temperature \u2713 \u2713 \u2713 CPU Usage \u2713 \u2713 \u2713 CPU Load Average \u2713 \u2713 \u2713 CPU Thermal Throttling \u2713 - \u2713 CPU Frequency \u2713 \u2713 \u2713 Notification of frequency only, normally error not generated. HDD Monitor HDD Temperature \u2713 \u2713 \u2713 HDD Usage \u2713 \u2713 \u2713 Memory Monitor Memory Usage \u2713 \u2713 \u2713 Net Monitor Network Usage \u2713 \u2713 \u2713 NTP Monitor NTP Offset \u2713 \u2713 \u2713 Process Monitor Tasks Summary \u2713 \u2713 \u2713 High-load Proc[0-9] \u2713 \u2713 \u2713 High-mem Proc[0-9] \u2713 \u2713 \u2713 GPU Monitor GPU Temperature \u2713 \u2713 - GPU Usage \u2713 \u2713 - GPU Memory Usage \u2713 - - GPU Thermal Throttling \u2713 - - GPU Frequency - \u2713 -","title":"ROS topics published by system monitor"},{"location":"system/system_monitor/#ros-parameters","text":"See ROS parameters .","title":"ROS parameters"},{"location":"system/system_monitor/#notes","text":"","title":"Notes"},{"location":"system/system_monitor/#cpu-monitor-for-intel-platform","text":"Thermal throttling event can be monitored by reading contents of MSR(Model Specific Register), and accessing MSR is only allowed for root by default, so this package provides the following approach to minimize security risks as much as possible: Provide a small program named 'msr_reader' which accesses MSR and sends thermal throttling status to CPU monitor by using socket programming. Run 'msr_reader' as a specific user instead of root. CPU monitor is able to know the status as an unprivileged user since thermal throttling status is sent by socket communication.","title":"CPU monitor for intel platform"},{"location":"system/system_monitor/#instructions-before-starting","text":"Create a user to run 'msr_reader'. sudo adduser <username> Load kernel module 'msr' into your target system. The path '/dev/cpu/CPUNUM/msr' appears. sudo modprobe msr Allow user to access MSR with read-only privilege using the Access Control List (ACL). sudo setfacl -m u:<username>:r /dev/cpu/*/msr Assign capability to 'msr_reader' since msr kernel module requires rawio capability. sudo setcap cap_sys_rawio = ep install/system_monitor/lib/system_monitor/msr_reader Run 'msr_reader' as the user you created, and run system_monitor as a generic user. su <username> install/system_monitor/lib/system_monitor/msr_reader","title":"Instructions before starting"},{"location":"system/system_monitor/#see-also","text":"msr_reader","title":"See also"},{"location":"system/system_monitor/#hdd-monitor","text":"Generally, S.M.A.R.T. information is used to monitor HDD temperature, and normally accessing disk device node is allowed for root user or disk group. As with the CPU monitor, this package provides an approach to minimize security risks as much as possible: Provide a small program named 'hdd_reader' which accesses S.M.A.R.T. information and sends HDD temperature to HDD monitor by using socket programming. Run 'hdd_reader' as a specific user. HDD monitor is able to know HDD temperature as an unprivileged user since HDD temperature is sent by socket communication.","title":"HDD Monitor"},{"location":"system/system_monitor/#instructions-before-starting_1","text":"Create a user to run 'hdd_reader'. sudo adduser <username> Add user to the disk group. sudo usermod -a -G disk <username> Assign capabilities to 'hdd_reader' since SCSI kernel module requires rawio capability to send ATA PASS-THROUGH (12) command and NVMe kernel module requires admin capability to send Admin Command. sudo setcap 'cap_sys_rawio=ep cap_sys_admin=ep' install/system_monitor/lib/system_monitor/hdd_reader Run 'hdd_reader' as the user you created, and run system_monitor as a generic user. su <username> install/system_monitor/lib/system_monitor/hdd_reader","title":"Instructions before starting"},{"location":"system/system_monitor/#see-also_1","text":"hdd_reader","title":"See also"},{"location":"system/system_monitor/#gpu-monitor-for-intel-platform","text":"Currently GPU monitor for intel platform only supports NVIDIA GPU whose information can be accessed by NVML API. Also you need to install CUDA libraries. For installation instructions for CUDA 10.0, see NVIDIA CUDA Installation Guide for Linux .","title":"GPU Monitor for intel platform"},{"location":"system/system_monitor/#uml-diagrams","text":"See Class diagrams . See Sequence diagrams .","title":"UML diagrams"},{"location":"system/system_monitor/docs/class_diagrams/","text":"Class diagrams # CPU Monitor # HDD Monitor # Memory Monitor # Net Monitor # NTP Monitor # Process Monitor # GPU Monitor #","title":"Class diagrams"},{"location":"system/system_monitor/docs/class_diagrams/#class-diagrams","text":"","title":"Class diagrams"},{"location":"system/system_monitor/docs/class_diagrams/#cpu-monitor","text":"","title":"CPU Monitor"},{"location":"system/system_monitor/docs/class_diagrams/#hdd-monitor","text":"","title":"HDD Monitor"},{"location":"system/system_monitor/docs/class_diagrams/#memory-monitor","text":"","title":"Memory Monitor"},{"location":"system/system_monitor/docs/class_diagrams/#net-monitor","text":"","title":"Net Monitor"},{"location":"system/system_monitor/docs/class_diagrams/#ntp-monitor","text":"","title":"NTP Monitor"},{"location":"system/system_monitor/docs/class_diagrams/#process-monitor","text":"","title":"Process Monitor"},{"location":"system/system_monitor/docs/class_diagrams/#gpu-monitor","text":"","title":"GPU Monitor"},{"location":"system/system_monitor/docs/hdd_reader/","text":"hdd_reader # Name # hdd_reader - Read S.M.A.R.T. information for monitoring HDD temperature Synopsis # hdd_reader [OPTION] Description # Read S.M.A.R.T. information for monitoring HDD temperature. This runs as a daemon process and listens to a TCP/IP port (7635 by default). Options: -h, --help Display help -p, --port # Port number to listen to Exit status: Returns 0 if OK; non-zero otherwise. Notes # The 'hdd_reader' accesses minimal data enough to get Model number, Serial number, and HDD temperature. This is an approach to limit its functionality, however, the functionality can be expanded for further improvements and considerations in the future. [ATA] # Purpose Name Length Model number, Serial number IDENTIFY DEVICE data 256 words(512 bytes) HDD temperature SMART READ DATA 256 words(512 bytes) For details please see the documents below. ATA Command Set - 4 (ACS-4) ATA/ATAPI Command Set - 3 (ACS-3) SMART Attribute Overview SMART Attribute Annex [NVMe] # Purpose Name Length Model number, Serial number Identify Controller data structure 4096 bytes HDD temperature SMART / Health Information 1 Dword(4 bytes) For details please see the documents below. NVM Express 1.2b Operation confirmed drives # SAMSUNG MZVLB1T0HALR (SSD) Western Digital My Passport (Portable HDD)","title":"hdd_reader"},{"location":"system/system_monitor/docs/hdd_reader/#hdd_reader","text":"","title":"hdd_reader"},{"location":"system/system_monitor/docs/hdd_reader/#name","text":"hdd_reader - Read S.M.A.R.T. information for monitoring HDD temperature","title":"Name"},{"location":"system/system_monitor/docs/hdd_reader/#synopsis","text":"hdd_reader [OPTION]","title":"Synopsis"},{"location":"system/system_monitor/docs/hdd_reader/#description","text":"Read S.M.A.R.T. information for monitoring HDD temperature. This runs as a daemon process and listens to a TCP/IP port (7635 by default). Options: -h, --help Display help -p, --port # Port number to listen to Exit status: Returns 0 if OK; non-zero otherwise.","title":"Description"},{"location":"system/system_monitor/docs/hdd_reader/#notes","text":"The 'hdd_reader' accesses minimal data enough to get Model number, Serial number, and HDD temperature. This is an approach to limit its functionality, however, the functionality can be expanded for further improvements and considerations in the future.","title":"Notes"},{"location":"system/system_monitor/docs/hdd_reader/#ata","text":"Purpose Name Length Model number, Serial number IDENTIFY DEVICE data 256 words(512 bytes) HDD temperature SMART READ DATA 256 words(512 bytes) For details please see the documents below. ATA Command Set - 4 (ACS-4) ATA/ATAPI Command Set - 3 (ACS-3) SMART Attribute Overview SMART Attribute Annex","title":"[ATA]"},{"location":"system/system_monitor/docs/hdd_reader/#nvme","text":"Purpose Name Length Model number, Serial number Identify Controller data structure 4096 bytes HDD temperature SMART / Health Information 1 Dword(4 bytes) For details please see the documents below. NVM Express 1.2b","title":"[NVMe]"},{"location":"system/system_monitor/docs/hdd_reader/#operation-confirmed-drives","text":"SAMSUNG MZVLB1T0HALR (SSD) Western Digital My Passport (Portable HDD)","title":"Operation confirmed drives"},{"location":"system/system_monitor/docs/msr_reader/","text":"msr_reader # Name # msr_reader - Read MSR register for monitoring thermal throttling event Synopsis # msr_reader [OPTION] Description # Read MSR register for monitoring thermal throttling event. This runs as a daemon process and listens to a TCP/IP port (7634 by default). Options: -h, --help Display help -p, --port # Port number to listen to Exit status: Returns 0 if OK; non-zero otherwise. Notes # The 'msr_reader' accesses minimal data enough to get thermal throttling event. This is an approach to limit its functionality, however, the functionality can be expanded for further improvements and considerations in the future. Register Address Name Length 1B1H IA32_PACKAGE_THERM_STATUS 64bit For details please see the documents below. Intel\u00ae 64 and IA-32 ArchitecturesSoftware Developer\u2019s Manual Operation confirmed platform # PC system intel core i7","title":"msr_reader"},{"location":"system/system_monitor/docs/msr_reader/#msr_reader","text":"","title":"msr_reader"},{"location":"system/system_monitor/docs/msr_reader/#name","text":"msr_reader - Read MSR register for monitoring thermal throttling event","title":"Name"},{"location":"system/system_monitor/docs/msr_reader/#synopsis","text":"msr_reader [OPTION]","title":"Synopsis"},{"location":"system/system_monitor/docs/msr_reader/#description","text":"Read MSR register for monitoring thermal throttling event. This runs as a daemon process and listens to a TCP/IP port (7634 by default). Options: -h, --help Display help -p, --port # Port number to listen to Exit status: Returns 0 if OK; non-zero otherwise.","title":"Description"},{"location":"system/system_monitor/docs/msr_reader/#notes","text":"The 'msr_reader' accesses minimal data enough to get thermal throttling event. This is an approach to limit its functionality, however, the functionality can be expanded for further improvements and considerations in the future. Register Address Name Length 1B1H IA32_PACKAGE_THERM_STATUS 64bit For details please see the documents below. Intel\u00ae 64 and IA-32 ArchitecturesSoftware Developer\u2019s Manual","title":"Notes"},{"location":"system/system_monitor/docs/msr_reader/#operation-confirmed-platform","text":"PC system intel core i7","title":"Operation confirmed platform"},{"location":"system/system_monitor/docs/ros_parameters/","text":"ROS parameters # CPU Monitor # cpu_monitor: Name Type Unit Default Notes temp_warn float DegC 90.0 Generates warning when CPU temperature reaches a specified value or higher. temp_error float DegC 95.0 Generates error when CPU temperature reaches a specified value or higher. usage_warn float %(1e-2) 0.90 Generates warning when CPU usage reaches a specified value or higher. usage_error float %(1e-2) 1.00 Generates error when CPU usage reaches a specified value or higher. load1_warn float %(1e-2) 0.90 Generates warning when load average 1min reaches a specified value or higher. load5_warn float %(1e-2) 0.80 Generates warning when load average 5min reaches a specified value or higher. msr_reader_port int n/a 7634 Port number to connect to msr_reader. HDD Monitor # hdd_monitor: disks: Name Type Unit Default Notes name string n/a none The disk name to monitor temperature. (e.g. /dev/sda) temp_error float DegC 55.0 Generates warning when HDD temperature reaches a specified value or higher. temp_error float DegC 70.0 Generates error when HDD temperature reaches a specified value or higher. hdd_monitor: Name Type Unit Default Notes hdd_reader_port int n/a 7635 Port number to connect to hdd_reader. usage_warn float %(1e-2) 0.95 Generates warning when disk usage reaches a specified value or higher. usage_error float %(1e-2) 0.99 Generates error when disk usage reaches a specified value or higher. Memory Monitor # mem_monitor: Name Type Unit Default Notes usage_warn float %(1e-2) 0.95 Generates warning when physical memory usage reaches a specified value or higher. usage_error float %(1e-2) 0.99 Generates error when physical memory usage reaches a specified value or higher. Net Monitor # net_monitor: Name Type Unit Default Notes devices list[string] n/a none The name of network interface to monitor. (e.g. eth0, * for all network interfaces) usage_warn float %(1e-2) 0.95 Generates warning when network usage reaches a specified value or higher. NTP Monitor # ntp_monitor: Name Type Unit Default Notes server string n/a ntp.ubuntu.com The name of NTP server to synchronize date and time. (e.g. ntp.nict.jp for Japan) offset_warn float sec 0.1 Generates warning when NTP offset reaches a specified value or higher. (default is 100ms) offset_error float sec 5.0 Generates warning when NTP offset reaches a specified value or higher. (default is 5sec) Process Monitor # process_monitor: Name Type Unit Default Notes num_of_procs int n/a 5 The number of processes to generate High-load Proc[0-9] and High-mem Proc[0-9]. GPU Monitor # gpu_monitor: Name Type Unit Default Notes temp_warn float DegC 90.0 Generates warning when GPU temperature reaches a specified value or higher. temp_error float DegC 95.0 Generates error when GPU temperature reaches a specified value or higher. gpu_usage_warn float %(1e-2) 0.90 Generates warning when GPU usage reaches a specified value or higher. gpu_usage_error float %(1e-2) 1.00 Generates error when GPU usage reaches a specified value or higher. memory_usage_warn float %(1e-2) 0.90 Generates warning when GPU memory usage reaches a specified value or higher. memory_usage_error float %(1e-2) 1.00 Generates error when GPU memory usage reaches a specified value or higher.","title":"ROS parameters"},{"location":"system/system_monitor/docs/ros_parameters/#ros-parameters","text":"","title":"ROS parameters"},{"location":"system/system_monitor/docs/ros_parameters/#cpu-monitor","text":"cpu_monitor: Name Type Unit Default Notes temp_warn float DegC 90.0 Generates warning when CPU temperature reaches a specified value or higher. temp_error float DegC 95.0 Generates error when CPU temperature reaches a specified value or higher. usage_warn float %(1e-2) 0.90 Generates warning when CPU usage reaches a specified value or higher. usage_error float %(1e-2) 1.00 Generates error when CPU usage reaches a specified value or higher. load1_warn float %(1e-2) 0.90 Generates warning when load average 1min reaches a specified value or higher. load5_warn float %(1e-2) 0.80 Generates warning when load average 5min reaches a specified value or higher. msr_reader_port int n/a 7634 Port number to connect to msr_reader.","title":"CPU Monitor"},{"location":"system/system_monitor/docs/ros_parameters/#hdd-monitor","text":"hdd_monitor: disks: Name Type Unit Default Notes name string n/a none The disk name to monitor temperature. (e.g. /dev/sda) temp_error float DegC 55.0 Generates warning when HDD temperature reaches a specified value or higher. temp_error float DegC 70.0 Generates error when HDD temperature reaches a specified value or higher. hdd_monitor: Name Type Unit Default Notes hdd_reader_port int n/a 7635 Port number to connect to hdd_reader. usage_warn float %(1e-2) 0.95 Generates warning when disk usage reaches a specified value or higher. usage_error float %(1e-2) 0.99 Generates error when disk usage reaches a specified value or higher.","title":"HDD Monitor"},{"location":"system/system_monitor/docs/ros_parameters/#memory-monitor","text":"mem_monitor: Name Type Unit Default Notes usage_warn float %(1e-2) 0.95 Generates warning when physical memory usage reaches a specified value or higher. usage_error float %(1e-2) 0.99 Generates error when physical memory usage reaches a specified value or higher.","title":"Memory Monitor"},{"location":"system/system_monitor/docs/ros_parameters/#net-monitor","text":"net_monitor: Name Type Unit Default Notes devices list[string] n/a none The name of network interface to monitor. (e.g. eth0, * for all network interfaces) usage_warn float %(1e-2) 0.95 Generates warning when network usage reaches a specified value or higher.","title":"Net Monitor"},{"location":"system/system_monitor/docs/ros_parameters/#ntp-monitor","text":"ntp_monitor: Name Type Unit Default Notes server string n/a ntp.ubuntu.com The name of NTP server to synchronize date and time. (e.g. ntp.nict.jp for Japan) offset_warn float sec 0.1 Generates warning when NTP offset reaches a specified value or higher. (default is 100ms) offset_error float sec 5.0 Generates warning when NTP offset reaches a specified value or higher. (default is 5sec)","title":"NTP Monitor"},{"location":"system/system_monitor/docs/ros_parameters/#process-monitor","text":"process_monitor: Name Type Unit Default Notes num_of_procs int n/a 5 The number of processes to generate High-load Proc[0-9] and High-mem Proc[0-9].","title":"Process Monitor"},{"location":"system/system_monitor/docs/ros_parameters/#gpu-monitor","text":"gpu_monitor: Name Type Unit Default Notes temp_warn float DegC 90.0 Generates warning when GPU temperature reaches a specified value or higher. temp_error float DegC 95.0 Generates error when GPU temperature reaches a specified value or higher. gpu_usage_warn float %(1e-2) 0.90 Generates warning when GPU usage reaches a specified value or higher. gpu_usage_error float %(1e-2) 1.00 Generates error when GPU usage reaches a specified value or higher. memory_usage_warn float %(1e-2) 0.90 Generates warning when GPU memory usage reaches a specified value or higher. memory_usage_error float %(1e-2) 1.00 Generates error when GPU memory usage reaches a specified value or higher.","title":"GPU Monitor"},{"location":"system/system_monitor/docs/seq_diagrams/","text":"Sequence diagrams # CPU Monitor # HDD Monitor # Memory Monitor # Net Monitor # NTP Monitor # Process Monitor # GPU Monitor #","title":"Sequence diagrams"},{"location":"system/system_monitor/docs/seq_diagrams/#sequence-diagrams","text":"","title":"Sequence diagrams"},{"location":"system/system_monitor/docs/seq_diagrams/#cpu-monitor","text":"","title":"CPU Monitor"},{"location":"system/system_monitor/docs/seq_diagrams/#hdd-monitor","text":"","title":"HDD Monitor"},{"location":"system/system_monitor/docs/seq_diagrams/#memory-monitor","text":"","title":"Memory Monitor"},{"location":"system/system_monitor/docs/seq_diagrams/#net-monitor","text":"","title":"Net Monitor"},{"location":"system/system_monitor/docs/seq_diagrams/#ntp-monitor","text":"","title":"NTP Monitor"},{"location":"system/system_monitor/docs/seq_diagrams/#process-monitor","text":"","title":"Process Monitor"},{"location":"system/system_monitor/docs/seq_diagrams/#gpu-monitor","text":"","title":"GPU Monitor"},{"location":"system/system_monitor/docs/topics_cpu_monitor/","text":"ROS topics: CPU Monitor # CPU Temperature # /diagnostics/cpu_monitor: CPU Temperature [summary] level message OK OK WARN warm ERROR hot [values] key (example) value (example) Package id 0, Core [0-9], thermal_zone[0-9] 50.0 DegC *key: thermal_zone[0-9] for ARM architecture. CPU Usage # /diagnostics/cpu_monitor: CPU Usage [summary] level message OK OK WARN high load ERROR very high Lload [values] key value (example) CPU [all,0-9]: status OK / high load / very high load CPU [all,0-9]: usr 2.00% CPU [all,0-9]: nice 0.00% CPU [all,0-9]: sys 1.00% CPU [all,0-9]: idle 97.00% CPU Load Average # /diagnostics/cpu_monitor: CPU Load Average [summary] level message OK OK WARN high load [values] key value (example) 1min 14.50% 5min 14.55% 15min 9.67% CPU Thermal Throttling # Intel and raspi platform only. Tegra platform not supported. /diagnostics/cpu_monitor: CPU Thermal Throttling [summary] level message OK OK ERROR throttling [values for intel platform] key value (example) CPU [0-9]: Pkg Thermal Status OK / throttling [values for raspi platform] key value (example) status All clear / Currently throttled / Soft temperature limit active CPU Frequency # /diagnostics/cpu_monitor: CPU Frequency [summary] level message OK OK [values] key value (example) CPU [0-9]: clock 2879MHz","title":"ROS topics: CPU Monitor"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#ros-topics-cpu-monitor","text":"","title":"ROS topics: CPU Monitor"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-temperature","text":"/diagnostics/cpu_monitor: CPU Temperature [summary] level message OK OK WARN warm ERROR hot [values] key (example) value (example) Package id 0, Core [0-9], thermal_zone[0-9] 50.0 DegC *key: thermal_zone[0-9] for ARM architecture.","title":"CPU Temperature"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-usage","text":"/diagnostics/cpu_monitor: CPU Usage [summary] level message OK OK WARN high load ERROR very high Lload [values] key value (example) CPU [all,0-9]: status OK / high load / very high load CPU [all,0-9]: usr 2.00% CPU [all,0-9]: nice 0.00% CPU [all,0-9]: sys 1.00% CPU [all,0-9]: idle 97.00%","title":"CPU Usage"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-load-average","text":"/diagnostics/cpu_monitor: CPU Load Average [summary] level message OK OK WARN high load [values] key value (example) 1min 14.50% 5min 14.55% 15min 9.67%","title":"CPU Load Average"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-thermal-throttling","text":"Intel and raspi platform only. Tegra platform not supported. /diagnostics/cpu_monitor: CPU Thermal Throttling [summary] level message OK OK ERROR throttling [values for intel platform] key value (example) CPU [0-9]: Pkg Thermal Status OK / throttling [values for raspi platform] key value (example) status All clear / Currently throttled / Soft temperature limit active","title":"CPU Thermal Throttling"},{"location":"system/system_monitor/docs/topics_cpu_monitor/#cpu-frequency","text":"/diagnostics/cpu_monitor: CPU Frequency [summary] level message OK OK [values] key value (example) CPU [0-9]: clock 2879MHz","title":"CPU Frequency"},{"location":"system/system_monitor/docs/topics_gpu_monitor/","text":"ROS topics: GPU Monitor # Intel and tegra platform only. Raspi platform not supported. GPU Temperature # /diagnostics/gpu_monitor: GPU Temperature [summary] level message OK OK WARN warm ERROR hot [values] key (example) value (example) GeForce GTX 1650, thermal_zone[0-9] 46.0 DegC *key: thermal_zone[0-9] for ARM architecture. GPU Usage # /diagnostics/gpu_monitor: GPU Usage [summary] level message OK OK WARN high load ERROR very high load [values] key value (example) GPU [0-9]: status OK / high load / very high load GPU [0-9]: name GeForce GTX 1650, gpu.[0-9] GPU [0-9]: usage 19.0% *key: gpu.[0-9] for ARM architecture. GPU Memory Usage # Intel platform only. There is no separate gpu memory in tegra. Both cpu and gpu uses cpu memory. /diagnostics/gpu_monitor: GPU Memory Usage [summary] level message OK OK WARN high load ERROR very high load [values] key value (example) GPU [0-9]: status OK / high load / very high load GPU [0-9]: name GeForce GTX 1650 GPU [0-9]: usage 13.0% GPU [0-9]: total 3G GPU [0-9]: used 1G GPU [0-9]: free 2G GPU Thermal Throttling # Intel platform only. Tegra platform not supported. /diagnostics/gpu_monitor: GPU Thermal Throttling [summary] level message OK OK ERROR throttling [values] key value (example) GPU [0-9]: status OK / throttling GPU [0-9]: name GeForce GTX 1650 GPU [0-9]: graphics clock 1020 MHz GPU [0-9]: reasons GpuIdle / SwThermalSlowdown etc. GPU Frequency # Tegra platform only. /diagnostics/gpu_monitor: GPU Frequency [summary] level message OK OK [values] key (example) value (example) GPU 17000000.gv11b: clock 318 MHz","title":"ROS topics: GPU Monitor"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#ros-topics-gpu-monitor","text":"Intel and tegra platform only. Raspi platform not supported.","title":"ROS topics: GPU Monitor"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-temperature","text":"/diagnostics/gpu_monitor: GPU Temperature [summary] level message OK OK WARN warm ERROR hot [values] key (example) value (example) GeForce GTX 1650, thermal_zone[0-9] 46.0 DegC *key: thermal_zone[0-9] for ARM architecture.","title":"GPU Temperature"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-usage","text":"/diagnostics/gpu_monitor: GPU Usage [summary] level message OK OK WARN high load ERROR very high load [values] key value (example) GPU [0-9]: status OK / high load / very high load GPU [0-9]: name GeForce GTX 1650, gpu.[0-9] GPU [0-9]: usage 19.0% *key: gpu.[0-9] for ARM architecture.","title":"GPU Usage"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-memory-usage","text":"Intel platform only. There is no separate gpu memory in tegra. Both cpu and gpu uses cpu memory. /diagnostics/gpu_monitor: GPU Memory Usage [summary] level message OK OK WARN high load ERROR very high load [values] key value (example) GPU [0-9]: status OK / high load / very high load GPU [0-9]: name GeForce GTX 1650 GPU [0-9]: usage 13.0% GPU [0-9]: total 3G GPU [0-9]: used 1G GPU [0-9]: free 2G","title":"GPU Memory Usage"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-thermal-throttling","text":"Intel platform only. Tegra platform not supported. /diagnostics/gpu_monitor: GPU Thermal Throttling [summary] level message OK OK ERROR throttling [values] key value (example) GPU [0-9]: status OK / throttling GPU [0-9]: name GeForce GTX 1650 GPU [0-9]: graphics clock 1020 MHz GPU [0-9]: reasons GpuIdle / SwThermalSlowdown etc.","title":"GPU Thermal Throttling"},{"location":"system/system_monitor/docs/topics_gpu_monitor/#gpu-frequency","text":"Tegra platform only. /diagnostics/gpu_monitor: GPU Frequency [summary] level message OK OK [values] key (example) value (example) GPU 17000000.gv11b: clock 318 MHz","title":"GPU Frequency"},{"location":"system/system_monitor/docs/topics_hdd_monitor/","text":"ROS topics: CPU Monitor # HDD Temperature # /diagnostics/hdd_monitor: HDD Temperature [summary] level message OK OK WARN hot ERROR critical hot [values] key value (example) HDD [0-9]: status OK / hot / critical hot HDD [0-9]: name /dev/nvme0 HDD [0-9]: model SAMSUNG MZVLB1T0HBLR-000L7 HDD [0-9]: serial S4EMNF0M820682 HDD [0-9]: temperature 37.0 DegC HDD Usage # /diagnostics/hdd_monitor: HDD Usage [summary] level message OK OK WARN low disk space ERROR very low disk space [values] key value (example) HDD [0-9]: status OK / low disk space / very low disk space HDD [0-9]: filesystem /dev/nvme0n1p4 HDD [0-9]: size 264G HDD [0-9]: used 172G HDD [0-9]: avail 749G HDD [0-9]: use 69% HDD [0-9]: mounted on /","title":"ROS topics: CPU Monitor"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#ros-topics-cpu-monitor","text":"","title":"ROS topics: CPU Monitor"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-temperature","text":"/diagnostics/hdd_monitor: HDD Temperature [summary] level message OK OK WARN hot ERROR critical hot [values] key value (example) HDD [0-9]: status OK / hot / critical hot HDD [0-9]: name /dev/nvme0 HDD [0-9]: model SAMSUNG MZVLB1T0HBLR-000L7 HDD [0-9]: serial S4EMNF0M820682 HDD [0-9]: temperature 37.0 DegC","title":"HDD Temperature"},{"location":"system/system_monitor/docs/topics_hdd_monitor/#hdd-usage","text":"/diagnostics/hdd_monitor: HDD Usage [summary] level message OK OK WARN low disk space ERROR very low disk space [values] key value (example) HDD [0-9]: status OK / low disk space / very low disk space HDD [0-9]: filesystem /dev/nvme0n1p4 HDD [0-9]: size 264G HDD [0-9]: used 172G HDD [0-9]: avail 749G HDD [0-9]: use 69% HDD [0-9]: mounted on /","title":"HDD Usage"},{"location":"system/system_monitor/docs/topics_mem_monitor/","text":"ROS topics: Memory Monitor # Memory Usage # /diagnostics/mem_monitor: Memory Usage [summary] level message OK OK WARN high load ERROR very high load [values] key value (example) Mem: usage 18.99% Mem: total 31G Mem: used 5.9G Mem: free 15G Swap: total 2.0G Swap: used 0B Swap: free 2.0G Total: total 33G Total: used 5.9G Total: free 17G","title":"ROS topics: Memory Monitor"},{"location":"system/system_monitor/docs/topics_mem_monitor/#ros-topics-memory-monitor","text":"","title":"ROS topics: Memory Monitor"},{"location":"system/system_monitor/docs/topics_mem_monitor/#memory-usage","text":"/diagnostics/mem_monitor: Memory Usage [summary] level message OK OK WARN high load ERROR very high load [values] key value (example) Mem: usage 18.99% Mem: total 31G Mem: used 5.9G Mem: free 15G Swap: total 2.0G Swap: used 0B Swap: free 2.0G Total: total 33G Total: used 5.9G Total: free 17G","title":"Memory Usage"},{"location":"system/system_monitor/docs/topics_net_monitor/","text":"ROS topics: Net Monitor # Network Usage # /diagnostics/cpu_monitor: Network Usage [summary] level message OK OK WARN high load ERROR down [values] key value (example) Network [0-9]: status OK / high load / down Network [0-9]: interface name wlp82s0 Network [0-9]: rx_usage 0.00% Network [0-9]: tx_usage 0.00% Network [0-9]: rx_traffic 0.00 MB/s Network [0-9]: tx_traffic 0.00 MB/s Network [0-9]: capacity 400.0 MB/s Network [0-9]: mtu 1500 Network [0-9]: rx_bytes 58455228 Network [0-9]: rx_errors 0 Network [0-9]: tx_bytes 11069136 Network [0-9]: tx_errors 0 Network [0-9]: collisions 0","title":"ROS topics: Net Monitor"},{"location":"system/system_monitor/docs/topics_net_monitor/#ros-topics-net-monitor","text":"","title":"ROS topics: Net Monitor"},{"location":"system/system_monitor/docs/topics_net_monitor/#network-usage","text":"/diagnostics/cpu_monitor: Network Usage [summary] level message OK OK WARN high load ERROR down [values] key value (example) Network [0-9]: status OK / high load / down Network [0-9]: interface name wlp82s0 Network [0-9]: rx_usage 0.00% Network [0-9]: tx_usage 0.00% Network [0-9]: rx_traffic 0.00 MB/s Network [0-9]: tx_traffic 0.00 MB/s Network [0-9]: capacity 400.0 MB/s Network [0-9]: mtu 1500 Network [0-9]: rx_bytes 58455228 Network [0-9]: rx_errors 0 Network [0-9]: tx_bytes 11069136 Network [0-9]: tx_errors 0 Network [0-9]: collisions 0","title":"Network Usage"},{"location":"system/system_monitor/docs/topics_ntp_monitor/","text":"ROS topics: NTP Monitor # NTP Offset # /diagnostics/ntp_monitor: NTP Offset [summary] level message OK OK WARN high ERROR too high [values] key value (example) NTP Offset -0.013181 sec NTP Delay 0.053880 sec","title":"ROS topics: NTP Monitor"},{"location":"system/system_monitor/docs/topics_ntp_monitor/#ros-topics-ntp-monitor","text":"","title":"ROS topics: NTP Monitor"},{"location":"system/system_monitor/docs/topics_ntp_monitor/#ntp-offset","text":"/diagnostics/ntp_monitor: NTP Offset [summary] level message OK OK WARN high ERROR too high [values] key value (example) NTP Offset -0.013181 sec NTP Delay 0.053880 sec","title":"NTP Offset"},{"location":"system/system_monitor/docs/topics_process_monitor/","text":"ROS topics: Process Monitor # Tasks Summary # /diagnostics/process_monitor: Tasks Summary [summary] level message OK OK [values] key value (example) total 409 running 2 sleeping 321 stopped 0 zombie 0 High-load Proc[0-9] # /diagnostics/process_monitor: High-load Proc[0-9] [summary] level message OK OK [values] key value (example) COMMAND /usr/lib/firefox/firefox %CPU 37.5 %MEM 2.1 PID 14062 USER autoware PR 20 NI 0 VIRT 3461152 RES 669052 SHR 481208 S S TIME+ 23:57.49 High-mem Proc[0-9] # /diagnostics/process_monitor: High-mem Proc[0-9] [summary] level message OK OK [values] key value (example) COMMAND /snap/multipass/1784/usr/bin/qemu-system-x86_64 %CPU 0 %MEM 2.5 PID 1565 USER root PR 20 NI 0 VIRT 3722320 RES 812432 SHR 20340 S S TIME+ 0:22.84","title":"ROS topics: Process Monitor"},{"location":"system/system_monitor/docs/topics_process_monitor/#ros-topics-process-monitor","text":"","title":"ROS topics: Process Monitor"},{"location":"system/system_monitor/docs/topics_process_monitor/#tasks-summary","text":"/diagnostics/process_monitor: Tasks Summary [summary] level message OK OK [values] key value (example) total 409 running 2 sleeping 321 stopped 0 zombie 0","title":"Tasks Summary"},{"location":"system/system_monitor/docs/topics_process_monitor/#high-load-proc0-9","text":"/diagnostics/process_monitor: High-load Proc[0-9] [summary] level message OK OK [values] key value (example) COMMAND /usr/lib/firefox/firefox %CPU 37.5 %MEM 2.1 PID 14062 USER autoware PR 20 NI 0 VIRT 3461152 RES 669052 SHR 481208 S S TIME+ 23:57.49","title":"High-load Proc[0-9]"},{"location":"system/system_monitor/docs/topics_process_monitor/#high-mem-proc0-9","text":"/diagnostics/process_monitor: High-mem Proc[0-9] [summary] level message OK OK [values] key value (example) COMMAND /snap/multipass/1784/usr/bin/qemu-system-x86_64 %CPU 0 %MEM 2.5 PID 1565 USER root PR 20 NI 0 VIRT 3722320 RES 812432 SHR 20340 S S TIME+ 0:22.84","title":"High-mem Proc[0-9]"},{"location":"system/util/dummy_infrastructure/","text":"dummy_infrastructure # This is a debug node for infrastructure communication. Usage # ros2 launch dummy_infrastructure dummy_infrastructure.launch.xml ros2 run rqt_reconfigure rqt_reconfigure","title":"dummy_infrastructure"},{"location":"system/util/dummy_infrastructure/#dummy_infrastructure","text":"This is a debug node for infrastructure communication.","title":"dummy_infrastructure"},{"location":"system/util/dummy_infrastructure/#usage","text":"ros2 launch dummy_infrastructure dummy_infrastructure.launch.xml ros2 run rqt_reconfigure rqt_reconfigure","title":"Usage"},{"location":"vehicle/as/","text":"How to build and use AS node in Autoware # Clone the autoware repository After cloning autoware get all the submodules. git submodule update --init --recursive Build the workspace There is no GUI interface to launch this node. Hence use, roslaunch as ssc_interface.launch","title":"How to build and use AS node in Autoware"},{"location":"vehicle/as/#how-to-build-and-use-as-node-in-autoware","text":"Clone the autoware repository After cloning autoware get all the submodules. git submodule update --init --recursive Build the workspace There is no GUI interface to launch this node. Hence use, roslaunch as ssc_interface.launch","title":"How to build and use AS node in Autoware"}]}